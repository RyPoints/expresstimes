{"ast":null,"code":"\"use strict\";\n\nconst Deferred = require(\"./Deferred\");\n\nconst errors = require(\"./errors\");\n\nfunction fbind(fn, ctx) {\n  return function bound() {\n    return fn.apply(ctx, arguments);\n  };\n}\n/**\n * Wraps a users request for a resource\n * Basically a promise mashed in with a timeout\n * @private\n */\n\n\nclass ResourceRequest extends Deferred {\n  /**\n   * [constructor description]\n   * @param  {Number} ttl     timeout\n   */\n  constructor(ttl, Promise) {\n    super(Promise);\n    this._creationTimestamp = Date.now();\n    this._timeout = null;\n\n    if (ttl !== undefined) {\n      this.setTimeout(ttl);\n    }\n  }\n\n  setTimeout(delay) {\n    if (this._state !== ResourceRequest.PENDING) {\n      return;\n    }\n\n    const ttl = parseInt(delay, 10);\n\n    if (isNaN(ttl) || ttl <= 0) {\n      throw new Error(\"delay must be a positive int\");\n    }\n\n    const age = Date.now() - this._creationTimestamp;\n\n    if (this._timeout) {\n      this.removeTimeout();\n    }\n\n    this._timeout = setTimeout(fbind(this._fireTimeout, this), Math.max(ttl - age, 0));\n  }\n\n  removeTimeout() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n\n    this._timeout = null;\n  }\n\n  _fireTimeout() {\n    this.reject(new errors.TimeoutError(\"ResourceRequest timed out\"));\n  }\n\n  reject(reason) {\n    this.removeTimeout();\n    super.reject(reason);\n  }\n\n  resolve(value) {\n    this.removeTimeout();\n    super.resolve(value);\n  }\n\n}\n\nmodule.exports = ResourceRequest;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp5/expresstimes/node_modules/generic-pool/lib/ResourceRequest.js"],"names":["Deferred","require","errors","fbind","fn","ctx","bound","apply","arguments","ResourceRequest","constructor","ttl","Promise","_creationTimestamp","Date","now","_timeout","undefined","setTimeout","delay","_state","PENDING","parseInt","isNaN","Error","age","removeTimeout","_fireTimeout","Math","max","clearTimeout","reject","TimeoutError","reason","resolve","value","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,UAAD,CAAtB;;AAEA,SAASE,KAAT,CAAeC,EAAf,EAAmBC,GAAnB,EAAwB;AACtB,SAAO,SAASC,KAAT,GAAiB;AACtB,WAAOF,EAAE,CAACG,KAAH,CAASF,GAAT,EAAcG,SAAd,CAAP;AACD,GAFD;AAGD;AAED;;;;;;;AAKA,MAAMC,eAAN,SAA8BT,QAA9B,CAAuC;AACrC;;;;AAIAU,EAAAA,WAAW,CAACC,GAAD,EAAMC,OAAN,EAAe;AACxB,UAAMA,OAAN;AACA,SAAKC,kBAAL,GAA0BC,IAAI,CAACC,GAAL,EAA1B;AACA,SAAKC,QAAL,GAAgB,IAAhB;;AAEA,QAAIL,GAAG,KAAKM,SAAZ,EAAuB;AACrB,WAAKC,UAAL,CAAgBP,GAAhB;AACD;AACF;;AAEDO,EAAAA,UAAU,CAACC,KAAD,EAAQ;AAChB,QAAI,KAAKC,MAAL,KAAgBX,eAAe,CAACY,OAApC,EAA6C;AAC3C;AACD;;AACD,UAAMV,GAAG,GAAGW,QAAQ,CAACH,KAAD,EAAQ,EAAR,CAApB;;AAEA,QAAII,KAAK,CAACZ,GAAD,CAAL,IAAcA,GAAG,IAAI,CAAzB,EAA4B;AAC1B,YAAM,IAAIa,KAAJ,CAAU,8BAAV,CAAN;AACD;;AAED,UAAMC,GAAG,GAAGX,IAAI,CAACC,GAAL,KAAa,KAAKF,kBAA9B;;AAEA,QAAI,KAAKG,QAAT,EAAmB;AACjB,WAAKU,aAAL;AACD;;AAED,SAAKV,QAAL,GAAgBE,UAAU,CACxBf,KAAK,CAAC,KAAKwB,YAAN,EAAoB,IAApB,CADmB,EAExBC,IAAI,CAACC,GAAL,CAASlB,GAAG,GAAGc,GAAf,EAAoB,CAApB,CAFwB,CAA1B;AAID;;AAEDC,EAAAA,aAAa,GAAG;AACd,QAAI,KAAKV,QAAT,EAAmB;AACjBc,MAAAA,YAAY,CAAC,KAAKd,QAAN,CAAZ;AACD;;AACD,SAAKA,QAAL,GAAgB,IAAhB;AACD;;AAEDW,EAAAA,YAAY,GAAG;AACb,SAAKI,MAAL,CAAY,IAAI7B,MAAM,CAAC8B,YAAX,CAAwB,2BAAxB,CAAZ;AACD;;AAEDD,EAAAA,MAAM,CAACE,MAAD,EAAS;AACb,SAAKP,aAAL;AACA,UAAMK,MAAN,CAAaE,MAAb;AACD;;AAEDC,EAAAA,OAAO,CAACC,KAAD,EAAQ;AACb,SAAKT,aAAL;AACA,UAAMQ,OAAN,CAAcC,KAAd;AACD;;AAxDoC;;AA2DvCC,MAAM,CAACC,OAAP,GAAiB5B,eAAjB","sourcesContent":["\"use strict\";\n\nconst Deferred = require(\"./Deferred\");\nconst errors = require(\"./errors\");\n\nfunction fbind(fn, ctx) {\n  return function bound() {\n    return fn.apply(ctx, arguments);\n  };\n}\n\n/**\n * Wraps a users request for a resource\n * Basically a promise mashed in with a timeout\n * @private\n */\nclass ResourceRequest extends Deferred {\n  /**\n   * [constructor description]\n   * @param  {Number} ttl     timeout\n   */\n  constructor(ttl, Promise) {\n    super(Promise);\n    this._creationTimestamp = Date.now();\n    this._timeout = null;\n\n    if (ttl !== undefined) {\n      this.setTimeout(ttl);\n    }\n  }\n\n  setTimeout(delay) {\n    if (this._state !== ResourceRequest.PENDING) {\n      return;\n    }\n    const ttl = parseInt(delay, 10);\n\n    if (isNaN(ttl) || ttl <= 0) {\n      throw new Error(\"delay must be a positive int\");\n    }\n\n    const age = Date.now() - this._creationTimestamp;\n\n    if (this._timeout) {\n      this.removeTimeout();\n    }\n\n    this._timeout = setTimeout(\n      fbind(this._fireTimeout, this),\n      Math.max(ttl - age, 0)\n    );\n  }\n\n  removeTimeout() {\n    if (this._timeout) {\n      clearTimeout(this._timeout);\n    }\n    this._timeout = null;\n  }\n\n  _fireTimeout() {\n    this.reject(new errors.TimeoutError(\"ResourceRequest timed out\"));\n  }\n\n  reject(reason) {\n    this.removeTimeout();\n    super.reject(reason);\n  }\n\n  resolve(value) {\n    this.removeTimeout();\n    super.resolve(value);\n  }\n}\n\nmodule.exports = ResourceRequest;\n"]},"metadata":{},"sourceType":"script"}