{"ast":null,"code":"'use strict';\n\nmodule.exports = function generate_switch(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $ifPassed = 'ifPassed' + it.level,\n      $currentBaseId = $it.baseId,\n      $shouldContinue;\n  out += 'var ' + $ifPassed + ';';\n  var arr1 = $schema;\n\n  if (arr1) {\n    var $sch,\n        $caseIndex = -1,\n        l1 = arr1.length - 1;\n\n    while ($caseIndex < l1) {\n      $sch = arr1[$caseIndex += 1];\n\n      if ($caseIndex && !$shouldContinue) {\n        out += ' if (!' + $ifPassed + ') { ';\n        $closingBraces += '}';\n      }\n\n      if ($sch.if && it.util.schemaHasRules($sch.if, it.RULES.all)) {\n        out += ' var ' + $errs + ' = errors;   ';\n        var $wasComposite = it.compositeRule;\n        it.compositeRule = $it.compositeRule = true;\n        $it.createErrors = false;\n        $it.schema = $sch.if;\n        $it.schemaPath = $schemaPath + '[' + $caseIndex + '].if';\n        $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/if';\n        out += '  ' + it.validate($it) + ' ';\n        $it.baseId = $currentBaseId;\n        $it.createErrors = true;\n        it.compositeRule = $it.compositeRule = $wasComposite;\n        out += ' ' + $ifPassed + ' = ' + $nextValid + '; if (' + $ifPassed + ') {  ';\n\n        if (typeof $sch.then == 'boolean') {\n          if ($sch.then === false) {\n            var $$outStack = $$outStack || [];\n            $$outStack.push(out);\n            out = '';\n            /* istanbul ignore else */\n\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + 'switch' + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { caseIndex: ' + $caseIndex + ' } ';\n\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should pass \"switch\" keyword validation\\' ';\n              }\n\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n              }\n\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n\n            var __err = out;\n            out = $$outStack.pop();\n\n            if (!it.compositeRule && $breakOnError) {\n              /* istanbul ignore if */\n              if (it.async) {\n                out += ' throw new ValidationError([' + __err + ']); ';\n              } else {\n                out += ' validate.errors = [' + __err + ']; return false; ';\n              }\n            } else {\n              out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n            }\n          }\n\n          out += ' var ' + $nextValid + ' = ' + $sch.then + '; ';\n        } else {\n          $it.schema = $sch.then;\n          $it.schemaPath = $schemaPath + '[' + $caseIndex + '].then';\n          $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/then';\n          out += '  ' + it.validate($it) + ' ';\n          $it.baseId = $currentBaseId;\n        }\n\n        out += '  } else {  errors = ' + $errs + '; if (vErrors !== null) { if (' + $errs + ') vErrors.length = ' + $errs + '; else vErrors = null; } } ';\n      } else {\n        out += ' ' + $ifPassed + ' = true;  ';\n\n        if (typeof $sch.then == 'boolean') {\n          if ($sch.then === false) {\n            var $$outStack = $$outStack || [];\n            $$outStack.push(out);\n            out = '';\n            /* istanbul ignore else */\n\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + 'switch' + '\\' , dataPath: (dataPath || \\'\\') + ' + it.errorPath + ' , schemaPath: ' + it.util.toQuotedString($errSchemaPath) + ' , params: { caseIndex: ' + $caseIndex + ' } ';\n\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should pass \"switch\" keyword validation\\' ';\n              }\n\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + $schemaPath + ' , parentSchema: validate.schema' + it.schemaPath + ' , data: ' + $data + ' ';\n              }\n\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n\n            var __err = out;\n            out = $$outStack.pop();\n\n            if (!it.compositeRule && $breakOnError) {\n              /* istanbul ignore if */\n              if (it.async) {\n                out += ' throw new ValidationError([' + __err + ']); ';\n              } else {\n                out += ' validate.errors = [' + __err + ']; return false; ';\n              }\n            } else {\n              out += ' var err = ' + __err + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n            }\n          }\n\n          out += ' var ' + $nextValid + ' = ' + $sch.then + '; ';\n        } else {\n          $it.schema = $sch.then;\n          $it.schemaPath = $schemaPath + '[' + $caseIndex + '].then';\n          $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/then';\n          out += '  ' + it.validate($it) + ' ';\n          $it.baseId = $currentBaseId;\n        }\n      }\n\n      $shouldContinue = $sch.continue;\n    }\n  }\n\n  out += '' + $closingBraces + 'var ' + $valid + ' = ' + $nextValid + '; ';\n  out = it.util.cleanUpCode(out);\n  return out;\n};","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/node_modules/ajv-keywords/keywords/dotjs/switch.js"],"names":["module","exports","generate_switch","it","$keyword","$ruleType","out","$lvl","level","$dataLvl","dataLevel","$schema","schema","$schemaPath","schemaPath","util","getProperty","$errSchemaPath","errSchemaPath","$breakOnError","opts","allErrors","$data","$valid","$errs","$it","copy","$closingBraces","$nextValid","$ifPassed","$currentBaseId","baseId","$shouldContinue","arr1","$sch","$caseIndex","l1","length","if","schemaHasRules","RULES","all","$wasComposite","compositeRule","createErrors","validate","then","$$outStack","push","errorPath","toQuotedString","messages","verbose","__err","pop","async","continue","cleanUpCode"],"mappings":"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","sourcesContent":["'use strict';\nmodule.exports = function generate_switch(it, $keyword, $ruleType) {\n  var out = ' ';\n  var $lvl = it.level;\n  var $dataLvl = it.dataLevel;\n  var $schema = it.schema[$keyword];\n  var $schemaPath = it.schemaPath + it.util.getProperty($keyword);\n  var $errSchemaPath = it.errSchemaPath + '/' + $keyword;\n  var $breakOnError = !it.opts.allErrors;\n  var $data = 'data' + ($dataLvl || '');\n  var $valid = 'valid' + $lvl;\n  var $errs = 'errs__' + $lvl;\n  var $it = it.util.copy(it);\n  var $closingBraces = '';\n  $it.level++;\n  var $nextValid = 'valid' + $it.level;\n  var $ifPassed = 'ifPassed' + it.level,\n    $currentBaseId = $it.baseId,\n    $shouldContinue;\n  out += 'var ' + ($ifPassed) + ';';\n  var arr1 = $schema;\n  if (arr1) {\n    var $sch, $caseIndex = -1,\n      l1 = arr1.length - 1;\n    while ($caseIndex < l1) {\n      $sch = arr1[$caseIndex += 1];\n      if ($caseIndex && !$shouldContinue) {\n        out += ' if (!' + ($ifPassed) + ') { ';\n        $closingBraces += '}';\n      }\n      if ($sch.if && it.util.schemaHasRules($sch.if, it.RULES.all)) {\n        out += ' var ' + ($errs) + ' = errors;   ';\n        var $wasComposite = it.compositeRule;\n        it.compositeRule = $it.compositeRule = true;\n        $it.createErrors = false;\n        $it.schema = $sch.if;\n        $it.schemaPath = $schemaPath + '[' + $caseIndex + '].if';\n        $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/if';\n        out += '  ' + (it.validate($it)) + ' ';\n        $it.baseId = $currentBaseId;\n        $it.createErrors = true;\n        it.compositeRule = $it.compositeRule = $wasComposite;\n        out += ' ' + ($ifPassed) + ' = ' + ($nextValid) + '; if (' + ($ifPassed) + ') {  ';\n        if (typeof $sch.then == 'boolean') {\n          if ($sch.then === false) {\n            var $$outStack = $$outStack || [];\n            $$outStack.push(out);\n            out = ''; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ('switch') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { caseIndex: ' + ($caseIndex) + ' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should pass \"switch\" keyword validation\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            var __err = out;\n            out = $$outStack.pop();\n            if (!it.compositeRule && $breakOnError) {\n              /* istanbul ignore if */\n              if (it.async) {\n                out += ' throw new ValidationError([' + (__err) + ']); ';\n              } else {\n                out += ' validate.errors = [' + (__err) + ']; return false; ';\n              }\n            } else {\n              out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n            }\n          }\n          out += ' var ' + ($nextValid) + ' = ' + ($sch.then) + '; ';\n        } else {\n          $it.schema = $sch.then;\n          $it.schemaPath = $schemaPath + '[' + $caseIndex + '].then';\n          $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/then';\n          out += '  ' + (it.validate($it)) + ' ';\n          $it.baseId = $currentBaseId;\n        }\n        out += '  } else {  errors = ' + ($errs) + '; if (vErrors !== null) { if (' + ($errs) + ') vErrors.length = ' + ($errs) + '; else vErrors = null; } } ';\n      } else {\n        out += ' ' + ($ifPassed) + ' = true;  ';\n        if (typeof $sch.then == 'boolean') {\n          if ($sch.then === false) {\n            var $$outStack = $$outStack || [];\n            $$outStack.push(out);\n            out = ''; /* istanbul ignore else */\n            if (it.createErrors !== false) {\n              out += ' { keyword: \\'' + ('switch') + '\\' , dataPath: (dataPath || \\'\\') + ' + (it.errorPath) + ' , schemaPath: ' + (it.util.toQuotedString($errSchemaPath)) + ' , params: { caseIndex: ' + ($caseIndex) + ' } ';\n              if (it.opts.messages !== false) {\n                out += ' , message: \\'should pass \"switch\" keyword validation\\' ';\n              }\n              if (it.opts.verbose) {\n                out += ' , schema: validate.schema' + ($schemaPath) + ' , parentSchema: validate.schema' + (it.schemaPath) + ' , data: ' + ($data) + ' ';\n              }\n              out += ' } ';\n            } else {\n              out += ' {} ';\n            }\n            var __err = out;\n            out = $$outStack.pop();\n            if (!it.compositeRule && $breakOnError) {\n              /* istanbul ignore if */\n              if (it.async) {\n                out += ' throw new ValidationError([' + (__err) + ']); ';\n              } else {\n                out += ' validate.errors = [' + (__err) + ']; return false; ';\n              }\n            } else {\n              out += ' var err = ' + (__err) + ';  if (vErrors === null) vErrors = [err]; else vErrors.push(err); errors++; ';\n            }\n          }\n          out += ' var ' + ($nextValid) + ' = ' + ($sch.then) + '; ';\n        } else {\n          $it.schema = $sch.then;\n          $it.schemaPath = $schemaPath + '[' + $caseIndex + '].then';\n          $it.errSchemaPath = $errSchemaPath + '/' + $caseIndex + '/then';\n          out += '  ' + (it.validate($it)) + ' ';\n          $it.baseId = $currentBaseId;\n        }\n      }\n      $shouldContinue = $sch.continue\n    }\n  }\n  out += '' + ($closingBraces) + 'var ' + ($valid) + ' = ' + ($nextValid) + '; ';\n  out = it.util.cleanUpCode(out);\n  return out;\n}\n"]},"metadata":{},"sourceType":"script"}