{"ast":null,"code":"'use strict';\n\nclass AbstractDialect {}\n\nAbstractDialect.prototype.supports = {\n  'DEFAULT': true,\n  'DEFAULT VALUES': false,\n  'VALUES ()': false,\n  'LIMIT ON UPDATE': false,\n  'ON DUPLICATE KEY': true,\n  'ORDER NULLS': false,\n  'UNION': true,\n  'UNION ALL': true,\n  'RIGHT JOIN': true,\n\n  /* does the dialect support returning values for inserted/updated fields */\n  returnValues: false,\n\n  /* features specific to autoIncrement values */\n  autoIncrement: {\n    /* does the dialect require modification of insert queries when inserting auto increment fields */\n    identityInsert: false,\n\n    /* does the dialect support inserting default/null values for autoincrement fields */\n    defaultValue: true,\n\n    /* does the dialect support updating autoincrement fields */\n    update: true\n  },\n\n  /* Do we need to say DEFAULT for bulk insert */\n  bulkDefault: false,\n  schemas: false,\n  transactions: true,\n  settingIsolationLevelDuringTransaction: true,\n  transactionOptions: {\n    type: false\n  },\n  migrations: true,\n  upserts: true,\n  inserts: {\n    ignoreDuplicates: '',\n\n    /* dialect specific words for INSERT IGNORE or DO NOTHING */\n    updateOnDuplicate: false,\n\n    /* whether dialect supports ON DUPLICATE KEY UPDATE */\n    onConflictDoNothing: ''\n    /* dialect specific words for ON CONFLICT DO NOTHING */\n\n  },\n  constraints: {\n    restrict: true,\n    addConstraint: true,\n    dropConstraint: true,\n    unique: true,\n    default: false,\n    check: true,\n    foreignKey: true,\n    primaryKey: true\n  },\n  index: {\n    collate: true,\n    length: false,\n    parser: false,\n    concurrently: false,\n    type: false,\n    using: true,\n    functionBased: false\n  },\n  joinTableDependent: true,\n  groupedLimit: true,\n  indexViaAlter: false,\n  JSON: false,\n  deferrableConstraints: false\n};\nmodule.exports = AbstractDialect;\nmodule.exports.AbstractDialect = AbstractDialect;\nmodule.exports.default = AbstractDialect;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp5/expresstimes/node_modules/sequelize/lib/dialects/abstract/index.js"],"names":["AbstractDialect","prototype","supports","returnValues","autoIncrement","identityInsert","defaultValue","update","bulkDefault","schemas","transactions","settingIsolationLevelDuringTransaction","transactionOptions","type","migrations","upserts","inserts","ignoreDuplicates","updateOnDuplicate","onConflictDoNothing","constraints","restrict","addConstraint","dropConstraint","unique","default","check","foreignKey","primaryKey","index","collate","length","parser","concurrently","using","functionBased","joinTableDependent","groupedLimit","indexViaAlter","JSON","deferrableConstraints","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,eAAN,CAAsB;;AAEtBA,eAAe,CAACC,SAAhB,CAA0BC,QAA1B,GAAqC;AACnC,aAAW,IADwB;AAEnC,oBAAkB,KAFiB;AAGnC,eAAa,KAHsB;AAInC,qBAAmB,KAJgB;AAKnC,sBAAoB,IALe;AAMnC,iBAAe,KANoB;AAOnC,WAAS,IAP0B;AAQnC,eAAa,IARsB;AASnC,gBAAc,IATqB;;AAWnC;AACAC,EAAAA,YAAY,EAAE,KAZqB;;AAcnC;AACAC,EAAAA,aAAa,EAAE;AACb;AACAC,IAAAA,cAAc,EAAE,KAFH;;AAIb;AACAC,IAAAA,YAAY,EAAE,IALD;;AAOb;AACAC,IAAAA,MAAM,EAAE;AARK,GAfoB;;AAyBnC;AACAC,EAAAA,WAAW,EAAE,KA1BsB;AA2BnCC,EAAAA,OAAO,EAAE,KA3B0B;AA4BnCC,EAAAA,YAAY,EAAE,IA5BqB;AA6BnCC,EAAAA,sCAAsC,EAAE,IA7BL;AA8BnCC,EAAAA,kBAAkB,EAAE;AAClBC,IAAAA,IAAI,EAAE;AADY,GA9Be;AAiCnCC,EAAAA,UAAU,EAAE,IAjCuB;AAkCnCC,EAAAA,OAAO,EAAE,IAlC0B;AAmCnCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,gBAAgB,EAAE,EADX;;AACe;AACtBC,IAAAA,iBAAiB,EAAE,KAFZ;;AAEmB;AAC1BC,IAAAA,mBAAmB,EAAE;AAAG;;AAHjB,GAnC0B;AAwCnCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,QAAQ,EAAE,IADC;AAEXC,IAAAA,aAAa,EAAE,IAFJ;AAGXC,IAAAA,cAAc,EAAE,IAHL;AAIXC,IAAAA,MAAM,EAAE,IAJG;AAKXC,IAAAA,OAAO,EAAE,KALE;AAMXC,IAAAA,KAAK,EAAE,IANI;AAOXC,IAAAA,UAAU,EAAE,IAPD;AAQXC,IAAAA,UAAU,EAAE;AARD,GAxCsB;AAkDnCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,IADJ;AAELC,IAAAA,MAAM,EAAE,KAFH;AAGLC,IAAAA,MAAM,EAAE,KAHH;AAILC,IAAAA,YAAY,EAAE,KAJT;AAKLpB,IAAAA,IAAI,EAAE,KALD;AAMLqB,IAAAA,KAAK,EAAE,IANF;AAOLC,IAAAA,aAAa,EAAE;AAPV,GAlD4B;AA2DnCC,EAAAA,kBAAkB,EAAE,IA3De;AA4DnCC,EAAAA,YAAY,EAAE,IA5DqB;AA6DnCC,EAAAA,aAAa,EAAE,KA7DoB;AA8DnCC,EAAAA,IAAI,EAAE,KA9D6B;AA+DnCC,EAAAA,qBAAqB,EAAE;AA/DY,CAArC;AAkEAC,MAAM,CAACC,OAAP,GAAiB1C,eAAjB;AACAyC,MAAM,CAACC,OAAP,CAAe1C,eAAf,GAAiCA,eAAjC;AACAyC,MAAM,CAACC,OAAP,CAAejB,OAAf,GAAyBzB,eAAzB","sourcesContent":["'use strict';\n\nclass AbstractDialect {}\n\nAbstractDialect.prototype.supports = {\n  'DEFAULT': true,\n  'DEFAULT VALUES': false,\n  'VALUES ()': false,\n  'LIMIT ON UPDATE': false,\n  'ON DUPLICATE KEY': true,\n  'ORDER NULLS': false,\n  'UNION': true,\n  'UNION ALL': true,\n  'RIGHT JOIN': true,\n\n  /* does the dialect support returning values for inserted/updated fields */\n  returnValues: false,\n\n  /* features specific to autoIncrement values */\n  autoIncrement: {\n    /* does the dialect require modification of insert queries when inserting auto increment fields */\n    identityInsert: false,\n\n    /* does the dialect support inserting default/null values for autoincrement fields */\n    defaultValue: true,\n\n    /* does the dialect support updating autoincrement fields */\n    update: true\n  },\n  /* Do we need to say DEFAULT for bulk insert */\n  bulkDefault: false,\n  schemas: false,\n  transactions: true,\n  settingIsolationLevelDuringTransaction: true,\n  transactionOptions: {\n    type: false\n  },\n  migrations: true,\n  upserts: true,\n  inserts: {\n    ignoreDuplicates: '', /* dialect specific words for INSERT IGNORE or DO NOTHING */\n    updateOnDuplicate: false, /* whether dialect supports ON DUPLICATE KEY UPDATE */\n    onConflictDoNothing: '' /* dialect specific words for ON CONFLICT DO NOTHING */\n  },\n  constraints: {\n    restrict: true,\n    addConstraint: true,\n    dropConstraint: true,\n    unique: true,\n    default: false,\n    check: true,\n    foreignKey: true,\n    primaryKey: true\n  },\n  index: {\n    collate: true,\n    length: false,\n    parser: false,\n    concurrently: false,\n    type: false,\n    using: true,\n    functionBased: false\n  },\n  joinTableDependent: true,\n  groupedLimit: true,\n  indexViaAlter: false,\n  JSON: false,\n  deferrableConstraints: false\n};\n\nmodule.exports = AbstractDialect;\nmodule.exports.AbstractDialect = AbstractDialect;\nmodule.exports.default = AbstractDialect;\n"]},"metadata":{},"sourceType":"script"}