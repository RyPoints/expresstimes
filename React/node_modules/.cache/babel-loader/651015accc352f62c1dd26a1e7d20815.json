{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst NULL = (1 << 16) - 1;\nconst NChar = {\n  id: 0xEF,\n  type: 'NCHAR',\n  name: 'NChar',\n  maximumLength: 4000,\n  declaration: function declaration(parameter) {\n    // const value = parameter.value as null | string | { toString(): string };\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    let length;\n\n    if (parameter.length) {\n      length = parameter.length;\n    } else if (parameter.value != null) {\n      length = value.toString().length || 1;\n    } else if (parameter.value === null && !parameter.output) {\n      length = 1;\n    } else {\n      length = this.maximumLength;\n    }\n\n    if (length < this.maximumLength) {\n      return 'nchar(' + length + ')';\n    } else {\n      return 'nchar(' + this.maximumLength + ')';\n    }\n  },\n  resolveLength: function resolveLength(parameter) {\n    // const value = parameter.value as null | string | { toString(): string };\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    if (parameter.length != null) {\n      return parameter.length;\n    } else if (parameter.value != null) {\n      if (Buffer.isBuffer(parameter.value)) {\n        return parameter.value.length / 2 || 1;\n      } else {\n        return value.toString().length || 1;\n      }\n    } else {\n      return this.maximumLength;\n    }\n  },\n  writeTypeInfo: function writeTypeInfo(buffer, parameter) {\n    buffer.writeUInt8(this.id);\n    buffer.writeUInt16LE(parameter.length * 2);\n    buffer.writeBuffer(Buffer.from([0x00, 0x00, 0x00, 0x00, 0x00]));\n  },\n  writeParameterData: function writeParameterData(buffer, parameter, options, cb) {\n    if (parameter.value != null) {\n      buffer.writeUsVarbyte(parameter.value, 'ucs2');\n    } else {\n      buffer.writeUInt16LE(NULL);\n    }\n\n    cb();\n  },\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'string') {\n      if (typeof value.toString !== 'function') {\n        return TypeError('Invalid string.');\n      }\n\n      value = value.toString();\n    }\n\n    return value;\n  }\n};\nvar _default = NChar;\nexports.default = _default;\nmodule.exports = NChar;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp5/expresstimes/node_modules/tedious/lib/data-types/nchar.js"],"names":["Object","defineProperty","exports","value","default","NULL","NChar","id","type","name","maximumLength","declaration","parameter","length","toString","output","resolveLength","Buffer","isBuffer","writeTypeInfo","buffer","writeUInt8","writeUInt16LE","writeBuffer","from","writeParameterData","options","cb","writeUsVarbyte","validate","TypeError","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst NULL = (1 << 16) - 1;\nconst NChar = {\n  id: 0xEF,\n  type: 'NCHAR',\n  name: 'NChar',\n  maximumLength: 4000,\n  declaration: function declaration(parameter) {\n    // const value = parameter.value as null | string | { toString(): string };\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    let length;\n\n    if (parameter.length) {\n      length = parameter.length;\n    } else if (parameter.value != null) {\n      length = value.toString().length || 1;\n    } else if (parameter.value === null && !parameter.output) {\n      length = 1;\n    } else {\n      length = this.maximumLength;\n    }\n\n    if (length < this.maximumLength) {\n      return 'nchar(' + length + ')';\n    } else {\n      return 'nchar(' + this.maximumLength + ')';\n    }\n  },\n  resolveLength: function resolveLength(parameter) {\n    // const value = parameter.value as null | string | { toString(): string };\n    const value = parameter.value; // Temporary solution. Remove 'any' later.\n\n    if (parameter.length != null) {\n      return parameter.length;\n    } else if (parameter.value != null) {\n      if (Buffer.isBuffer(parameter.value)) {\n        return parameter.value.length / 2 || 1;\n      } else {\n        return value.toString().length || 1;\n      }\n    } else {\n      return this.maximumLength;\n    }\n  },\n  writeTypeInfo: function writeTypeInfo(buffer, parameter) {\n    buffer.writeUInt8(this.id);\n    buffer.writeUInt16LE(parameter.length * 2);\n    buffer.writeBuffer(Buffer.from([0x00, 0x00, 0x00, 0x00, 0x00]));\n  },\n  writeParameterData: function writeParameterData(buffer, parameter, options, cb) {\n    if (parameter.value != null) {\n      buffer.writeUsVarbyte(parameter.value, 'ucs2');\n    } else {\n      buffer.writeUInt16LE(NULL);\n    }\n\n    cb();\n  },\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'string') {\n      if (typeof value.toString !== 'function') {\n        return TypeError('Invalid string.');\n      }\n\n      value = value.toString();\n    }\n\n    return value;\n  }\n};\nvar _default = NChar;\nexports.default = _default;\nmodule.exports = NChar;"]},"metadata":{},"sourceType":"script"}