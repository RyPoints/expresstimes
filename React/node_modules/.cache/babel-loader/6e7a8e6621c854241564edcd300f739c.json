{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _token = require(\"./token\");\n\nconst FEDAUTHINFOID = {\n  STSURL: 0x01,\n  SPN: 0x02\n};\n\nfunction fedAuthInfoParser(parser, _colMetadata, _options, callback) {\n  parser.readUInt32LE(tokenLength => {\n    parser.readBuffer(tokenLength, data => {\n      let spn, stsurl;\n      let offset = 0;\n      const countOfInfoIDs = data.readUInt32LE(offset);\n      offset += 4;\n\n      for (let i = 0; i < countOfInfoIDs; i++) {\n        const fedauthInfoID = data.readUInt8(offset);\n        offset += 1;\n        const fedAuthInfoDataLen = data.readUInt32LE(offset);\n        offset += 4;\n        const fedAuthInfoDataOffset = data.readUInt32LE(offset);\n        offset += 4;\n\n        switch (fedauthInfoID) {\n          case FEDAUTHINFOID.SPN:\n            spn = data.toString('ucs2', fedAuthInfoDataOffset, fedAuthInfoDataOffset + fedAuthInfoDataLen);\n            break;\n\n          case FEDAUTHINFOID.STSURL:\n            stsurl = data.toString('ucs2', fedAuthInfoDataOffset, fedAuthInfoDataOffset + fedAuthInfoDataLen);\n            break;\n          // ignoring unknown fedauthinfo options\n\n          default:\n            break;\n        }\n      }\n\n      callback(new _token.FedAuthInfoToken(spn, stsurl));\n    });\n  });\n}\n\nvar _default = fedAuthInfoParser;\nexports.default = _default;\nmodule.exports = fedAuthInfoParser;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp5/expresstimes/node_modules/tedious/lib/token/fedauth-info-parser.js"],"names":["Object","defineProperty","exports","value","default","_token","require","FEDAUTHINFOID","STSURL","SPN","fedAuthInfoParser","parser","_colMetadata","_options","callback","readUInt32LE","tokenLength","readBuffer","data","spn","stsurl","offset","countOfInfoIDs","i","fedauthInfoID","readUInt8","fedAuthInfoDataLen","fedAuthInfoDataOffset","toString","FedAuthInfoToken","_default","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,MAAM,EAAE,IADY;AAEpBC,EAAAA,GAAG,EAAE;AAFe,CAAtB;;AAKA,SAASC,iBAAT,CAA2BC,MAA3B,EAAmCC,YAAnC,EAAiDC,QAAjD,EAA2DC,QAA3D,EAAqE;AACnEH,EAAAA,MAAM,CAACI,YAAP,CAAoBC,WAAW,IAAI;AACjCL,IAAAA,MAAM,CAACM,UAAP,CAAkBD,WAAlB,EAA+BE,IAAI,IAAI;AACrC,UAAIC,GAAJ,EAASC,MAAT;AACA,UAAIC,MAAM,GAAG,CAAb;AACA,YAAMC,cAAc,GAAGJ,IAAI,CAACH,YAAL,CAAkBM,MAAlB,CAAvB;AACAA,MAAAA,MAAM,IAAI,CAAV;;AAEA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,cAApB,EAAoCC,CAAC,EAArC,EAAyC;AACvC,cAAMC,aAAa,GAAGN,IAAI,CAACO,SAAL,CAAeJ,MAAf,CAAtB;AACAA,QAAAA,MAAM,IAAI,CAAV;AACA,cAAMK,kBAAkB,GAAGR,IAAI,CAACH,YAAL,CAAkBM,MAAlB,CAA3B;AACAA,QAAAA,MAAM,IAAI,CAAV;AACA,cAAMM,qBAAqB,GAAGT,IAAI,CAACH,YAAL,CAAkBM,MAAlB,CAA9B;AACAA,QAAAA,MAAM,IAAI,CAAV;;AAEA,gBAAQG,aAAR;AACE,eAAKjB,aAAa,CAACE,GAAnB;AACEU,YAAAA,GAAG,GAAGD,IAAI,CAACU,QAAL,CAAc,MAAd,EAAsBD,qBAAtB,EAA6CA,qBAAqB,GAAGD,kBAArE,CAAN;AACA;;AAEF,eAAKnB,aAAa,CAACC,MAAnB;AACEY,YAAAA,MAAM,GAAGF,IAAI,CAACU,QAAL,CAAc,MAAd,EAAsBD,qBAAtB,EAA6CA,qBAAqB,GAAGD,kBAArE,CAAT;AACA;AACF;;AAEA;AACE;AAXJ;AAaD;;AAEDZ,MAAAA,QAAQ,CAAC,IAAIT,MAAM,CAACwB,gBAAX,CAA4BV,GAA5B,EAAiCC,MAAjC,CAAD,CAAR;AACD,KA9BD;AA+BD,GAhCD;AAiCD;;AAED,IAAIU,QAAQ,GAAGpB,iBAAf;AACAR,OAAO,CAACE,OAAR,GAAkB0B,QAAlB;AACAC,MAAM,CAAC7B,OAAP,GAAiBQ,iBAAjB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _token = require(\"./token\");\n\nconst FEDAUTHINFOID = {\n  STSURL: 0x01,\n  SPN: 0x02\n};\n\nfunction fedAuthInfoParser(parser, _colMetadata, _options, callback) {\n  parser.readUInt32LE(tokenLength => {\n    parser.readBuffer(tokenLength, data => {\n      let spn, stsurl;\n      let offset = 0;\n      const countOfInfoIDs = data.readUInt32LE(offset);\n      offset += 4;\n\n      for (let i = 0; i < countOfInfoIDs; i++) {\n        const fedauthInfoID = data.readUInt8(offset);\n        offset += 1;\n        const fedAuthInfoDataLen = data.readUInt32LE(offset);\n        offset += 4;\n        const fedAuthInfoDataOffset = data.readUInt32LE(offset);\n        offset += 4;\n\n        switch (fedauthInfoID) {\n          case FEDAUTHINFOID.SPN:\n            spn = data.toString('ucs2', fedAuthInfoDataOffset, fedAuthInfoDataOffset + fedAuthInfoDataLen);\n            break;\n\n          case FEDAUTHINFOID.STSURL:\n            stsurl = data.toString('ucs2', fedAuthInfoDataOffset, fedAuthInfoDataOffset + fedAuthInfoDataLen);\n            break;\n          // ignoring unknown fedauthinfo options\n\n          default:\n            break;\n        }\n      }\n\n      callback(new _token.FedAuthInfoToken(spn, stsurl));\n    });\n  });\n}\n\nvar _default = fedAuthInfoParser;\nexports.default = _default;\nmodule.exports = fedAuthInfoParser;"]},"metadata":{},"sourceType":"script"}