{"ast":null,"code":"// --------------------\n// is-bluebird module\n// --------------------\n// exports\n\n/**\n * Identifies whether input is a bluebird promise.\n * @param {*} promise - Input to be tested\n * @returns {boolean} - true if is a bluebird promise, false if not\n */\nvar isBluebird = function (promise) {\n  return isObject(promise) && isBluebird.ctor(promise.constructor);\n};\n/**\n * Identifies whether input is a bluebird promise constructor.\n * @param {*} Promise - Input to be tested\n * @returns {boolean} - true if is bluebird promise constructor, false if not\n */\n\n\nisBluebird.ctor = function (Promise) {\n  return typeof Promise == 'function' && !!Promise.prototype && typeof Promise.prototype._addCallbacks == 'function';\n};\n/**\n * Identifies whether input is a bluebird v2 promise.\n * @param {*} promise - Input to be tested\n * @returns {boolean} - true if is a bluebird v2 promise, false if not\n */\n\n\nisBluebird.v2 = function (promise) {\n  return isObject(promise) && isBluebird.v2.ctor(promise.constructor);\n};\n/**\n * Identifies whether input is bluebird v2 promise constructor.\n * @alias isBluebird.ctor.v2\n *\n * @param {*} promise - Input to be tested\n * @returns {boolean} - true if is a bluebird v2 promise, false if not\n */\n\n\nisBluebird.v2.ctor = function (Promise) {\n  return isBluebird.ctor(Promise) && Promise.prototype._addCallbacks.length == 6;\n};\n\nisBluebird.ctor.v2 = isBluebird.v2.ctor;\n/**\n * Identifies whether input is a bluebird v3 promise.\n * @param {*} promise - Input to be tested\n * @returns {boolean} - true if is a bluebird v3 promise, false if not\n */\n\nisBluebird.v3 = function (promise) {\n  return isObject(promise) && isBluebird.v3.ctor(promise.constructor);\n};\n/**\n * Identifies whether input is bluebird v3 promise constructor.\n * @alias isBluebird.ctor.v3\n *\n * @param {*} promise - Input to be tested\n * @returns {boolean} - true if is a bluebird v3 promise, false if not\n */\n\n\nisBluebird.v3.ctor = function (Promise) {\n  return isBluebird.ctor(Promise) && Promise.prototype._addCallbacks.length == 5;\n};\n\nisBluebird.ctor.v3 = isBluebird.v3.ctor;\n/**\n * Check if input is an object.\n * @param {*} obj - Input to be tested\n * @returns {boolean} - true if is an object, false if not\n */\n\nfunction isObject(obj) {\n  return !!obj && typeof obj == 'object';\n} // export isBluebird\n\n\nmodule.exports = isBluebird;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp5/expresstimes/node_modules/is-bluebird/lib/index.js"],"names":["isBluebird","promise","isObject","ctor","constructor","Promise","prototype","_addCallbacks","v2","length","v3","obj","module","exports"],"mappings":"AAAA;AACA;AACA;AAEA;;AAEA;;;;;AAKA,IAAIA,UAAU,GAAG,UAASC,OAAT,EAAkB;AAC/B,SAAOC,QAAQ,CAACD,OAAD,CAAR,IAAqBD,UAAU,CAACG,IAAX,CAAgBF,OAAO,CAACG,WAAxB,CAA5B;AACH,CAFD;AAIA;;;;;;;AAKAJ,UAAU,CAACG,IAAX,GAAkB,UAASE,OAAT,EAAkB;AAChC,SAAO,OAAOA,OAAP,IAAkB,UAAlB,IAAgC,CAAC,CAACA,OAAO,CAACC,SAA1C,IAAuD,OAAOD,OAAO,CAACC,SAAR,CAAkBC,aAAzB,IAA0C,UAAxG;AACH,CAFD;AAIA;;;;;;;AAKAP,UAAU,CAACQ,EAAX,GAAgB,UAASP,OAAT,EAAkB;AAC9B,SAAOC,QAAQ,CAACD,OAAD,CAAR,IAAqBD,UAAU,CAACQ,EAAX,CAAcL,IAAd,CAAmBF,OAAO,CAACG,WAA3B,CAA5B;AACH,CAFD;AAIA;;;;;;;;;AAOAJ,UAAU,CAACQ,EAAX,CAAcL,IAAd,GAAqB,UAASE,OAAT,EAAkB;AACnC,SAAOL,UAAU,CAACG,IAAX,CAAgBE,OAAhB,KAA4BA,OAAO,CAACC,SAAR,CAAkBC,aAAlB,CAAgCE,MAAhC,IAA0C,CAA7E;AACH,CAFD;;AAIAT,UAAU,CAACG,IAAX,CAAgBK,EAAhB,GAAqBR,UAAU,CAACQ,EAAX,CAAcL,IAAnC;AAEA;;;;;;AAKAH,UAAU,CAACU,EAAX,GAAgB,UAAST,OAAT,EAAkB;AAC9B,SAAOC,QAAQ,CAACD,OAAD,CAAR,IAAqBD,UAAU,CAACU,EAAX,CAAcP,IAAd,CAAmBF,OAAO,CAACG,WAA3B,CAA5B;AACH,CAFD;AAIA;;;;;;;;;AAOAJ,UAAU,CAACU,EAAX,CAAcP,IAAd,GAAqB,UAASE,OAAT,EAAkB;AACnC,SAAOL,UAAU,CAACG,IAAX,CAAgBE,OAAhB,KAA4BA,OAAO,CAACC,SAAR,CAAkBC,aAAlB,CAAgCE,MAAhC,IAA0C,CAA7E;AACH,CAFD;;AAIAT,UAAU,CAACG,IAAX,CAAgBO,EAAhB,GAAqBV,UAAU,CAACU,EAAX,CAAcP,IAAnC;AAEA;;;;;;AAKA,SAASD,QAAT,CAAkBS,GAAlB,EAAuB;AACnB,SAAO,CAAC,CAACA,GAAF,IAAS,OAAOA,GAAP,IAAc,QAA9B;AACH,C,CAED;;;AACAC,MAAM,CAACC,OAAP,GAAiBb,UAAjB","sourcesContent":["// --------------------\n// is-bluebird module\n// --------------------\n\n// exports\n\n/**\n * Identifies whether input is a bluebird promise.\n * @param {*} promise - Input to be tested\n * @returns {boolean} - true if is a bluebird promise, false if not\n */\nvar isBluebird = function(promise) {\n    return isObject(promise) && isBluebird.ctor(promise.constructor);\n};\n\n/**\n * Identifies whether input is a bluebird promise constructor.\n * @param {*} Promise - Input to be tested\n * @returns {boolean} - true if is bluebird promise constructor, false if not\n */\nisBluebird.ctor = function(Promise) {\n    return typeof Promise == 'function' && !!Promise.prototype && typeof Promise.prototype._addCallbacks == 'function';\n};\n\n/**\n * Identifies whether input is a bluebird v2 promise.\n * @param {*} promise - Input to be tested\n * @returns {boolean} - true if is a bluebird v2 promise, false if not\n */\nisBluebird.v2 = function(promise) {\n    return isObject(promise) && isBluebird.v2.ctor(promise.constructor);\n};\n\n/**\n * Identifies whether input is bluebird v2 promise constructor.\n * @alias isBluebird.ctor.v2\n *\n * @param {*} promise - Input to be tested\n * @returns {boolean} - true if is a bluebird v2 promise, false if not\n */\nisBluebird.v2.ctor = function(Promise) {\n    return isBluebird.ctor(Promise) && Promise.prototype._addCallbacks.length == 6;\n};\n\nisBluebird.ctor.v2 = isBluebird.v2.ctor;\n\n/**\n * Identifies whether input is a bluebird v3 promise.\n * @param {*} promise - Input to be tested\n * @returns {boolean} - true if is a bluebird v3 promise, false if not\n */\nisBluebird.v3 = function(promise) {\n    return isObject(promise) && isBluebird.v3.ctor(promise.constructor);\n};\n\n/**\n * Identifies whether input is bluebird v3 promise constructor.\n * @alias isBluebird.ctor.v3\n *\n * @param {*} promise - Input to be tested\n * @returns {boolean} - true if is a bluebird v3 promise, false if not\n */\nisBluebird.v3.ctor = function(Promise) {\n    return isBluebird.ctor(Promise) && Promise.prototype._addCallbacks.length == 5;\n};\n\nisBluebird.ctor.v3 = isBluebird.v3.ctor;\n\n/**\n * Check if input is an object.\n * @param {*} obj - Input to be tested\n * @returns {boolean} - true if is an object, false if not\n */\nfunction isObject(obj) {\n    return !!obj && typeof obj == 'object';\n}\n\n// export isBluebird\nmodule.exports = isBluebird;\n"]},"metadata":{},"sourceType":"script"}