{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EndOfMessageToken = exports.SSPIToken = exports.RowToken = exports.ReturnValueToken = exports.ReturnStatusToken = exports.OrderToken = exports.NBCRowToken = exports.LoginAckToken = exports.ErrorMessageToken = exports.InfoMessageToken = exports.FedAuthInfoToken = exports.FeatureExtAckToken = exports.RoutingEnvChangeToken = exports.CollationChangeToken = exports.ResetConnectionEnvChangeToken = exports.DatabaseMirroringPartnerEnvChangeToken = exports.RollbackTransactionEnvChangeToken = exports.CommitTransactionEnvChangeToken = exports.BeginTransactionEnvChangeToken = exports.PacketSizeEnvChangeToken = exports.CharsetEnvChangeToken = exports.LanguageEnvChangeToken = exports.DatabaseEnvChangeToken = exports.DoneProcToken = exports.DoneInProcToken = exports.DoneToken = exports.ColMetadataToken = exports.Token = exports.TYPE = void 0;\nconst TYPE = {\n  ALTMETADATA: 0x88,\n  ALTROW: 0xD3,\n  COLMETADATA: 0x81,\n  COLINFO: 0xA5,\n  DONE: 0xFD,\n  DONEPROC: 0xFE,\n  DONEINPROC: 0xFF,\n  ENVCHANGE: 0xE3,\n  ERROR: 0xAA,\n  FEATUREEXTACK: 0xAE,\n  FEDAUTHINFO: 0xEE,\n  INFO: 0xAB,\n  LOGINACK: 0xAD,\n  NBCROW: 0xD2,\n  OFFSET: 0x78,\n  ORDER: 0xA9,\n  RETURNSTATUS: 0x79,\n  RETURNVALUE: 0xAC,\n  ROW: 0xD1,\n  SSPI: 0xED,\n  TABNAME: 0xA4\n};\nexports.TYPE = TYPE;\n\nclass Token {\n  constructor(name, event) {\n    this.name = name;\n    this.event = event;\n  }\n\n}\n\nexports.Token = Token;\n\nclass ColMetadataToken extends Token {\n  constructor(columns) {\n    super('COLMETADATA', 'columnMetadata');\n    this.columns = columns;\n  }\n\n}\n\nexports.ColMetadataToken = ColMetadataToken;\n\nclass DoneToken extends Token {\n  constructor({\n    more,\n    sqlError,\n    attention,\n    serverError,\n    rowCount,\n    curCmd\n  }) {\n    super('DONE', 'done');\n    this.more = more;\n    this.sqlError = sqlError;\n    this.attention = attention;\n    this.serverError = serverError;\n    this.rowCount = rowCount;\n    this.curCmd = curCmd;\n  }\n\n}\n\nexports.DoneToken = DoneToken;\n\nclass DoneInProcToken extends Token {\n  constructor({\n    more,\n    sqlError,\n    attention,\n    serverError,\n    rowCount,\n    curCmd\n  }) {\n    super('DONEINPROC', 'doneInProc');\n    this.more = more;\n    this.sqlError = sqlError;\n    this.attention = attention;\n    this.serverError = serverError;\n    this.rowCount = rowCount;\n    this.curCmd = curCmd;\n  }\n\n}\n\nexports.DoneInProcToken = DoneInProcToken;\n\nclass DoneProcToken extends Token {\n  constructor({\n    more,\n    sqlError,\n    attention,\n    serverError,\n    rowCount,\n    curCmd\n  }) {\n    super('DONEPROC', 'doneProc');\n    this.more = more;\n    this.sqlError = sqlError;\n    this.attention = attention;\n    this.serverError = serverError;\n    this.rowCount = rowCount;\n    this.curCmd = curCmd;\n  }\n\n}\n\nexports.DoneProcToken = DoneProcToken;\n\nclass DatabaseEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'databaseChange');\n    this.type = 'DATABASE';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n\n}\n\nexports.DatabaseEnvChangeToken = DatabaseEnvChangeToken;\n\nclass LanguageEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'languageChange');\n    this.type = 'LANGUAGE';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n\n}\n\nexports.LanguageEnvChangeToken = LanguageEnvChangeToken;\n\nclass CharsetEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'charsetChange');\n    this.type = 'CHARSET';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n\n}\n\nexports.CharsetEnvChangeToken = CharsetEnvChangeToken;\n\nclass PacketSizeEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'packetSizeChange');\n    this.type = 'PACKET_SIZE';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n\n}\n\nexports.PacketSizeEnvChangeToken = PacketSizeEnvChangeToken;\n\nclass BeginTransactionEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'beginTransaction');\n    this.name = 'ENVCHANGE';\n    this.event = 'beginTransaction';\n    this.type = 'BEGIN_TXN';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n\n}\n\nexports.BeginTransactionEnvChangeToken = BeginTransactionEnvChangeToken;\n\nclass CommitTransactionEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'commitTransaction');\n    this.type = 'COMMIT_TXN';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n\n}\n\nexports.CommitTransactionEnvChangeToken = CommitTransactionEnvChangeToken;\n\nclass RollbackTransactionEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'rollbackTransaction');\n    this.type = 'ROLLBACK_TXN';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n\n}\n\nexports.RollbackTransactionEnvChangeToken = RollbackTransactionEnvChangeToken;\n\nclass DatabaseMirroringPartnerEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'partnerNode');\n    this.name = 'ENVCHANGE';\n    this.event = 'partnerNode';\n    this.type = 'DATABASE_MIRRORING_PARTNER';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n\n}\n\nexports.DatabaseMirroringPartnerEnvChangeToken = DatabaseMirroringPartnerEnvChangeToken;\n\nclass ResetConnectionEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'resetConnection');\n    this.name = 'ENVCHANGE';\n    this.event = 'resetConnection';\n    this.type = 'RESET_CONNECTION';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n\n}\n\nexports.ResetConnectionEnvChangeToken = ResetConnectionEnvChangeToken;\n\nclass CollationChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'sqlCollationChange');\n    this.type = 'SQL_COLLATION';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n\n}\n\nexports.CollationChangeToken = CollationChangeToken;\n\nclass RoutingEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'routingChange');\n    this.type = 'ROUTING_CHANGE';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n\n}\n\nexports.RoutingEnvChangeToken = RoutingEnvChangeToken;\n\nclass FeatureExtAckToken extends Token {\n  constructor(fedAuth) {\n    super('FEATUREEXTACK', 'featureExtAck');\n    this.fedAuth = fedAuth;\n  }\n\n}\n\nexports.FeatureExtAckToken = FeatureExtAckToken;\n\nclass FedAuthInfoToken extends Token {\n  constructor(spn, stsurl) {\n    super('FEDAUTHINFO', 'fedAuthInfo');\n    this.spn = spn;\n    this.stsurl = stsurl;\n  }\n\n}\n\nexports.FedAuthInfoToken = FedAuthInfoToken;\n\nclass InfoMessageToken extends Token {\n  constructor({\n    number,\n    state,\n    class: clazz,\n    message,\n    serverName,\n    procName,\n    lineNumber\n  }) {\n    super('INFO', 'infoMessage');\n    this.number = number;\n    this.state = state;\n    this.class = clazz;\n    this.message = message;\n    this.serverName = serverName;\n    this.procName = procName;\n    this.lineNumber = lineNumber;\n  }\n\n}\n\nexports.InfoMessageToken = InfoMessageToken;\n\nclass ErrorMessageToken extends Token {\n  constructor({\n    number,\n    state,\n    class: clazz,\n    message,\n    serverName,\n    procName,\n    lineNumber\n  }) {\n    super('ERROR', 'errorMessage');\n    this.number = number;\n    this.state = state;\n    this.class = clazz;\n    this.message = message;\n    this.serverName = serverName;\n    this.procName = procName;\n    this.lineNumber = lineNumber;\n  }\n\n}\n\nexports.ErrorMessageToken = ErrorMessageToken;\n\nclass LoginAckToken extends Token {\n  constructor({\n    interface: interfaze,\n    tdsVersion,\n    progName,\n    progVersion\n  }) {\n    super('LOGINACK', 'loginack');\n    this.interface = interfaze;\n    this.tdsVersion = tdsVersion;\n    this.progName = progName;\n    this.progVersion = progVersion;\n  }\n\n}\n\nexports.LoginAckToken = LoginAckToken;\n\nclass NBCRowToken extends Token {\n  constructor(columns) {\n    super('NBCROW', 'row');\n    this.columns = columns;\n  }\n\n}\n\nexports.NBCRowToken = NBCRowToken;\n\nclass OrderToken extends Token {\n  constructor(orderColumns) {\n    super('ORDER', 'order');\n    this.orderColumns = orderColumns;\n  }\n\n}\n\nexports.OrderToken = OrderToken;\n\nclass ReturnStatusToken extends Token {\n  constructor(value) {\n    super('RETURNSTATUS', 'returnStatus');\n    this.value = value;\n  }\n\n}\n\nexports.ReturnStatusToken = ReturnStatusToken;\n\nclass ReturnValueToken extends Token {\n  constructor({\n    paramOrdinal,\n    paramName,\n    metadata,\n    value\n  }) {\n    super('RETURNVALUE', 'returnValue');\n    this.paramOrdinal = paramOrdinal;\n    this.paramName = paramName;\n    this.metadata = metadata;\n    this.value = value;\n  }\n\n}\n\nexports.ReturnValueToken = ReturnValueToken;\n\nclass RowToken extends Token {\n  constructor(columns) {\n    super('ROW', 'row');\n    this.columns = columns;\n  }\n\n}\n\nexports.RowToken = RowToken;\n\nclass SSPIToken extends Token {\n  constructor(ntlmpacket, ntlmpacketBuffer) {\n    super('SSPICHALLENGE', 'sspichallenge');\n    this.ntlmpacket = ntlmpacket;\n    this.ntlmpacketBuffer = ntlmpacketBuffer;\n  }\n\n}\n\nexports.SSPIToken = SSPIToken;\n\nclass EndOfMessageToken extends Token {\n  constructor() {\n    super('EOM', 'endOfMessage');\n  }\n\n}\n\nexports.EndOfMessageToken = EndOfMessageToken;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp5/expresstimes/node_modules/tedious/lib/token/token.js"],"names":["Object","defineProperty","exports","value","EndOfMessageToken","SSPIToken","RowToken","ReturnValueToken","ReturnStatusToken","OrderToken","NBCRowToken","LoginAckToken","ErrorMessageToken","InfoMessageToken","FedAuthInfoToken","FeatureExtAckToken","RoutingEnvChangeToken","CollationChangeToken","ResetConnectionEnvChangeToken","DatabaseMirroringPartnerEnvChangeToken","RollbackTransactionEnvChangeToken","CommitTransactionEnvChangeToken","BeginTransactionEnvChangeToken","PacketSizeEnvChangeToken","CharsetEnvChangeToken","LanguageEnvChangeToken","DatabaseEnvChangeToken","DoneProcToken","DoneInProcToken","DoneToken","ColMetadataToken","Token","TYPE","ALTMETADATA","ALTROW","COLMETADATA","COLINFO","DONE","DONEPROC","DONEINPROC","ENVCHANGE","ERROR","FEATUREEXTACK","FEDAUTHINFO","INFO","LOGINACK","NBCROW","OFFSET","ORDER","RETURNSTATUS","RETURNVALUE","ROW","SSPI","TABNAME","constructor","name","event","columns","more","sqlError","attention","serverError","rowCount","curCmd","newValue","oldValue","type","fedAuth","spn","stsurl","number","state","class","clazz","message","serverName","procName","lineNumber","interface","interfaze","tdsVersion","progName","progVersion","orderColumns","paramOrdinal","paramName","metadata","ntlmpacket","ntlmpacketBuffer"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EndOfMessageToken = exports.SSPIToken = exports.RowToken = exports.ReturnValueToken = exports.ReturnStatusToken = exports.OrderToken = exports.NBCRowToken = exports.LoginAckToken = exports.ErrorMessageToken = exports.InfoMessageToken = exports.FedAuthInfoToken = exports.FeatureExtAckToken = exports.RoutingEnvChangeToken = exports.CollationChangeToken = exports.ResetConnectionEnvChangeToken = exports.DatabaseMirroringPartnerEnvChangeToken = exports.RollbackTransactionEnvChangeToken = exports.CommitTransactionEnvChangeToken = exports.BeginTransactionEnvChangeToken = exports.PacketSizeEnvChangeToken = exports.CharsetEnvChangeToken = exports.LanguageEnvChangeToken = exports.DatabaseEnvChangeToken = exports.DoneProcToken = exports.DoneInProcToken = exports.DoneToken = exports.ColMetadataToken = exports.Token = exports.TYPE = void 0;\nconst TYPE = {\n  ALTMETADATA: 0x88,\n  ALTROW: 0xD3,\n  COLMETADATA: 0x81,\n  COLINFO: 0xA5,\n  DONE: 0xFD,\n  DONEPROC: 0xFE,\n  DONEINPROC: 0xFF,\n  ENVCHANGE: 0xE3,\n  ERROR: 0xAA,\n  FEATUREEXTACK: 0xAE,\n  FEDAUTHINFO: 0xEE,\n  INFO: 0xAB,\n  LOGINACK: 0xAD,\n  NBCROW: 0xD2,\n  OFFSET: 0x78,\n  ORDER: 0xA9,\n  RETURNSTATUS: 0x79,\n  RETURNVALUE: 0xAC,\n  ROW: 0xD1,\n  SSPI: 0xED,\n  TABNAME: 0xA4\n};\nexports.TYPE = TYPE;\n\nclass Token {\n  constructor(name, event) {\n    this.name = name;\n    this.event = event;\n  }\n\n}\n\nexports.Token = Token;\n\nclass ColMetadataToken extends Token {\n  constructor(columns) {\n    super('COLMETADATA', 'columnMetadata');\n    this.columns = columns;\n  }\n\n}\n\nexports.ColMetadataToken = ColMetadataToken;\n\nclass DoneToken extends Token {\n  constructor({\n    more,\n    sqlError,\n    attention,\n    serverError,\n    rowCount,\n    curCmd\n  }) {\n    super('DONE', 'done');\n    this.more = more;\n    this.sqlError = sqlError;\n    this.attention = attention;\n    this.serverError = serverError;\n    this.rowCount = rowCount;\n    this.curCmd = curCmd;\n  }\n\n}\n\nexports.DoneToken = DoneToken;\n\nclass DoneInProcToken extends Token {\n  constructor({\n    more,\n    sqlError,\n    attention,\n    serverError,\n    rowCount,\n    curCmd\n  }) {\n    super('DONEINPROC', 'doneInProc');\n    this.more = more;\n    this.sqlError = sqlError;\n    this.attention = attention;\n    this.serverError = serverError;\n    this.rowCount = rowCount;\n    this.curCmd = curCmd;\n  }\n\n}\n\nexports.DoneInProcToken = DoneInProcToken;\n\nclass DoneProcToken extends Token {\n  constructor({\n    more,\n    sqlError,\n    attention,\n    serverError,\n    rowCount,\n    curCmd\n  }) {\n    super('DONEPROC', 'doneProc');\n    this.more = more;\n    this.sqlError = sqlError;\n    this.attention = attention;\n    this.serverError = serverError;\n    this.rowCount = rowCount;\n    this.curCmd = curCmd;\n  }\n\n}\n\nexports.DoneProcToken = DoneProcToken;\n\nclass DatabaseEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'databaseChange');\n    this.type = 'DATABASE';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n\n}\n\nexports.DatabaseEnvChangeToken = DatabaseEnvChangeToken;\n\nclass LanguageEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'languageChange');\n    this.type = 'LANGUAGE';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n\n}\n\nexports.LanguageEnvChangeToken = LanguageEnvChangeToken;\n\nclass CharsetEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'charsetChange');\n    this.type = 'CHARSET';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n\n}\n\nexports.CharsetEnvChangeToken = CharsetEnvChangeToken;\n\nclass PacketSizeEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'packetSizeChange');\n    this.type = 'PACKET_SIZE';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n\n}\n\nexports.PacketSizeEnvChangeToken = PacketSizeEnvChangeToken;\n\nclass BeginTransactionEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'beginTransaction');\n    this.name = 'ENVCHANGE';\n    this.event = 'beginTransaction';\n    this.type = 'BEGIN_TXN';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n\n}\n\nexports.BeginTransactionEnvChangeToken = BeginTransactionEnvChangeToken;\n\nclass CommitTransactionEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'commitTransaction');\n    this.type = 'COMMIT_TXN';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n\n}\n\nexports.CommitTransactionEnvChangeToken = CommitTransactionEnvChangeToken;\n\nclass RollbackTransactionEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'rollbackTransaction');\n    this.type = 'ROLLBACK_TXN';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n\n}\n\nexports.RollbackTransactionEnvChangeToken = RollbackTransactionEnvChangeToken;\n\nclass DatabaseMirroringPartnerEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'partnerNode');\n    this.name = 'ENVCHANGE';\n    this.event = 'partnerNode';\n    this.type = 'DATABASE_MIRRORING_PARTNER';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n\n}\n\nexports.DatabaseMirroringPartnerEnvChangeToken = DatabaseMirroringPartnerEnvChangeToken;\n\nclass ResetConnectionEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'resetConnection');\n    this.name = 'ENVCHANGE';\n    this.event = 'resetConnection';\n    this.type = 'RESET_CONNECTION';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n\n}\n\nexports.ResetConnectionEnvChangeToken = ResetConnectionEnvChangeToken;\n\nclass CollationChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'sqlCollationChange');\n    this.type = 'SQL_COLLATION';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n\n}\n\nexports.CollationChangeToken = CollationChangeToken;\n\nclass RoutingEnvChangeToken extends Token {\n  constructor(newValue, oldValue) {\n    super('ENVCHANGE', 'routingChange');\n    this.type = 'ROUTING_CHANGE';\n    this.newValue = newValue;\n    this.oldValue = oldValue;\n  }\n\n}\n\nexports.RoutingEnvChangeToken = RoutingEnvChangeToken;\n\nclass FeatureExtAckToken extends Token {\n  constructor(fedAuth) {\n    super('FEATUREEXTACK', 'featureExtAck');\n    this.fedAuth = fedAuth;\n  }\n\n}\n\nexports.FeatureExtAckToken = FeatureExtAckToken;\n\nclass FedAuthInfoToken extends Token {\n  constructor(spn, stsurl) {\n    super('FEDAUTHINFO', 'fedAuthInfo');\n    this.spn = spn;\n    this.stsurl = stsurl;\n  }\n\n}\n\nexports.FedAuthInfoToken = FedAuthInfoToken;\n\nclass InfoMessageToken extends Token {\n  constructor({\n    number,\n    state,\n    class: clazz,\n    message,\n    serverName,\n    procName,\n    lineNumber\n  }) {\n    super('INFO', 'infoMessage');\n    this.number = number;\n    this.state = state;\n    this.class = clazz;\n    this.message = message;\n    this.serverName = serverName;\n    this.procName = procName;\n    this.lineNumber = lineNumber;\n  }\n\n}\n\nexports.InfoMessageToken = InfoMessageToken;\n\nclass ErrorMessageToken extends Token {\n  constructor({\n    number,\n    state,\n    class: clazz,\n    message,\n    serverName,\n    procName,\n    lineNumber\n  }) {\n    super('ERROR', 'errorMessage');\n    this.number = number;\n    this.state = state;\n    this.class = clazz;\n    this.message = message;\n    this.serverName = serverName;\n    this.procName = procName;\n    this.lineNumber = lineNumber;\n  }\n\n}\n\nexports.ErrorMessageToken = ErrorMessageToken;\n\nclass LoginAckToken extends Token {\n  constructor({\n    interface: interfaze,\n    tdsVersion,\n    progName,\n    progVersion\n  }) {\n    super('LOGINACK', 'loginack');\n    this.interface = interfaze;\n    this.tdsVersion = tdsVersion;\n    this.progName = progName;\n    this.progVersion = progVersion;\n  }\n\n}\n\nexports.LoginAckToken = LoginAckToken;\n\nclass NBCRowToken extends Token {\n  constructor(columns) {\n    super('NBCROW', 'row');\n    this.columns = columns;\n  }\n\n}\n\nexports.NBCRowToken = NBCRowToken;\n\nclass OrderToken extends Token {\n  constructor(orderColumns) {\n    super('ORDER', 'order');\n    this.orderColumns = orderColumns;\n  }\n\n}\n\nexports.OrderToken = OrderToken;\n\nclass ReturnStatusToken extends Token {\n  constructor(value) {\n    super('RETURNSTATUS', 'returnStatus');\n    this.value = value;\n  }\n\n}\n\nexports.ReturnStatusToken = ReturnStatusToken;\n\nclass ReturnValueToken extends Token {\n  constructor({\n    paramOrdinal,\n    paramName,\n    metadata,\n    value\n  }) {\n    super('RETURNVALUE', 'returnValue');\n    this.paramOrdinal = paramOrdinal;\n    this.paramName = paramName;\n    this.metadata = metadata;\n    this.value = value;\n  }\n\n}\n\nexports.ReturnValueToken = ReturnValueToken;\n\nclass RowToken extends Token {\n  constructor(columns) {\n    super('ROW', 'row');\n    this.columns = columns;\n  }\n\n}\n\nexports.RowToken = RowToken;\n\nclass SSPIToken extends Token {\n  constructor(ntlmpacket, ntlmpacketBuffer) {\n    super('SSPICHALLENGE', 'sspichallenge');\n    this.ntlmpacket = ntlmpacket;\n    this.ntlmpacketBuffer = ntlmpacketBuffer;\n  }\n\n}\n\nexports.SSPIToken = SSPIToken;\n\nclass EndOfMessageToken extends Token {\n  constructor() {\n    super('EOM', 'endOfMessage');\n  }\n\n}\n\nexports.EndOfMessageToken = EndOfMessageToken;"]},"metadata":{},"sourceType":"script"}