{"ast":null,"code":"\"use strict\";\n\nconst Queue = require(\"./Queue\");\n/**\n * @class\n * @private\n */\n\n\nclass PriorityQueue {\n  constructor(size) {\n    this._size = Math.max(+size | 0, 1);\n    /** @type {Queue[]} */\n\n    this._slots = []; // initialize arrays to hold queue elements\n\n    for (let i = 0; i < this._size; i++) {\n      this._slots.push(new Queue());\n    }\n  }\n\n  get length() {\n    let _length = 0;\n\n    for (let i = 0, slots = this._slots.length; i < slots; i++) {\n      _length += this._slots[i].length;\n    }\n\n    return _length;\n  }\n\n  enqueue(obj, priority) {\n    // Convert to integer with a default value of 0.\n    priority = priority && +priority | 0 || 0;\n\n    if (priority) {\n      if (priority < 0 || priority >= this._size) {\n        priority = this._size - 1; // put obj at the end of the line\n      }\n    }\n\n    this._slots[priority].push(obj);\n  }\n\n  dequeue() {\n    for (let i = 0, sl = this._slots.length; i < sl; i += 1) {\n      if (this._slots[i].length) {\n        return this._slots[i].shift();\n      }\n    }\n\n    return;\n  }\n\n  get head() {\n    for (let i = 0, sl = this._slots.length; i < sl; i += 1) {\n      if (this._slots[i].length > 0) {\n        return this._slots[i].head;\n      }\n    }\n\n    return;\n  }\n\n  get tail() {\n    for (let i = this._slots.length - 1; i >= 0; i--) {\n      if (this._slots[i].length > 0) {\n        return this._slots[i].tail;\n      }\n    }\n\n    return;\n  }\n\n}\n\nmodule.exports = PriorityQueue;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/node_modules/generic-pool/lib/PriorityQueue.js"],"names":["Queue","require","PriorityQueue","constructor","size","_size","Math","max","_slots","i","push","length","_length","slots","enqueue","obj","priority","dequeue","sl","shift","head","tail","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAArB;AAEA;;;;;;AAIA,MAAMC,aAAN,CAAoB;AAClBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAChB,SAAKC,KAAL,GAAaC,IAAI,CAACC,GAAL,CAAS,CAACH,IAAD,GAAQ,CAAjB,EAAoB,CAApB,CAAb;AACA;;AACA,SAAKI,MAAL,GAAc,EAAd,CAHgB,CAIhB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKJ,KAAzB,EAAgCI,CAAC,EAAjC,EAAqC;AACnC,WAAKD,MAAL,CAAYE,IAAZ,CAAiB,IAAIV,KAAJ,EAAjB;AACD;AACF;;AAED,MAAIW,MAAJ,GAAa;AACX,QAAIC,OAAO,GAAG,CAAd;;AACA,SAAK,IAAIH,CAAC,GAAG,CAAR,EAAWI,KAAK,GAAG,KAAKL,MAAL,CAAYG,MAApC,EAA4CF,CAAC,GAAGI,KAAhD,EAAuDJ,CAAC,EAAxD,EAA4D;AAC1DG,MAAAA,OAAO,IAAI,KAAKJ,MAAL,CAAYC,CAAZ,EAAeE,MAA1B;AACD;;AACD,WAAOC,OAAP;AACD;;AAEDE,EAAAA,OAAO,CAACC,GAAD,EAAMC,QAAN,EAAgB;AACrB;AACAA,IAAAA,QAAQ,GAAIA,QAAQ,IAAI,CAACA,QAAD,GAAY,CAAzB,IAA+B,CAA1C;;AAEA,QAAIA,QAAJ,EAAc;AACZ,UAAIA,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,IAAI,KAAKX,KAArC,EAA4C;AAC1CW,QAAAA,QAAQ,GAAG,KAAKX,KAAL,GAAa,CAAxB,CAD0C,CAE1C;AACD;AACF;;AACD,SAAKG,MAAL,CAAYQ,QAAZ,EAAsBN,IAAtB,CAA2BK,GAA3B;AACD;;AAEDE,EAAAA,OAAO,GAAG;AACR,SAAK,IAAIR,CAAC,GAAG,CAAR,EAAWS,EAAE,GAAG,KAAKV,MAAL,CAAYG,MAAjC,EAAyCF,CAAC,GAAGS,EAA7C,EAAiDT,CAAC,IAAI,CAAtD,EAAyD;AACvD,UAAI,KAAKD,MAAL,CAAYC,CAAZ,EAAeE,MAAnB,EAA2B;AACzB,eAAO,KAAKH,MAAL,CAAYC,CAAZ,EAAeU,KAAf,EAAP;AACD;AACF;;AACD;AACD;;AAED,MAAIC,IAAJ,GAAW;AACT,SAAK,IAAIX,CAAC,GAAG,CAAR,EAAWS,EAAE,GAAG,KAAKV,MAAL,CAAYG,MAAjC,EAAyCF,CAAC,GAAGS,EAA7C,EAAiDT,CAAC,IAAI,CAAtD,EAAyD;AACvD,UAAI,KAAKD,MAAL,CAAYC,CAAZ,EAAeE,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,eAAO,KAAKH,MAAL,CAAYC,CAAZ,EAAeW,IAAtB;AACD;AACF;;AACD;AACD;;AAED,MAAIC,IAAJ,GAAW;AACT,SAAK,IAAIZ,CAAC,GAAG,KAAKD,MAAL,CAAYG,MAAZ,GAAqB,CAAlC,EAAqCF,CAAC,IAAI,CAA1C,EAA6CA,CAAC,EAA9C,EAAkD;AAChD,UAAI,KAAKD,MAAL,CAAYC,CAAZ,EAAeE,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,eAAO,KAAKH,MAAL,CAAYC,CAAZ,EAAeY,IAAtB;AACD;AACF;;AACD;AACD;;AAzDiB;;AA4DpBC,MAAM,CAACC,OAAP,GAAiBrB,aAAjB","sourcesContent":["\"use strict\";\n\nconst Queue = require(\"./Queue\");\n\n/**\n * @class\n * @private\n */\nclass PriorityQueue {\n  constructor(size) {\n    this._size = Math.max(+size | 0, 1);\n    /** @type {Queue[]} */\n    this._slots = [];\n    // initialize arrays to hold queue elements\n    for (let i = 0; i < this._size; i++) {\n      this._slots.push(new Queue());\n    }\n  }\n\n  get length() {\n    let _length = 0;\n    for (let i = 0, slots = this._slots.length; i < slots; i++) {\n      _length += this._slots[i].length;\n    }\n    return _length;\n  }\n\n  enqueue(obj, priority) {\n    // Convert to integer with a default value of 0.\n    priority = (priority && +priority | 0) || 0;\n\n    if (priority) {\n      if (priority < 0 || priority >= this._size) {\n        priority = this._size - 1;\n        // put obj at the end of the line\n      }\n    }\n    this._slots[priority].push(obj);\n  }\n\n  dequeue() {\n    for (let i = 0, sl = this._slots.length; i < sl; i += 1) {\n      if (this._slots[i].length) {\n        return this._slots[i].shift();\n      }\n    }\n    return;\n  }\n\n  get head() {\n    for (let i = 0, sl = this._slots.length; i < sl; i += 1) {\n      if (this._slots[i].length > 0) {\n        return this._slots[i].head;\n      }\n    }\n    return;\n  }\n\n  get tail() {\n    for (let i = this._slots.length - 1; i >= 0; i--) {\n      if (this._slots[i].length > 0) {\n        return this._slots[i].tail;\n      }\n    }\n    return;\n  }\n}\n\nmodule.exports = PriorityQueue;\n"]},"metadata":{},"sourceType":"script"}