{"ast":null,"code":"(function (root, factory) {\n  // Node.\n  if (typeof module === 'object' && typeof module.exports === 'object') {\n    exports = module.exports = factory(require(\"terraformer\"));\n  } else if (typeof navigator === \"object\") {\n    // Browser Global.\n    if (!root.Terraformer) {\n      throw new Error(\"Terraformer.WKT requires the core Terraformer library. http://github.com/esri/terraformer\");\n    }\n\n    root.Terraformer.WKT = factory(root.Terraformer);\n  }\n})(this, function (Terraformer) {\n  var exports = {};\n  /* Jison generated parser */\n\n  var parser = function () {\n    var parser = {\n      trace: function trace() {},\n      yy: {},\n      symbols_: {\n        \"error\": 2,\n        \"expressions\": 3,\n        \"point\": 4,\n        \"EOF\": 5,\n        \"linestring\": 6,\n        \"polygon\": 7,\n        \"multipoint\": 8,\n        \"multilinestring\": 9,\n        \"multipolygon\": 10,\n        \"coordinate\": 11,\n        \"DOUBLE_TOK\": 12,\n        \"ptarray\": 13,\n        \"COMMA\": 14,\n        \"ring_list\": 15,\n        \"ring\": 16,\n        \"(\": 17,\n        \")\": 18,\n        \"POINT\": 19,\n        \"Z\": 20,\n        \"ZM\": 21,\n        \"M\": 22,\n        \"EMPTY\": 23,\n        \"point_untagged\": 24,\n        \"polygon_list\": 25,\n        \"polygon_untagged\": 26,\n        \"point_list\": 27,\n        \"LINESTRING\": 28,\n        \"POLYGON\": 29,\n        \"MULTIPOINT\": 30,\n        \"MULTILINESTRING\": 31,\n        \"MULTIPOLYGON\": 32,\n        \"$accept\": 0,\n        \"$end\": 1\n      },\n      terminals_: {\n        2: \"error\",\n        5: \"EOF\",\n        12: \"DOUBLE_TOK\",\n        14: \"COMMA\",\n        17: \"(\",\n        18: \")\",\n        19: \"POINT\",\n        20: \"Z\",\n        21: \"ZM\",\n        22: \"M\",\n        23: \"EMPTY\",\n        28: \"LINESTRING\",\n        29: \"POLYGON\",\n        30: \"MULTIPOINT\",\n        31: \"MULTILINESTRING\",\n        32: \"MULTIPOLYGON\"\n      },\n      productions_: [0, [3, 2], [3, 2], [3, 2], [3, 2], [3, 2], [3, 2], [11, 2], [11, 3], [11, 4], [13, 3], [13, 1], [15, 3], [15, 1], [16, 3], [4, 4], [4, 5], [4, 5], [4, 5], [4, 2], [24, 1], [24, 3], [25, 3], [25, 1], [26, 3], [27, 3], [27, 1], [6, 4], [6, 5], [6, 5], [6, 5], [6, 2], [7, 4], [7, 5], [7, 5], [7, 5], [7, 2], [8, 4], [8, 5], [8, 5], [8, 5], [8, 2], [9, 4], [9, 5], [9, 5], [9, 5], [9, 2], [10, 4], [10, 5], [10, 5], [10, 5], [10, 2]],\n      performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $, _$\n      /**/\n      ) {\n        var $0 = $.length - 1;\n\n        switch (yystate) {\n          case 1:\n            return $[$0 - 1];\n            break;\n\n          case 2:\n            return $[$0 - 1];\n            break;\n\n          case 3:\n            return $[$0 - 1];\n            break;\n\n          case 4:\n            return $[$0 - 1];\n            break;\n\n          case 5:\n            return $[$0 - 1];\n            break;\n\n          case 6:\n            return $[$0 - 1];\n            break;\n\n          case 7:\n            this.$ = new PointArray([Number($[$0 - 1]), Number($[$0])]);\n            break;\n\n          case 8:\n            this.$ = new PointArray([Number($[$0 - 2]), Number($[$0 - 1]), Number($[$0])]);\n            break;\n\n          case 9:\n            this.$ = new PointArray([Number($[$0 - 3]), Number($[$0 - 2]), Number($[$0 - 1]), Number($[$0])]);\n            break;\n\n          case 10:\n            this.$ = $[$0 - 2].addPoint($[$0]);\n            break;\n\n          case 11:\n            this.$ = $[$0];\n            break;\n\n          case 12:\n            this.$ = $[$0 - 2].addRing($[$0]);\n            break;\n\n          case 13:\n            this.$ = new RingList($[$0]);\n            break;\n\n          case 14:\n            this.$ = new Ring($[$0 - 1]);\n            break;\n\n          case 15:\n            this.$ = {\n              \"type\": \"Point\",\n              \"coordinates\": $[$0 - 1].data[0]\n            };\n            break;\n\n          case 16:\n            this.$ = {\n              \"type\": \"Point\",\n              \"coordinates\": $[$0 - 1].data[0],\n              \"properties\": {\n                z: true\n              }\n            };\n            break;\n\n          case 17:\n            this.$ = {\n              \"type\": \"Point\",\n              \"coordinates\": $[$0 - 1].data[0],\n              \"properties\": {\n                z: true,\n                m: true\n              }\n            };\n            break;\n\n          case 18:\n            this.$ = {\n              \"type\": \"Point\",\n              \"coordinates\": $[$0 - 1].data[0],\n              \"properties\": {\n                m: true\n              }\n            };\n            break;\n\n          case 19:\n            this.$ = {\n              \"type\": \"Point\",\n              \"coordinates\": []\n            };\n            break;\n\n          case 20:\n            this.$ = $[$0];\n            break;\n\n          case 21:\n            this.$ = $[$0 - 1];\n            break;\n\n          case 22:\n            this.$ = $[$0 - 2].addPolygon($[$0]);\n            break;\n\n          case 23:\n            this.$ = new PolygonList($[$0]);\n            break;\n\n          case 24:\n            this.$ = $[$0 - 1];\n            break;\n\n          case 25:\n            this.$ = $[$0 - 2].addPoint($[$0]);\n            break;\n\n          case 26:\n            this.$ = $[$0];\n            break;\n\n          case 27:\n            this.$ = {\n              \"type\": \"LineString\",\n              \"coordinates\": $[$0 - 1].data\n            };\n            break;\n\n          case 28:\n            this.$ = {\n              \"type\": \"LineString\",\n              \"coordinates\": $[$0 - 1].data,\n              \"properties\": {\n                z: true\n              }\n            };\n            break;\n\n          case 29:\n            this.$ = {\n              \"type\": \"LineString\",\n              \"coordinates\": $[$0 - 1].data,\n              \"properties\": {\n                m: true\n              }\n            };\n            break;\n\n          case 30:\n            this.$ = {\n              \"type\": \"LineString\",\n              \"coordinates\": $[$0 - 1].data,\n              \"properties\": {\n                z: true,\n                m: true\n              }\n            };\n            break;\n\n          case 31:\n            this.$ = {\n              \"type\": \"LineString\",\n              \"coordinates\": []\n            };\n            break;\n\n          case 32:\n            this.$ = {\n              \"type\": \"Polygon\",\n              \"coordinates\": $[$0 - 1].toJSON()\n            };\n            break;\n\n          case 33:\n            this.$ = {\n              \"type\": \"Polygon\",\n              \"coordinates\": $[$0 - 1].toJSON(),\n              \"properties\": {\n                z: true\n              }\n            };\n            break;\n\n          case 34:\n            this.$ = {\n              \"type\": \"Polygon\",\n              \"coordinates\": $[$0 - 1].toJSON(),\n              \"properties\": {\n                m: true\n              }\n            };\n            break;\n\n          case 35:\n            this.$ = {\n              \"type\": \"Polygon\",\n              \"coordinates\": $[$0 - 1].toJSON(),\n              \"properties\": {\n                z: true,\n                m: true\n              }\n            };\n            break;\n\n          case 36:\n            this.$ = {\n              \"type\": \"Polygon\",\n              \"coordinates\": []\n            };\n            break;\n\n          case 37:\n            this.$ = {\n              \"type\": \"MultiPoint\",\n              \"coordinates\": $[$0 - 1].data\n            };\n            break;\n\n          case 38:\n            this.$ = {\n              \"type\": \"MultiPoint\",\n              \"coordinates\": $[$0 - 1].data,\n              \"properties\": {\n                z: true\n              }\n            };\n            break;\n\n          case 39:\n            this.$ = {\n              \"type\": \"MultiPoint\",\n              \"coordinates\": $[$0 - 1].data,\n              \"properties\": {\n                m: true\n              }\n            };\n            break;\n\n          case 40:\n            this.$ = {\n              \"type\": \"MultiPoint\",\n              \"coordinates\": $[$0 - 1].data,\n              \"properties\": {\n                z: true,\n                m: true\n              }\n            };\n            break;\n\n          case 41:\n            this.$ = {\n              \"type\": \"MultiPoint\",\n              \"coordinates\": []\n            };\n            break;\n\n          case 42:\n            this.$ = {\n              \"type\": \"MultiLineString\",\n              \"coordinates\": $[$0 - 1].toJSON()\n            };\n            break;\n\n          case 43:\n            this.$ = {\n              \"type\": \"MultiLineString\",\n              \"coordinates\": $[$0 - 1].toJSON(),\n              \"properties\": {\n                z: true\n              }\n            };\n            break;\n\n          case 44:\n            this.$ = {\n              \"type\": \"MultiLineString\",\n              \"coordinates\": $[$0 - 1].toJSON(),\n              \"properties\": {\n                m: true\n              }\n            };\n            break;\n\n          case 45:\n            this.$ = {\n              \"type\": \"MultiLineString\",\n              \"coordinates\": $[$0 - 1].toJSON(),\n              \"properties\": {\n                z: true,\n                m: true\n              }\n            };\n            break;\n\n          case 46:\n            this.$ = {\n              \"type\": \"MultiLineString\",\n              \"coordinates\": []\n            };\n            break;\n\n          case 47:\n            this.$ = {\n              \"type\": \"MultiPolygon\",\n              \"coordinates\": $[$0 - 1].toJSON()\n            };\n            break;\n\n          case 48:\n            this.$ = {\n              \"type\": \"MultiPolygon\",\n              \"coordinates\": $[$0 - 1].toJSON(),\n              \"properties\": {\n                z: true\n              }\n            };\n            break;\n\n          case 49:\n            this.$ = {\n              \"type\": \"MultiPolygon\",\n              \"coordinates\": $[$0 - 1].toJSON(),\n              \"properties\": {\n                m: true\n              }\n            };\n            break;\n\n          case 50:\n            this.$ = {\n              \"type\": \"MultiPolygon\",\n              \"coordinates\": $[$0 - 1].toJSON(),\n              \"properties\": {\n                z: true,\n                m: true\n              }\n            };\n            break;\n\n          case 51:\n            this.$ = {\n              \"type\": \"MultiPolygon\",\n              \"coordinates\": []\n            };\n            break;\n        }\n      },\n      table: [{\n        3: 1,\n        4: 2,\n        6: 3,\n        7: 4,\n        8: 5,\n        9: 6,\n        10: 7,\n        19: [1, 8],\n        28: [1, 9],\n        29: [1, 10],\n        30: [1, 11],\n        31: [1, 12],\n        32: [1, 13]\n      }, {\n        1: [3]\n      }, {\n        5: [1, 14]\n      }, {\n        5: [1, 15]\n      }, {\n        5: [1, 16]\n      }, {\n        5: [1, 17]\n      }, {\n        5: [1, 18]\n      }, {\n        5: [1, 19]\n      }, {\n        17: [1, 20],\n        20: [1, 21],\n        21: [1, 22],\n        22: [1, 23],\n        23: [1, 24]\n      }, {\n        17: [1, 25],\n        20: [1, 26],\n        21: [1, 28],\n        22: [1, 27],\n        23: [1, 29]\n      }, {\n        17: [1, 30],\n        20: [1, 31],\n        21: [1, 33],\n        22: [1, 32],\n        23: [1, 34]\n      }, {\n        17: [1, 35],\n        20: [1, 36],\n        21: [1, 38],\n        22: [1, 37],\n        23: [1, 39]\n      }, {\n        17: [1, 40],\n        20: [1, 41],\n        21: [1, 43],\n        22: [1, 42],\n        23: [1, 44]\n      }, {\n        17: [1, 45],\n        20: [1, 46],\n        21: [1, 48],\n        22: [1, 47],\n        23: [1, 49]\n      }, {\n        1: [2, 1]\n      }, {\n        1: [2, 2]\n      }, {\n        1: [2, 3]\n      }, {\n        1: [2, 4]\n      }, {\n        1: [2, 5]\n      }, {\n        1: [2, 6]\n      }, {\n        11: 51,\n        12: [1, 52],\n        13: 50\n      }, {\n        17: [1, 53]\n      }, {\n        17: [1, 54]\n      }, {\n        17: [1, 55]\n      }, {\n        5: [2, 19]\n      }, {\n        11: 58,\n        12: [1, 52],\n        17: [1, 59],\n        24: 57,\n        27: 56\n      }, {\n        17: [1, 60]\n      }, {\n        17: [1, 61]\n      }, {\n        17: [1, 62]\n      }, {\n        5: [2, 31]\n      }, {\n        15: 63,\n        16: 64,\n        17: [1, 65]\n      }, {\n        17: [1, 66]\n      }, {\n        17: [1, 67]\n      }, {\n        17: [1, 68]\n      }, {\n        5: [2, 36]\n      }, {\n        11: 58,\n        12: [1, 52],\n        17: [1, 59],\n        24: 57,\n        27: 69\n      }, {\n        17: [1, 70]\n      }, {\n        17: [1, 71]\n      }, {\n        17: [1, 72]\n      }, {\n        5: [2, 41]\n      }, {\n        15: 73,\n        16: 64,\n        17: [1, 65]\n      }, {\n        17: [1, 74]\n      }, {\n        17: [1, 75]\n      }, {\n        17: [1, 76]\n      }, {\n        5: [2, 46]\n      }, {\n        17: [1, 79],\n        25: 77,\n        26: 78\n      }, {\n        17: [1, 80]\n      }, {\n        17: [1, 81]\n      }, {\n        17: [1, 82]\n      }, {\n        5: [2, 51]\n      }, {\n        14: [1, 84],\n        18: [1, 83]\n      }, {\n        14: [2, 11],\n        18: [2, 11]\n      }, {\n        12: [1, 85]\n      }, {\n        11: 51,\n        12: [1, 52],\n        13: 86\n      }, {\n        11: 51,\n        12: [1, 52],\n        13: 87\n      }, {\n        11: 51,\n        12: [1, 52],\n        13: 88\n      }, {\n        14: [1, 90],\n        18: [1, 89]\n      }, {\n        14: [2, 26],\n        18: [2, 26]\n      }, {\n        14: [2, 20],\n        18: [2, 20]\n      }, {\n        11: 91,\n        12: [1, 52]\n      }, {\n        11: 58,\n        12: [1, 52],\n        17: [1, 59],\n        24: 57,\n        27: 92\n      }, {\n        11: 58,\n        12: [1, 52],\n        17: [1, 59],\n        24: 57,\n        27: 93\n      }, {\n        11: 58,\n        12: [1, 52],\n        17: [1, 59],\n        24: 57,\n        27: 94\n      }, {\n        14: [1, 96],\n        18: [1, 95]\n      }, {\n        14: [2, 13],\n        18: [2, 13]\n      }, {\n        11: 51,\n        12: [1, 52],\n        13: 97\n      }, {\n        15: 98,\n        16: 64,\n        17: [1, 65]\n      }, {\n        15: 99,\n        16: 64,\n        17: [1, 65]\n      }, {\n        15: 100,\n        16: 64,\n        17: [1, 65]\n      }, {\n        14: [1, 90],\n        18: [1, 101]\n      }, {\n        11: 58,\n        12: [1, 52],\n        17: [1, 59],\n        24: 57,\n        27: 102\n      }, {\n        11: 58,\n        12: [1, 52],\n        17: [1, 59],\n        24: 57,\n        27: 103\n      }, {\n        11: 58,\n        12: [1, 52],\n        17: [1, 59],\n        24: 57,\n        27: 104\n      }, {\n        14: [1, 96],\n        18: [1, 105]\n      }, {\n        15: 106,\n        16: 64,\n        17: [1, 65]\n      }, {\n        15: 107,\n        16: 64,\n        17: [1, 65]\n      }, {\n        15: 108,\n        16: 64,\n        17: [1, 65]\n      }, {\n        14: [1, 110],\n        18: [1, 109]\n      }, {\n        14: [2, 23],\n        18: [2, 23]\n      }, {\n        15: 111,\n        16: 64,\n        17: [1, 65]\n      }, {\n        17: [1, 79],\n        25: 112,\n        26: 78\n      }, {\n        17: [1, 79],\n        25: 113,\n        26: 78\n      }, {\n        17: [1, 79],\n        25: 114,\n        26: 78\n      }, {\n        5: [2, 15]\n      }, {\n        11: 115,\n        12: [1, 52]\n      }, {\n        12: [1, 116],\n        14: [2, 7],\n        18: [2, 7]\n      }, {\n        14: [1, 84],\n        18: [1, 117]\n      }, {\n        14: [1, 84],\n        18: [1, 118]\n      }, {\n        14: [1, 84],\n        18: [1, 119]\n      }, {\n        5: [2, 27]\n      }, {\n        11: 58,\n        12: [1, 52],\n        17: [1, 59],\n        24: 120\n      }, {\n        18: [1, 121]\n      }, {\n        14: [1, 90],\n        18: [1, 122]\n      }, {\n        14: [1, 90],\n        18: [1, 123]\n      }, {\n        14: [1, 90],\n        18: [1, 124]\n      }, {\n        5: [2, 32]\n      }, {\n        16: 125,\n        17: [1, 65]\n      }, {\n        14: [1, 84],\n        18: [1, 126]\n      }, {\n        14: [1, 96],\n        18: [1, 127]\n      }, {\n        14: [1, 96],\n        18: [1, 128]\n      }, {\n        14: [1, 96],\n        18: [1, 129]\n      }, {\n        5: [2, 37]\n      }, {\n        14: [1, 90],\n        18: [1, 130]\n      }, {\n        14: [1, 90],\n        18: [1, 131]\n      }, {\n        14: [1, 90],\n        18: [1, 132]\n      }, {\n        5: [2, 42]\n      }, {\n        14: [1, 96],\n        18: [1, 133]\n      }, {\n        14: [1, 96],\n        18: [1, 134]\n      }, {\n        14: [1, 96],\n        18: [1, 135]\n      }, {\n        5: [2, 47]\n      }, {\n        17: [1, 79],\n        26: 136\n      }, {\n        14: [1, 96],\n        18: [1, 137]\n      }, {\n        14: [1, 110],\n        18: [1, 138]\n      }, {\n        14: [1, 110],\n        18: [1, 139]\n      }, {\n        14: [1, 110],\n        18: [1, 140]\n      }, {\n        14: [2, 10],\n        18: [2, 10]\n      }, {\n        12: [1, 141],\n        14: [2, 8],\n        18: [2, 8]\n      }, {\n        5: [2, 16]\n      }, {\n        5: [2, 17]\n      }, {\n        5: [2, 18]\n      }, {\n        14: [2, 25],\n        18: [2, 25]\n      }, {\n        14: [2, 21],\n        18: [2, 21]\n      }, {\n        5: [2, 28]\n      }, {\n        5: [2, 29]\n      }, {\n        5: [2, 30]\n      }, {\n        14: [2, 12],\n        18: [2, 12]\n      }, {\n        14: [2, 14],\n        18: [2, 14]\n      }, {\n        5: [2, 33]\n      }, {\n        5: [2, 34]\n      }, {\n        5: [2, 35]\n      }, {\n        5: [2, 38]\n      }, {\n        5: [2, 39]\n      }, {\n        5: [2, 40]\n      }, {\n        5: [2, 43]\n      }, {\n        5: [2, 44]\n      }, {\n        5: [2, 45]\n      }, {\n        14: [2, 22],\n        18: [2, 22]\n      }, {\n        14: [2, 24],\n        18: [2, 24]\n      }, {\n        5: [2, 48]\n      }, {\n        5: [2, 49]\n      }, {\n        5: [2, 50]\n      }, {\n        14: [2, 9],\n        18: [2, 9]\n      }],\n      defaultActions: {\n        14: [2, 1],\n        15: [2, 2],\n        16: [2, 3],\n        17: [2, 4],\n        18: [2, 5],\n        19: [2, 6],\n        24: [2, 19],\n        29: [2, 31],\n        34: [2, 36],\n        39: [2, 41],\n        44: [2, 46],\n        49: [2, 51],\n        83: [2, 15],\n        89: [2, 27],\n        95: [2, 32],\n        101: [2, 37],\n        105: [2, 42],\n        109: [2, 47],\n        117: [2, 16],\n        118: [2, 17],\n        119: [2, 18],\n        122: [2, 28],\n        123: [2, 29],\n        124: [2, 30],\n        127: [2, 33],\n        128: [2, 34],\n        129: [2, 35],\n        130: [2, 38],\n        131: [2, 39],\n        132: [2, 40],\n        133: [2, 43],\n        134: [2, 44],\n        135: [2, 45],\n        138: [2, 48],\n        139: [2, 49],\n        140: [2, 50]\n      },\n      parseError: function parseError(str, hash) {\n        throw new Error(str);\n      },\n      parse: function parse(input) {\n        var self = this,\n            stack = [0],\n            vstack = [null],\n            lstack = [],\n            table = this.table,\n            yytext = \"\",\n            yylineno = 0,\n            yyleng = 0,\n            recovering = 0,\n            TERROR = 2,\n            EOF = 1;\n        this.lexer.setInput(input);\n        this.lexer.yy = this.yy;\n        this.yy.lexer = this.lexer;\n        this.yy.parser = this;\n        if (typeof this.lexer.yylloc == \"undefined\") this.lexer.yylloc = {};\n        var yyloc = this.lexer.yylloc;\n        lstack.push(yyloc);\n        var ranges = this.lexer.options && this.lexer.options.ranges;\n        if (typeof this.yy.parseError === \"function\") this.parseError = this.yy.parseError;\n\n        function popStack(n) {\n          stack.length = stack.length - 2 * n;\n          vstack.length = vstack.length - n;\n          lstack.length = lstack.length - n;\n        }\n\n        function lex() {\n          var token;\n          token = self.lexer.lex() || 1;\n\n          if (typeof token !== \"number\") {\n            token = self.symbols_[token] || token;\n          }\n\n          return token;\n        }\n\n        var symbol,\n            preErrorSymbol,\n            state,\n            action,\n            a,\n            r,\n            yyval = {},\n            p,\n            len,\n            newState,\n            expected;\n\n        while (true) {\n          state = stack[stack.length - 1];\n\n          if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n          } else {\n            if (symbol === null || typeof symbol == \"undefined\") {\n              symbol = lex();\n            }\n\n            action = table[state] && table[state][symbol];\n          }\n\n          if (typeof action === \"undefined\" || !action.length || !action[0]) {\n            var errStr = \"\";\n\n            if (!recovering) {\n              expected = [];\n\n              for (p in table[state]) if (this.terminals_[p] && p > 2) {\n                expected.push(\"'\" + this.terminals_[p] + \"'\");\n              }\n\n              if (this.lexer.showPosition) {\n                errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + this.lexer.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n              } else {\n                errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == 1 ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n              }\n\n              this.parseError(errStr, {\n                text: this.lexer.match,\n                token: this.terminals_[symbol] || symbol,\n                line: this.lexer.yylineno,\n                loc: yyloc,\n                expected: expected\n              });\n            }\n          }\n\n          if (action[0] instanceof Array && action.length > 1) {\n            throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n          }\n\n          switch (action[0]) {\n            case 1:\n              stack.push(symbol);\n              vstack.push(this.lexer.yytext);\n              lstack.push(this.lexer.yylloc);\n              stack.push(action[1]);\n              symbol = null;\n\n              if (!preErrorSymbol) {\n                yyleng = this.lexer.yyleng;\n                yytext = this.lexer.yytext;\n                yylineno = this.lexer.yylineno;\n                yyloc = this.lexer.yylloc;\n                if (recovering > 0) recovering--;\n              } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n              }\n\n              break;\n\n            case 2:\n              len = this.productions_[action[1]][1];\n              yyval.$ = vstack[vstack.length - len];\n              yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n              };\n\n              if (ranges) {\n                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n              }\n\n              r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n\n              if (typeof r !== \"undefined\") {\n                return r;\n              }\n\n              if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n              }\n\n              stack.push(this.productions_[action[1]][0]);\n              vstack.push(yyval.$);\n              lstack.push(yyval._$);\n              newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n              stack.push(newState);\n              break;\n\n            case 3:\n              return true;\n          }\n        }\n\n        return true;\n      }\n    };\n    undefined;\n    /* Jison generated lexer */\n\n    var lexer = function () {\n      var lexer = {\n        EOF: 1,\n        parseError: function parseError(str, hash) {\n          if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n          } else {\n            throw new Error(str);\n          }\n        },\n        setInput: function (input) {\n          this._input = input;\n          this._more = this._less = this.done = false;\n          this.yylineno = this.yyleng = 0;\n          this.yytext = this.matched = this.match = '';\n          this.conditionStack = ['INITIAL'];\n          this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n          };\n          if (this.options.ranges) this.yylloc.range = [0, 0];\n          this.offset = 0;\n          return this;\n        },\n        input: function () {\n          var ch = this._input[0];\n          this.yytext += ch;\n          this.yyleng++;\n          this.offset++;\n          this.match += ch;\n          this.matched += ch;\n          var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n\n          if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n          } else {\n            this.yylloc.last_column++;\n          }\n\n          if (this.options.ranges) this.yylloc.range[1]++;\n          this._input = this._input.slice(1);\n          return ch;\n        },\n        unput: function (ch) {\n          var len = ch.length;\n          var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n          this._input = ch + this._input;\n          this.yytext = this.yytext.substr(0, this.yytext.length - len - 1); //this.yyleng -= len;\n\n          this.offset -= len;\n          var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n          this.match = this.match.substr(0, this.match.length - 1);\n          this.matched = this.matched.substr(0, this.matched.length - 1);\n          if (lines.length - 1) this.yylineno -= lines.length - 1;\n          var r = this.yylloc.range;\n          this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n          };\n\n          if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n          }\n\n          return this;\n        },\n        more: function () {\n          this._more = true;\n          return this;\n        },\n        less: function (n) {\n          this.unput(this.match.slice(n));\n        },\n        pastInput: function () {\n          var past = this.matched.substr(0, this.matched.length - this.match.length);\n          return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n        },\n        upcomingInput: function () {\n          var next = this.match;\n\n          if (next.length < 20) {\n            next += this._input.substr(0, 20 - next.length);\n          }\n\n          return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n        },\n        showPosition: function () {\n          var pre = this.pastInput();\n          var c = new Array(pre.length + 1).join(\"-\");\n          return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n        },\n        next: function () {\n          if (this.done) {\n            return this.EOF;\n          }\n\n          if (!this._input) this.done = true;\n          var token, match, tempMatch, index, col, lines;\n\n          if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n          }\n\n          var rules = this._currentRules();\n\n          for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n              match = tempMatch;\n              index = i;\n              if (!this.options.flex) break;\n            }\n          }\n\n          if (match) {\n            lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n            if (lines) this.yylineno += lines.length;\n            this.yylloc = {\n              first_line: this.yylloc.last_line,\n              last_line: this.yylineno + 1,\n              first_column: this.yylloc.last_column,\n              last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length\n            };\n            this.yytext += match[0];\n            this.match += match[0];\n            this.matches = match;\n            this.yyleng = this.yytext.length;\n\n            if (this.options.ranges) {\n              this.yylloc.range = [this.offset, this.offset += this.yyleng];\n            }\n\n            this._more = false;\n            this._input = this._input.slice(match[0].length);\n            this.matched += match[0];\n            token = this.performAction.call(this, this.yy, this, rules[index], this.conditionStack[this.conditionStack.length - 1]);\n            if (this.done && this._input) this.done = false;\n            if (token) return token;else return;\n          }\n\n          if (this._input === \"\") {\n            return this.EOF;\n          } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n              text: \"\",\n              token: null,\n              line: this.yylineno\n            });\n          }\n        },\n        lex: function lex() {\n          var r = this.next();\n\n          if (typeof r !== 'undefined') {\n            return r;\n          } else {\n            return this.lex();\n          }\n        },\n        begin: function begin(condition) {\n          this.conditionStack.push(condition);\n        },\n        popState: function popState() {\n          return this.conditionStack.pop();\n        },\n        _currentRules: function _currentRules() {\n          return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        },\n        topState: function () {\n          return this.conditionStack[this.conditionStack.length - 2];\n        },\n        pushState: function begin(condition) {\n          this.begin(condition);\n        }\n      };\n      lexer.options = {};\n\n      lexer.performAction = function anonymous(yy, yy_, $avoiding_name_collisions, YY_START\n      /**/\n      ) {\n        var YYSTATE = YY_START;\n\n        switch ($avoiding_name_collisions) {\n          case 0:\n            // ignore\n            break;\n\n          case 1:\n            return 17;\n            break;\n\n          case 2:\n            return 18;\n            break;\n\n          case 3:\n            return 12;\n            break;\n\n          case 4:\n            return 19;\n            break;\n\n          case 5:\n            return 28;\n            break;\n\n          case 6:\n            return 29;\n            break;\n\n          case 7:\n            return 30;\n            break;\n\n          case 8:\n            return 31;\n            break;\n\n          case 9:\n            return 32;\n            break;\n\n          case 10:\n            return 14;\n            break;\n\n          case 11:\n            return 23;\n            break;\n\n          case 12:\n            return 22;\n            break;\n\n          case 13:\n            return 20;\n            break;\n\n          case 14:\n            return 21;\n            break;\n\n          case 15:\n            return 5;\n            break;\n\n          case 16:\n            return \"INVALID\";\n            break;\n        }\n      };\n\n      lexer.rules = [/^(?:\\s+)/, /^(?:\\()/, /^(?:\\))/, /^(?:-?[0-9]+(\\.[0-9]+)?([eE][\\-\\+]?[0-9]+)?)/, /^(?:POINT\\b)/, /^(?:LINESTRING\\b)/, /^(?:POLYGON\\b)/, /^(?:MULTIPOINT\\b)/, /^(?:MULTILINESTRING\\b)/, /^(?:MULTIPOLYGON\\b)/, /^(?:,)/, /^(?:EMPTY\\b)/, /^(?:M\\b)/, /^(?:Z\\b)/, /^(?:ZM\\b)/, /^(?:$)/, /^(?:.)/];\n      lexer.conditions = {\n        \"INITIAL\": {\n          \"rules\": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],\n          \"inclusive\": true\n        }\n      };\n      return lexer;\n    }();\n\n    parser.lexer = lexer;\n\n    function Parser() {\n      this.yy = {};\n    }\n\n    Parser.prototype = parser;\n    parser.Parser = Parser;\n    return new Parser();\n  }();\n\n  function PointArray(point) {\n    this.data = [point];\n    this.type = 'PointArray';\n  }\n\n  PointArray.prototype.addPoint = function (point) {\n    if (point.type === 'PointArray') {\n      this.data = this.data.concat(point.data);\n    } else {\n      this.data.push(point);\n    }\n\n    return this;\n  };\n\n  PointArray.prototype.toJSON = function () {\n    return this.data;\n  };\n\n  function Ring(point) {\n    this.data = point;\n    this.type = 'Ring';\n  }\n\n  Ring.prototype.toJSON = function () {\n    var data = [];\n\n    for (var i = 0; i < this.data.data.length; i++) {\n      data.push(this.data.data[i]);\n    }\n\n    return data;\n  };\n\n  function RingList(ring) {\n    this.data = [ring];\n    this.type = 'RingList';\n  }\n\n  RingList.prototype.addRing = function (ring) {\n    this.data.push(ring);\n    return this;\n  };\n\n  RingList.prototype.toJSON = function () {\n    var data = [];\n\n    for (var i = 0; i < this.data.length; i++) {\n      data.push(this.data[i].toJSON());\n    }\n\n    if (data.length === 1) {\n      return data;\n    } else {\n      return data;\n    }\n  };\n\n  function PolygonList(polygon) {\n    this.data = [polygon];\n    this.type = 'PolygonList';\n  }\n\n  PolygonList.prototype.addPolygon = function (polygon) {\n    this.data.push(polygon);\n    return this;\n  };\n\n  PolygonList.prototype.toJSON = function () {\n    var data = [];\n\n    for (var i = 0; i < this.data.length; i++) {\n      data = data.concat([this.data[i].toJSON()]);\n    }\n\n    return data;\n  };\n\n  function _parse() {\n    return parser.parse.apply(parser, arguments);\n  }\n\n  function parse(element) {\n    var res, primitive;\n\n    try {\n      res = parser.parse(element);\n    } catch (err) {\n      throw Error(\"Unable to parse: \" + err);\n    }\n\n    return Terraformer.Primitive(res);\n  }\n\n  function arrayToRing(arr) {\n    var parts = [],\n        ret = '';\n\n    for (var i = 0; i < arr.length; i++) {\n      parts.push(arr[i].join(' '));\n    }\n\n    ret += '(' + parts.join(', ') + ')';\n    return ret;\n  }\n\n  function pointToWKTPoint(primitive) {\n    var ret = 'POINT ';\n\n    if (primitive.coordinates === undefined || primitive.coordinates.length === 0) {\n      ret += 'EMPTY';\n      return ret;\n    } else if (primitive.coordinates.length === 3) {\n      // 3d or time? default to 3d\n      if (primitive.properties && primitive.properties.m === true) {\n        ret += 'M ';\n      } else {\n        ret += 'Z ';\n      }\n    } else if (primitive.coordinates.length === 4) {\n      // 3d and time\n      ret += 'ZM ';\n    } // include coordinates\n\n\n    ret += '(' + primitive.coordinates.join(' ') + ')';\n    return ret;\n  }\n\n  function lineStringToWKTLineString(primitive) {\n    var ret = 'LINESTRING ';\n\n    if (primitive.coordinates === undefined || primitive.coordinates.length === 0 || primitive.coordinates[0].length === 0) {\n      ret += 'EMPTY';\n      return ret;\n    } else if (primitive.coordinates[0].length === 3) {\n      if (primitive.properties && primitive.properties.m === true) {\n        ret += 'M ';\n      } else {\n        ret += 'Z ';\n      }\n    } else if (primitive.coordinates[0].length === 4) {\n      ret += 'ZM ';\n    }\n\n    ret += arrayToRing(primitive.coordinates);\n    return ret;\n  }\n\n  function polygonToWKTPolygon(primitive) {\n    var ret = 'POLYGON ';\n\n    if (primitive.coordinates === undefined || primitive.coordinates.length === 0 || primitive.coordinates[0].length === 0) {\n      ret += 'EMPTY';\n      return ret;\n    } else if (primitive.coordinates[0][0].length === 3) {\n      if (primitive.properties && primitive.properties.m === true) {\n        ret += 'M ';\n      } else {\n        ret += 'Z ';\n      }\n    } else if (primitive.coordinates[0][0].length === 4) {\n      ret += 'ZM ';\n    }\n\n    ret += '(';\n    var parts = [];\n\n    for (var i = 0; i < primitive.coordinates.length; i++) {\n      parts.push(arrayToRing(primitive.coordinates[i]));\n    }\n\n    ret += parts.join(', ');\n    ret += ')';\n    return ret;\n  }\n\n  function multiPointToWKTMultiPoint(primitive) {\n    var ret = 'MULTIPOINT ';\n\n    if (primitive.coordinates === undefined || primitive.coordinates.length === 0 || primitive.coordinates[0].length === 0) {\n      ret += 'EMPTY';\n      return ret;\n    } else if (primitive.coordinates[0].length === 3) {\n      if (primitive.properties && primitive.properties.m === true) {\n        ret += 'M ';\n      } else {\n        ret += 'Z ';\n      }\n    } else if (primitive.coordinates[0].length === 4) {\n      ret += 'ZM ';\n    }\n\n    ret += arrayToRing(primitive.coordinates);\n    return ret;\n  }\n\n  function multiLineStringToWKTMultiLineString(primitive) {\n    var ret = 'MULTILINESTRING ';\n\n    if (primitive.coordinates === undefined || primitive.coordinates.length === 0 || primitive.coordinates[0].length === 0) {\n      ret += 'EMPTY';\n      return ret;\n    } else if (primitive.coordinates[0][0].length === 3) {\n      if (primitive.properties && primitive.properties.m === true) {\n        ret += 'M ';\n      } else {\n        ret += 'Z ';\n      }\n    } else if (primitive.coordinates[0][0].length === 4) {\n      ret += 'ZM ';\n    }\n\n    ret += '(';\n    var parts = [];\n\n    for (var i = 0; i < primitive.coordinates.length; i++) {\n      parts.push(arrayToRing(primitive.coordinates[i]));\n    }\n\n    ret += parts.join(', ');\n    ret += ')';\n    return ret;\n  }\n\n  function multiPolygonToWKTMultiPolygon(primitive) {\n    var ret = 'MULTIPOLYGON ';\n\n    if (primitive.coordinates === undefined || primitive.coordinates.length === 0 || primitive.coordinates[0].length === 0) {\n      ret += 'EMPTY';\n      return ret;\n    } else if (primitive.coordinates[0][0][0].length === 3) {\n      if (primitive.properties && primitive.properties.m === true) {\n        ret += 'M ';\n      } else {\n        ret += 'Z ';\n      }\n    } else if (primitive.coordinates[0][0][0].length === 4) {\n      ret += 'ZM ';\n    }\n\n    ret += '(';\n    var inner = [];\n\n    for (var c = 0; c < primitive.coordinates.length; c++) {\n      var it = '(';\n      var parts = [];\n\n      for (var i = 0; i < primitive.coordinates[c].length; i++) {\n        parts.push(arrayToRing(primitive.coordinates[c][i]));\n      }\n\n      it += parts.join(', ');\n      it += ')';\n      inner.push(it);\n    }\n\n    ret += inner.join(', ');\n    ret += ')';\n    return ret;\n  }\n\n  function convert(primitive) {\n    switch (primitive.type) {\n      case 'Point':\n        return pointToWKTPoint(primitive);\n\n      case 'LineString':\n        return lineStringToWKTLineString(primitive);\n\n      case 'Polygon':\n        return polygonToWKTPolygon(primitive);\n\n      case 'MultiPoint':\n        return multiPointToWKTMultiPoint(primitive);\n\n      case 'MultiLineString':\n        return multiLineStringToWKTMultiLineString(primitive);\n\n      case 'MultiPolygon':\n        return multiPolygonToWKTMultiPolygon(primitive);\n\n      case 'GeometryCollection':\n        var ret = 'GEOMETRYCOLLECTION';\n        var parts = [];\n\n        for (i = 0; i < primitive.geometries.length; i++) {\n          parts.push(convert(primitive.geometries[i]));\n        }\n\n        return ret + '(' + parts.join(', ') + ')';\n\n      default:\n        throw Error(\"Unknown Type: \" + primitive.type);\n    }\n  }\n\n  exports.parser = parser;\n  exports.Parser = parser.Parser;\n  exports.parse = parse;\n  exports.convert = convert;\n  return exports;\n});","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/node_modules/terraformer-wkt-parser/terraformer-wkt-parser.js"],"names":["root","factory","module","exports","require","navigator","Terraformer","Error","WKT","parser","trace","yy","symbols_","terminals_","productions_","performAction","anonymous","yytext","yyleng","yylineno","yystate","$","_$","$0","length","PointArray","Number","addPoint","addRing","RingList","Ring","data","z","m","addPolygon","PolygonList","toJSON","table","defaultActions","parseError","str","hash","parse","input","self","stack","vstack","lstack","recovering","TERROR","EOF","lexer","setInput","yylloc","yyloc","push","ranges","options","popStack","n","lex","token","symbol","preErrorSymbol","state","action","a","r","yyval","p","len","newState","expected","errStr","showPosition","join","text","match","line","loc","Array","first_line","last_line","first_column","last_column","range","call","slice","undefined","_input","_more","_less","done","matched","conditionStack","offset","ch","lines","unput","split","substr","oldLines","more","less","pastInput","past","replace","upcomingInput","next","pre","c","tempMatch","index","col","rules","_currentRules","i","flex","matches","begin","condition","popState","pop","conditions","topState","pushState","yy_","$avoiding_name_collisions","YY_START","YYSTATE","Parser","prototype","point","type","concat","ring","polygon","_parse","apply","arguments","element","res","primitive","err","Primitive","arrayToRing","arr","parts","ret","pointToWKTPoint","coordinates","properties","lineStringToWKTLineString","polygonToWKTPolygon","multiPointToWKTMultiPoint","multiLineStringToWKTMultiLineString","multiPolygonToWKTMultiPolygon","inner","it","convert","geometries"],"mappings":"AAAC,WAAUA,IAAV,EAAgBC,OAAhB,EAAyB;AAExB;AACA,MAAG,OAAOC,MAAP,KAAkB,QAAlB,IAA8B,OAAOA,MAAM,CAACC,OAAd,KAA0B,QAA3D,EAAqE;AACnEA,IAAAA,OAAO,GAAGD,MAAM,CAACC,OAAP,GAAiBF,OAAO,CAACG,OAAO,CAAC,aAAD,CAAR,CAAlC;AACD,GAFD,MAEO,IAAG,OAAOC,SAAP,KAAqB,QAAxB,EAAkC;AACvC;AACA,QAAI,CAACL,IAAI,CAACM,WAAV,EAAsB;AACpB,YAAM,IAAIC,KAAJ,CAAU,2FAAV,CAAN;AACD;;AACDP,IAAAA,IAAI,CAACM,WAAL,CAAiBE,GAAjB,GAAuBP,OAAO,CAACD,IAAI,CAACM,WAAN,CAA9B;AACD;AAEF,CAbA,EAaC,IAbD,EAaO,UAASA,WAAT,EAAsB;AAC5B,MAAIH,OAAO,GAAG,EAAd;AAEA;;AACF,MAAIM,MAAM,GAAI,YAAU;AACxB,QAAIA,MAAM,GAAG;AAACC,MAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB,CAAG,CAA5B;AACbC,MAAAA,EAAE,EAAE,EADS;AAEbC,MAAAA,QAAQ,EAAE;AAAC,iBAAQ,CAAT;AAAW,uBAAc,CAAzB;AAA2B,iBAAQ,CAAnC;AAAqC,eAAM,CAA3C;AAA6C,sBAAa,CAA1D;AAA4D,mBAAU,CAAtE;AAAwE,sBAAa,CAArF;AAAuF,2BAAkB,CAAzG;AAA2G,wBAAe,EAA1H;AAA6H,sBAAa,EAA1I;AAA6I,sBAAa,EAA1J;AAA6J,mBAAU,EAAvK;AAA0K,iBAAQ,EAAlL;AAAqL,qBAAY,EAAjM;AAAoM,gBAAO,EAA3M;AAA8M,aAAI,EAAlN;AAAqN,aAAI,EAAzN;AAA4N,iBAAQ,EAApO;AAAuO,aAAI,EAA3O;AAA8O,cAAK,EAAnP;AAAsP,aAAI,EAA1P;AAA6P,iBAAQ,EAArQ;AAAwQ,0BAAiB,EAAzR;AAA4R,wBAAe,EAA3S;AAA8S,4BAAmB,EAAjU;AAAoU,sBAAa,EAAjV;AAAoV,sBAAa,EAAjW;AAAoW,mBAAU,EAA9W;AAAiX,sBAAa,EAA9X;AAAiY,2BAAkB,EAAnZ;AAAsZ,wBAAe,EAAra;AAAwa,mBAAU,CAAlb;AAAob,gBAAO;AAA3b,OAFG;AAGbC,MAAAA,UAAU,EAAE;AAAC,WAAE,OAAH;AAAW,WAAE,KAAb;AAAmB,YAAG,YAAtB;AAAmC,YAAG,OAAtC;AAA8C,YAAG,GAAjD;AAAqD,YAAG,GAAxD;AAA4D,YAAG,OAA/D;AAAuE,YAAG,GAA1E;AAA8E,YAAG,IAAjF;AAAsF,YAAG,GAAzF;AAA6F,YAAG,OAAhG;AAAwG,YAAG,YAA3G;AAAwH,YAAG,SAA3H;AAAqI,YAAG,YAAxI;AAAqJ,YAAG,iBAAxJ;AAA0K,YAAG;AAA7K,OAHC;AAIbC,MAAAA,YAAY,EAAE,CAAC,CAAD,EAAG,CAAC,CAAD,EAAG,CAAH,CAAH,EAAS,CAAC,CAAD,EAAG,CAAH,CAAT,EAAe,CAAC,CAAD,EAAG,CAAH,CAAf,EAAqB,CAAC,CAAD,EAAG,CAAH,CAArB,EAA2B,CAAC,CAAD,EAAG,CAAH,CAA3B,EAAiC,CAAC,CAAD,EAAG,CAAH,CAAjC,EAAuC,CAAC,EAAD,EAAI,CAAJ,CAAvC,EAA8C,CAAC,EAAD,EAAI,CAAJ,CAA9C,EAAqD,CAAC,EAAD,EAAI,CAAJ,CAArD,EAA4D,CAAC,EAAD,EAAI,CAAJ,CAA5D,EAAmE,CAAC,EAAD,EAAI,CAAJ,CAAnE,EAA0E,CAAC,EAAD,EAAI,CAAJ,CAA1E,EAAiF,CAAC,EAAD,EAAI,CAAJ,CAAjF,EAAwF,CAAC,EAAD,EAAI,CAAJ,CAAxF,EAA+F,CAAC,CAAD,EAAG,CAAH,CAA/F,EAAqG,CAAC,CAAD,EAAG,CAAH,CAArG,EAA2G,CAAC,CAAD,EAAG,CAAH,CAA3G,EAAiH,CAAC,CAAD,EAAG,CAAH,CAAjH,EAAuH,CAAC,CAAD,EAAG,CAAH,CAAvH,EAA6H,CAAC,EAAD,EAAI,CAAJ,CAA7H,EAAoI,CAAC,EAAD,EAAI,CAAJ,CAApI,EAA2I,CAAC,EAAD,EAAI,CAAJ,CAA3I,EAAkJ,CAAC,EAAD,EAAI,CAAJ,CAAlJ,EAAyJ,CAAC,EAAD,EAAI,CAAJ,CAAzJ,EAAgK,CAAC,EAAD,EAAI,CAAJ,CAAhK,EAAuK,CAAC,EAAD,EAAI,CAAJ,CAAvK,EAA8K,CAAC,CAAD,EAAG,CAAH,CAA9K,EAAoL,CAAC,CAAD,EAAG,CAAH,CAApL,EAA0L,CAAC,CAAD,EAAG,CAAH,CAA1L,EAAgM,CAAC,CAAD,EAAG,CAAH,CAAhM,EAAsM,CAAC,CAAD,EAAG,CAAH,CAAtM,EAA4M,CAAC,CAAD,EAAG,CAAH,CAA5M,EAAkN,CAAC,CAAD,EAAG,CAAH,CAAlN,EAAwN,CAAC,CAAD,EAAG,CAAH,CAAxN,EAA8N,CAAC,CAAD,EAAG,CAAH,CAA9N,EAAoO,CAAC,CAAD,EAAG,CAAH,CAApO,EAA0O,CAAC,CAAD,EAAG,CAAH,CAA1O,EAAgP,CAAC,CAAD,EAAG,CAAH,CAAhP,EAAsP,CAAC,CAAD,EAAG,CAAH,CAAtP,EAA4P,CAAC,CAAD,EAAG,CAAH,CAA5P,EAAkQ,CAAC,CAAD,EAAG,CAAH,CAAlQ,EAAwQ,CAAC,CAAD,EAAG,CAAH,CAAxQ,EAA8Q,CAAC,CAAD,EAAG,CAAH,CAA9Q,EAAoR,CAAC,CAAD,EAAG,CAAH,CAApR,EAA0R,CAAC,CAAD,EAAG,CAAH,CAA1R,EAAgS,CAAC,CAAD,EAAG,CAAH,CAAhS,EAAsS,CAAC,EAAD,EAAI,CAAJ,CAAtS,EAA6S,CAAC,EAAD,EAAI,CAAJ,CAA7S,EAAoT,CAAC,EAAD,EAAI,CAAJ,CAApT,EAA2T,CAAC,EAAD,EAAI,CAAJ,CAA3T,EAAkU,CAAC,EAAD,EAAI,CAAJ,CAAlU,CAJD;AAKbC,MAAAA,aAAa,EAAE,SAASC,SAAT,CAAmBC,MAAnB,EAA0BC,MAA1B,EAAiCC,QAAjC,EAA0CR,EAA1C,EAA6CS,OAA7C,EAAqDC,CAArD,EAAuDC;AACtE;AADe,QACT;AAEN,YAAIC,EAAE,GAAGF,CAAC,CAACG,MAAF,GAAW,CAApB;;AACA,gBAAQJ,OAAR;AACA,eAAK,CAAL;AAAQ,mBAAOC,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAR;AACR;;AACA,eAAK,CAAL;AAAQ,mBAAOF,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAR;AACR;;AACA,eAAK,CAAL;AAAQ,mBAAOF,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAR;AACR;;AACA,eAAK,CAAL;AAAQ,mBAAOF,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAR;AACR;;AACA,eAAK,CAAL;AAAQ,mBAAOF,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAR;AACR;;AACA,eAAK,CAAL;AAAQ,mBAAOF,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAR;AACR;;AACA,eAAK,CAAL;AAAQ,iBAAKF,CAAL,GAAS,IAAII,UAAJ,CAAe,CAAEC,MAAM,CAACL,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAF,CAAR,EAAmBG,MAAM,CAACL,CAAC,CAACE,EAAD,CAAF,CAAzB,CAAf,CAAT;AACR;;AACA,eAAK,CAAL;AAAQ,iBAAKF,CAAL,GAAS,IAAII,UAAJ,CAAe,CAAEC,MAAM,CAACL,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAF,CAAR,EAAmBG,MAAM,CAACL,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAF,CAAzB,EAAoCG,MAAM,CAACL,CAAC,CAACE,EAAD,CAAF,CAA1C,CAAf,CAAT;AACR;;AACA,eAAK,CAAL;AAAQ,iBAAKF,CAAL,GAAS,IAAII,UAAJ,CAAe,CAAEC,MAAM,CAACL,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAF,CAAR,EAAmBG,MAAM,CAACL,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAF,CAAzB,EAAoCG,MAAM,CAACL,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAF,CAA1C,EAAqDG,MAAM,CAACL,CAAC,CAACE,EAAD,CAAF,CAA3D,CAAf,CAAT;AACR;;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAASA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQI,QAAR,CAAiBN,CAAC,CAACE,EAAD,CAAlB,CAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAASA,CAAC,CAACE,EAAD,CAAV;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAASA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQK,OAAR,CAAgBP,CAAC,CAACE,EAAD,CAAjB,CAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAAS,IAAIQ,QAAJ,CAAaR,CAAC,CAACE,EAAD,CAAd,CAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAAS,IAAIS,IAAJ,CAAST,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAV,CAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAAS;AAAE,sBAAQ,OAAV;AAAmB,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQQ,IAAR,CAAa,CAAb;AAAlC,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKV,CAAL,GAAS;AAAE,sBAAQ,OAAV;AAAmB,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQQ,IAAR,CAAa,CAAb,CAAlC;AAAmD,4BAAc;AAAEC,gBAAAA,CAAC,EAAE;AAAL;AAAjE,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKX,CAAL,GAAS;AAAE,sBAAQ,OAAV;AAAmB,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQQ,IAAR,CAAa,CAAb,CAAlC;AAAmD,4BAAc;AAAEC,gBAAAA,CAAC,EAAE,IAAL;AAAWC,gBAAAA,CAAC,EAAE;AAAd;AAAjE,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKZ,CAAL,GAAS;AAAE,sBAAQ,OAAV;AAAmB,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQQ,IAAR,CAAa,CAAb,CAAlC;AAAmD,4BAAc;AAAEE,gBAAAA,CAAC,EAAE;AAAL;AAAjE,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKZ,CAAL,GAAS;AAAE,sBAAQ,OAAV;AAAmB,6BAAe;AAAlC,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKA,CAAL,GAASA,CAAC,CAACE,EAAD,CAAV;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAASA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAV;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAASA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQW,UAAR,CAAmBb,CAAC,CAACE,EAAD,CAApB,CAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAAS,IAAIc,WAAJ,CAAgBd,CAAC,CAACE,EAAD,CAAjB,CAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAASA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAV;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAASA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQI,QAAR,CAAiBN,CAAC,CAACE,EAAD,CAAlB,CAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAASA,CAAC,CAACE,EAAD,CAAV;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKF,CAAL,GAAS;AAAE,sBAAQ,YAAV;AAAwB,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQQ;AAA/C,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKV,CAAL,GAAS;AAAE,sBAAQ,YAAV;AAAwB,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQQ,IAA/C;AAAqD,4BAAc;AAAEC,gBAAAA,CAAC,EAAE;AAAL;AAAnE,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKX,CAAL,GAAS;AAAE,sBAAQ,YAAV;AAAwB,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQQ,IAA/C;AAAqD,4BAAc;AAAEE,gBAAAA,CAAC,EAAE;AAAL;AAAnE,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKZ,CAAL,GAAS;AAAE,sBAAQ,YAAV;AAAwB,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQQ,IAA/C;AAAqD,4BAAc;AAAEC,gBAAAA,CAAC,EAAE,IAAL;AAAWC,gBAAAA,CAAC,EAAE;AAAd;AAAnE,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKZ,CAAL,GAAS;AAAE,sBAAQ,YAAV;AAAwB,6BAAe;AAAvC,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKA,CAAL,GAAS;AAAE,sBAAQ,SAAV;AAAqB,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQa,MAAR;AAApC,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKf,CAAL,GAAS;AAAE,sBAAQ,SAAV;AAAqB,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQa,MAAR,EAApC;AAAsD,4BAAc;AAAEJ,gBAAAA,CAAC,EAAE;AAAL;AAApE,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKX,CAAL,GAAS;AAAE,sBAAQ,SAAV;AAAqB,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQa,MAAR,EAApC;AAAsD,4BAAc;AAAEH,gBAAAA,CAAC,EAAE;AAAL;AAApE,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKZ,CAAL,GAAS;AAAE,sBAAQ,SAAV;AAAqB,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQa,MAAR,EAApC;AAAsD,4BAAc;AAAEJ,gBAAAA,CAAC,EAAE,IAAL;AAAWC,gBAAAA,CAAC,EAAE;AAAd;AAApE,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKZ,CAAL,GAAS;AAAE,sBAAQ,SAAV;AAAqB,6BAAe;AAApC,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKA,CAAL,GAAS;AAAE,sBAAQ,YAAV;AAAwB,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQQ;AAA/C,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKV,CAAL,GAAS;AAAE,sBAAQ,YAAV;AAAwB,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQQ,IAA/C;AAAqD,4BAAc;AAAEC,gBAAAA,CAAC,EAAE;AAAL;AAAnE,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKX,CAAL,GAAS;AAAE,sBAAQ,YAAV;AAAwB,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQQ,IAA/C;AAAqD,4BAAc;AAAEE,gBAAAA,CAAC,EAAE;AAAL;AAAnE,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKZ,CAAL,GAAS;AAAE,sBAAQ,YAAV;AAAwB,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQQ,IAA/C;AAAqD,4BAAc;AAAEC,gBAAAA,CAAC,EAAE,IAAL;AAAWC,gBAAAA,CAAC,EAAE;AAAd;AAAnE,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKZ,CAAL,GAAS;AAAE,sBAAQ,YAAV;AAAwB,6BAAe;AAAvC,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKA,CAAL,GAAS;AAAE,sBAAQ,iBAAV;AAA6B,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQa,MAAR;AAA5C,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKf,CAAL,GAAS;AAAE,sBAAQ,iBAAV;AAA6B,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQa,MAAR,EAA5C;AAA8D,4BAAc;AAAEJ,gBAAAA,CAAC,EAAE;AAAL;AAA5E,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKX,CAAL,GAAS;AAAE,sBAAQ,iBAAV;AAA6B,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQa,MAAR,EAA5C;AAA8D,4BAAc;AAAEH,gBAAAA,CAAC,EAAE;AAAL;AAA5E,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKZ,CAAL,GAAS;AAAE,sBAAQ,iBAAV;AAA6B,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQa,MAAR,EAA5C;AAA8D,4BAAc;AAAEJ,gBAAAA,CAAC,EAAE,IAAL;AAAWC,gBAAAA,CAAC,EAAE;AAAd;AAA5E,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKZ,CAAL,GAAS;AAAE,sBAAQ,iBAAV;AAA6B,6BAAe;AAA5C,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKA,CAAL,GAAS;AAAE,sBAAQ,cAAV;AAA0B,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQa,MAAR;AAAzC,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKf,CAAL,GAAS;AAAE,sBAAQ,cAAV;AAA0B,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQa,MAAR,EAAzC;AAA2D,4BAAc;AAAEJ,gBAAAA,CAAC,EAAE;AAAL;AAAzE,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKX,CAAL,GAAS;AAAE,sBAAQ,cAAV;AAA0B,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQa,MAAR,EAAzC;AAA2D,4BAAc;AAAEH,gBAAAA,CAAC,EAAE;AAAL;AAAzE,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKZ,CAAL,GAAS;AAAE,sBAAQ,cAAV;AAA0B,6BAAeA,CAAC,CAACE,EAAE,GAAC,CAAJ,CAAD,CAAQa,MAAR,EAAzC;AAA2D,4BAAc;AAAEJ,gBAAAA,CAAC,EAAE,IAAL;AAAWC,gBAAAA,CAAC,EAAE;AAAd;AAAzE,aAAT;AACT;;AACA,eAAK,EAAL;AAAS,iBAAKZ,CAAL,GAAS;AAAE,sBAAQ,cAAV;AAA0B,6BAAe;AAAzC,aAAT;AACT;AAtGA;AAwGC,OAjHY;AAkHbgB,MAAAA,KAAK,EAAE,CAAC;AAAC,WAAE,CAAH;AAAK,WAAE,CAAP;AAAS,WAAE,CAAX;AAAa,WAAE,CAAf;AAAiB,WAAE,CAAnB;AAAqB,WAAE,CAAvB;AAAyB,YAAG,CAA5B;AAA8B,YAAG,CAAC,CAAD,EAAG,CAAH,CAAjC;AAAuC,YAAG,CAAC,CAAD,EAAG,CAAH,CAA1C;AAAgD,YAAG,CAAC,CAAD,EAAG,EAAH,CAAnD;AAA0D,YAAG,CAAC,CAAD,EAAG,EAAH,CAA7D;AAAoE,YAAG,CAAC,CAAD,EAAG,EAAH,CAAvE;AAA8E,YAAG,CAAC,CAAD,EAAG,EAAH;AAAjF,OAAD,EAA0F;AAAC,WAAE,CAAC,CAAD;AAAH,OAA1F,EAAkG;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAAlG,EAA6G;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAA7G,EAAwH;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAAxH,EAAmI;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAAnI,EAA8I;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAA9I,EAAyJ;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAAzJ,EAAoK;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,EAAH,CAAd;AAAqB,YAAG,CAAC,CAAD,EAAG,EAAH,CAAxB;AAA+B,YAAG,CAAC,CAAD,EAAG,EAAH,CAAlC;AAAyC,YAAG,CAAC,CAAD,EAAG,EAAH;AAA5C,OAApK,EAAwN;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,EAAH,CAAd;AAAqB,YAAG,CAAC,CAAD,EAAG,EAAH,CAAxB;AAA+B,YAAG,CAAC,CAAD,EAAG,EAAH,CAAlC;AAAyC,YAAG,CAAC,CAAD,EAAG,EAAH;AAA5C,OAAxN,EAA4Q;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,EAAH,CAAd;AAAqB,YAAG,CAAC,CAAD,EAAG,EAAH,CAAxB;AAA+B,YAAG,CAAC,CAAD,EAAG,EAAH,CAAlC;AAAyC,YAAG,CAAC,CAAD,EAAG,EAAH;AAA5C,OAA5Q,EAAgU;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,EAAH,CAAd;AAAqB,YAAG,CAAC,CAAD,EAAG,EAAH,CAAxB;AAA+B,YAAG,CAAC,CAAD,EAAG,EAAH,CAAlC;AAAyC,YAAG,CAAC,CAAD,EAAG,EAAH;AAA5C,OAAhU,EAAoX;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,EAAH,CAAd;AAAqB,YAAG,CAAC,CAAD,EAAG,EAAH,CAAxB;AAA+B,YAAG,CAAC,CAAD,EAAG,EAAH,CAAlC;AAAyC,YAAG,CAAC,CAAD,EAAG,EAAH;AAA5C,OAApX,EAAwa;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,EAAH,CAAd;AAAqB,YAAG,CAAC,CAAD,EAAG,EAAH,CAAxB;AAA+B,YAAG,CAAC,CAAD,EAAG,EAAH,CAAlC;AAAyC,YAAG,CAAC,CAAD,EAAG,EAAH;AAA5C,OAAxa,EAA4d;AAAC,WAAE,CAAC,CAAD,EAAG,CAAH;AAAH,OAA5d,EAAse;AAAC,WAAE,CAAC,CAAD,EAAG,CAAH;AAAH,OAAte,EAAgf;AAAC,WAAE,CAAC,CAAD,EAAG,CAAH;AAAH,OAAhf,EAA0f;AAAC,WAAE,CAAC,CAAD,EAAG,CAAH;AAAH,OAA1f,EAAogB;AAAC,WAAE,CAAC,CAAD,EAAG,CAAH;AAAH,OAApgB,EAA8gB;AAAC,WAAE,CAAC,CAAD,EAAG,CAAH;AAAH,OAA9gB,EAAwhB;AAAC,YAAG,EAAJ;AAAO,YAAG,CAAC,CAAD,EAAG,EAAH,CAAV;AAAiB,YAAG;AAApB,OAAxhB,EAAgjB;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH;AAAJ,OAAhjB,EAA4jB;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH;AAAJ,OAA5jB,EAAwkB;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH;AAAJ,OAAxkB,EAAolB;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAAplB,EAA+lB;AAAC,YAAG,EAAJ;AAAO,YAAG,CAAC,CAAD,EAAG,EAAH,CAAV;AAAiB,YAAG,CAAC,CAAD,EAAG,EAAH,CAApB;AAA2B,YAAG,EAA9B;AAAiC,YAAG;AAApC,OAA/lB,EAAuoB;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH;AAAJ,OAAvoB,EAAmpB;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH;AAAJ,OAAnpB,EAA+pB;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH;AAAJ,OAA/pB,EAA2qB;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAA3qB,EAAsrB;AAAC,YAAG,EAAJ;AAAO,YAAG,EAAV;AAAa,YAAG,CAAC,CAAD,EAAG,EAAH;AAAhB,OAAtrB,EAA8sB;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH;AAAJ,OAA9sB,EAA0tB;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH;AAAJ,OAA1tB,EAAsuB;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH;AAAJ,OAAtuB,EAAkvB;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAAlvB,EAA6vB;AAAC,YAAG,EAAJ;AAAO,YAAG,CAAC,CAAD,EAAG,EAAH,CAAV;AAAiB,YAAG,CAAC,CAAD,EAAG,EAAH,CAApB;AAA2B,YAAG,EAA9B;AAAiC,YAAG;AAApC,OAA7vB,EAAqyB;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH;AAAJ,OAAryB,EAAizB;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH;AAAJ,OAAjzB,EAA6zB;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH;AAAJ,OAA7zB,EAAy0B;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAAz0B,EAAo1B;AAAC,YAAG,EAAJ;AAAO,YAAG,EAAV;AAAa,YAAG,CAAC,CAAD,EAAG,EAAH;AAAhB,OAAp1B,EAA42B;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH;AAAJ,OAA52B,EAAw3B;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH;AAAJ,OAAx3B,EAAo4B;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH;AAAJ,OAAp4B,EAAg5B;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAAh5B,EAA25B;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,EAAd;AAAiB,YAAG;AAApB,OAA35B,EAAm7B;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH;AAAJ,OAAn7B,EAA+7B;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH;AAAJ,OAA/7B,EAA28B;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH;AAAJ,OAA38B,EAAu9B;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAAv9B,EAAk+B;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,EAAH;AAAd,OAAl+B,EAAw/B;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,EAAH;AAAd,OAAx/B,EAA8gC;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH;AAAJ,OAA9gC,EAA0hC;AAAC,YAAG,EAAJ;AAAO,YAAG,CAAC,CAAD,EAAG,EAAH,CAAV;AAAiB,YAAG;AAApB,OAA1hC,EAAkjC;AAAC,YAAG,EAAJ;AAAO,YAAG,CAAC,CAAD,EAAG,EAAH,CAAV;AAAiB,YAAG;AAApB,OAAljC,EAA0kC;AAAC,YAAG,EAAJ;AAAO,YAAG,CAAC,CAAD,EAAG,EAAH,CAAV;AAAiB,YAAG;AAApB,OAA1kC,EAAkmC;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,EAAH;AAAd,OAAlmC,EAAwnC;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,EAAH;AAAd,OAAxnC,EAA8oC;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,EAAH;AAAd,OAA9oC,EAAoqC;AAAC,YAAG,EAAJ;AAAO,YAAG,CAAC,CAAD,EAAG,EAAH;AAAV,OAApqC,EAAsrC;AAAC,YAAG,EAAJ;AAAO,YAAG,CAAC,CAAD,EAAG,EAAH,CAAV;AAAiB,YAAG,CAAC,CAAD,EAAG,EAAH,CAApB;AAA2B,YAAG,EAA9B;AAAiC,YAAG;AAApC,OAAtrC,EAA8tC;AAAC,YAAG,EAAJ;AAAO,YAAG,CAAC,CAAD,EAAG,EAAH,CAAV;AAAiB,YAAG,CAAC,CAAD,EAAG,EAAH,CAApB;AAA2B,YAAG,EAA9B;AAAiC,YAAG;AAApC,OAA9tC,EAAswC;AAAC,YAAG,EAAJ;AAAO,YAAG,CAAC,CAAD,EAAG,EAAH,CAAV;AAAiB,YAAG,CAAC,CAAD,EAAG,EAAH,CAApB;AAA2B,YAAG,EAA9B;AAAiC,YAAG;AAApC,OAAtwC,EAA8yC;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,EAAH;AAAd,OAA9yC,EAAo0C;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,EAAH;AAAd,OAAp0C,EAA01C;AAAC,YAAG,EAAJ;AAAO,YAAG,CAAC,CAAD,EAAG,EAAH,CAAV;AAAiB,YAAG;AAApB,OAA11C,EAAk3C;AAAC,YAAG,EAAJ;AAAO,YAAG,EAAV;AAAa,YAAG,CAAC,CAAD,EAAG,EAAH;AAAhB,OAAl3C,EAA04C;AAAC,YAAG,EAAJ;AAAO,YAAG,EAAV;AAAa,YAAG,CAAC,CAAD,EAAG,EAAH;AAAhB,OAA14C,EAAk6C;AAAC,YAAG,GAAJ;AAAQ,YAAG,EAAX;AAAc,YAAG,CAAC,CAAD,EAAG,EAAH;AAAjB,OAAl6C,EAA27C;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,GAAH;AAAd,OAA37C,EAAk9C;AAAC,YAAG,EAAJ;AAAO,YAAG,CAAC,CAAD,EAAG,EAAH,CAAV;AAAiB,YAAG,CAAC,CAAD,EAAG,EAAH,CAApB;AAA2B,YAAG,EAA9B;AAAiC,YAAG;AAApC,OAAl9C,EAA2/C;AAAC,YAAG,EAAJ;AAAO,YAAG,CAAC,CAAD,EAAG,EAAH,CAAV;AAAiB,YAAG,CAAC,CAAD,EAAG,EAAH,CAApB;AAA2B,YAAG,EAA9B;AAAiC,YAAG;AAApC,OAA3/C,EAAoiD;AAAC,YAAG,EAAJ;AAAO,YAAG,CAAC,CAAD,EAAG,EAAH,CAAV;AAAiB,YAAG,CAAC,CAAD,EAAG,EAAH,CAApB;AAA2B,YAAG,EAA9B;AAAiC,YAAG;AAApC,OAApiD,EAA6kD;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,GAAH;AAAd,OAA7kD,EAAomD;AAAC,YAAG,GAAJ;AAAQ,YAAG,EAAX;AAAc,YAAG,CAAC,CAAD,EAAG,EAAH;AAAjB,OAApmD,EAA6nD;AAAC,YAAG,GAAJ;AAAQ,YAAG,EAAX;AAAc,YAAG,CAAC,CAAD,EAAG,EAAH;AAAjB,OAA7nD,EAAspD;AAAC,YAAG,GAAJ;AAAQ,YAAG,EAAX;AAAc,YAAG,CAAC,CAAD,EAAG,EAAH;AAAjB,OAAtpD,EAA+qD;AAAC,YAAG,CAAC,CAAD,EAAG,GAAH,CAAJ;AAAY,YAAG,CAAC,CAAD,EAAG,GAAH;AAAf,OAA/qD,EAAusD;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,EAAH;AAAd,OAAvsD,EAA6tD;AAAC,YAAG,GAAJ;AAAQ,YAAG,EAAX;AAAc,YAAG,CAAC,CAAD,EAAG,EAAH;AAAjB,OAA7tD,EAAsvD;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,GAAd;AAAkB,YAAG;AAArB,OAAtvD,EAA+wD;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,GAAd;AAAkB,YAAG;AAArB,OAA/wD,EAAwyD;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,GAAd;AAAkB,YAAG;AAArB,OAAxyD,EAAi0D;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAAj0D,EAA40D;AAAC,YAAG,GAAJ;AAAQ,YAAG,CAAC,CAAD,EAAG,EAAH;AAAX,OAA50D,EAA+1D;AAAC,YAAG,CAAC,CAAD,EAAG,GAAH,CAAJ;AAAY,YAAG,CAAC,CAAD,EAAG,CAAH,CAAf;AAAqB,YAAG,CAAC,CAAD,EAAG,CAAH;AAAxB,OAA/1D,EAA83D;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,GAAH;AAAd,OAA93D,EAAq5D;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,GAAH;AAAd,OAAr5D,EAA46D;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,GAAH;AAAd,OAA56D,EAAm8D;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAAn8D,EAA88D;AAAC,YAAG,EAAJ;AAAO,YAAG,CAAC,CAAD,EAAG,EAAH,CAAV;AAAiB,YAAG,CAAC,CAAD,EAAG,EAAH,CAApB;AAA2B,YAAG;AAA9B,OAA98D,EAAi/D;AAAC,YAAG,CAAC,CAAD,EAAG,GAAH;AAAJ,OAAj/D,EAA8/D;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,GAAH;AAAd,OAA9/D,EAAqhE;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,GAAH;AAAd,OAArhE,EAA4iE;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,GAAH;AAAd,OAA5iE,EAAmkE;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAAnkE,EAA8kE;AAAC,YAAG,GAAJ;AAAQ,YAAG,CAAC,CAAD,EAAG,EAAH;AAAX,OAA9kE,EAAimE;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,GAAH;AAAd,OAAjmE,EAAwnE;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,GAAH;AAAd,OAAxnE,EAA+oE;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,GAAH;AAAd,OAA/oE,EAAsqE;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,GAAH;AAAd,OAAtqE,EAA6rE;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAA7rE,EAAwsE;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,GAAH;AAAd,OAAxsE,EAA+tE;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,GAAH;AAAd,OAA/tE,EAAsvE;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,GAAH;AAAd,OAAtvE,EAA6wE;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAA7wE,EAAwxE;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,GAAH;AAAd,OAAxxE,EAA+yE;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,GAAH;AAAd,OAA/yE,EAAs0E;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,GAAH;AAAd,OAAt0E,EAA61E;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAA71E,EAAw2E;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG;AAAd,OAAx2E,EAA23E;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,GAAH;AAAd,OAA33E,EAAk5E;AAAC,YAAG,CAAC,CAAD,EAAG,GAAH,CAAJ;AAAY,YAAG,CAAC,CAAD,EAAG,GAAH;AAAf,OAAl5E,EAA06E;AAAC,YAAG,CAAC,CAAD,EAAG,GAAH,CAAJ;AAAY,YAAG,CAAC,CAAD,EAAG,GAAH;AAAf,OAA16E,EAAk8E;AAAC,YAAG,CAAC,CAAD,EAAG,GAAH,CAAJ;AAAY,YAAG,CAAC,CAAD,EAAG,GAAH;AAAf,OAAl8E,EAA09E;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,EAAH;AAAd,OAA19E,EAAg/E;AAAC,YAAG,CAAC,CAAD,EAAG,GAAH,CAAJ;AAAY,YAAG,CAAC,CAAD,EAAG,CAAH,CAAf;AAAqB,YAAG,CAAC,CAAD,EAAG,CAAH;AAAxB,OAAh/E,EAA+gF;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAA/gF,EAA0hF;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAA1hF,EAAqiF;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAAriF,EAAgjF;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,EAAH;AAAd,OAAhjF,EAAskF;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,EAAH;AAAd,OAAtkF,EAA4lF;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAA5lF,EAAumF;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAAvmF,EAAknF;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAAlnF,EAA6nF;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,EAAH;AAAd,OAA7nF,EAAmpF;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,EAAH;AAAd,OAAnpF,EAAyqF;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAAzqF,EAAorF;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAAprF,EAA+rF;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAA/rF,EAA0sF;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAA1sF,EAAqtF;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAArtF,EAAguF;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAAhuF,EAA2uF;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAA3uF,EAAsvF;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAAtvF,EAAiwF;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAAjwF,EAA4wF;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,EAAH;AAAd,OAA5wF,EAAkyF;AAAC,YAAG,CAAC,CAAD,EAAG,EAAH,CAAJ;AAAW,YAAG,CAAC,CAAD,EAAG,EAAH;AAAd,OAAlyF,EAAwzF;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAAxzF,EAAm0F;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAAn0F,EAA80F;AAAC,WAAE,CAAC,CAAD,EAAG,EAAH;AAAH,OAA90F,EAAy1F;AAAC,YAAG,CAAC,CAAD,EAAG,CAAH,CAAJ;AAAU,YAAG,CAAC,CAAD,EAAG,CAAH;AAAb,OAAz1F,CAlHM;AAmHbC,MAAAA,cAAc,EAAE;AAAC,YAAG,CAAC,CAAD,EAAG,CAAH,CAAJ;AAAU,YAAG,CAAC,CAAD,EAAG,CAAH,CAAb;AAAmB,YAAG,CAAC,CAAD,EAAG,CAAH,CAAtB;AAA4B,YAAG,CAAC,CAAD,EAAG,CAAH,CAA/B;AAAqC,YAAG,CAAC,CAAD,EAAG,CAAH,CAAxC;AAA8C,YAAG,CAAC,CAAD,EAAG,CAAH,CAAjD;AAAuD,YAAG,CAAC,CAAD,EAAG,EAAH,CAA1D;AAAiE,YAAG,CAAC,CAAD,EAAG,EAAH,CAApE;AAA2E,YAAG,CAAC,CAAD,EAAG,EAAH,CAA9E;AAAqF,YAAG,CAAC,CAAD,EAAG,EAAH,CAAxF;AAA+F,YAAG,CAAC,CAAD,EAAG,EAAH,CAAlG;AAAyG,YAAG,CAAC,CAAD,EAAG,EAAH,CAA5G;AAAmH,YAAG,CAAC,CAAD,EAAG,EAAH,CAAtH;AAA6H,YAAG,CAAC,CAAD,EAAG,EAAH,CAAhI;AAAuI,YAAG,CAAC,CAAD,EAAG,EAAH,CAA1I;AAAiJ,aAAI,CAAC,CAAD,EAAG,EAAH,CAArJ;AAA4J,aAAI,CAAC,CAAD,EAAG,EAAH,CAAhK;AAAuK,aAAI,CAAC,CAAD,EAAG,EAAH,CAA3K;AAAkL,aAAI,CAAC,CAAD,EAAG,EAAH,CAAtL;AAA6L,aAAI,CAAC,CAAD,EAAG,EAAH,CAAjM;AAAwM,aAAI,CAAC,CAAD,EAAG,EAAH,CAA5M;AAAmN,aAAI,CAAC,CAAD,EAAG,EAAH,CAAvN;AAA8N,aAAI,CAAC,CAAD,EAAG,EAAH,CAAlO;AAAyO,aAAI,CAAC,CAAD,EAAG,EAAH,CAA7O;AAAoP,aAAI,CAAC,CAAD,EAAG,EAAH,CAAxP;AAA+P,aAAI,CAAC,CAAD,EAAG,EAAH,CAAnQ;AAA0Q,aAAI,CAAC,CAAD,EAAG,EAAH,CAA9Q;AAAqR,aAAI,CAAC,CAAD,EAAG,EAAH,CAAzR;AAAgS,aAAI,CAAC,CAAD,EAAG,EAAH,CAApS;AAA2S,aAAI,CAAC,CAAD,EAAG,EAAH,CAA/S;AAAsT,aAAI,CAAC,CAAD,EAAG,EAAH,CAA1T;AAAiU,aAAI,CAAC,CAAD,EAAG,EAAH,CAArU;AAA4U,aAAI,CAAC,CAAD,EAAG,EAAH,CAAhV;AAAuV,aAAI,CAAC,CAAD,EAAG,EAAH,CAA3V;AAAkW,aAAI,CAAC,CAAD,EAAG,EAAH,CAAtW;AAA6W,aAAI,CAAC,CAAD,EAAG,EAAH;AAAjX,OAnHH;AAoHbC,MAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AACvC,cAAM,IAAIlC,KAAJ,CAAUiC,GAAV,CAAN;AACH,OAtHY;AAuHbE,MAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,KAAf,EAAsB;AACzB,YAAIC,IAAI,GAAG,IAAX;AAAA,YAAiBC,KAAK,GAAG,CAAC,CAAD,CAAzB;AAAA,YAA8BC,MAAM,GAAG,CAAC,IAAD,CAAvC;AAAA,YAA+CC,MAAM,GAAG,EAAxD;AAAA,YAA4DV,KAAK,GAAG,KAAKA,KAAzE;AAAA,YAAgFpB,MAAM,GAAG,EAAzF;AAAA,YAA6FE,QAAQ,GAAG,CAAxG;AAAA,YAA2GD,MAAM,GAAG,CAApH;AAAA,YAAuH8B,UAAU,GAAG,CAApI;AAAA,YAAuIC,MAAM,GAAG,CAAhJ;AAAA,YAAmJC,GAAG,GAAG,CAAzJ;AACA,aAAKC,KAAL,CAAWC,QAAX,CAAoBT,KAApB;AACA,aAAKQ,KAAL,CAAWxC,EAAX,GAAgB,KAAKA,EAArB;AACA,aAAKA,EAAL,CAAQwC,KAAR,GAAgB,KAAKA,KAArB;AACA,aAAKxC,EAAL,CAAQF,MAAR,GAAiB,IAAjB;AACA,YAAI,OAAO,KAAK0C,KAAL,CAAWE,MAAlB,IAA4B,WAAhC,EACI,KAAKF,KAAL,CAAWE,MAAX,GAAoB,EAApB;AACJ,YAAIC,KAAK,GAAG,KAAKH,KAAL,CAAWE,MAAvB;AACAN,QAAAA,MAAM,CAACQ,IAAP,CAAYD,KAAZ;AACA,YAAIE,MAAM,GAAG,KAAKL,KAAL,CAAWM,OAAX,IAAsB,KAAKN,KAAL,CAAWM,OAAX,CAAmBD,MAAtD;AACA,YAAI,OAAO,KAAK7C,EAAL,CAAQ4B,UAAf,KAA8B,UAAlC,EACI,KAAKA,UAAL,GAAkB,KAAK5B,EAAL,CAAQ4B,UAA1B;;AACJ,iBAASmB,QAAT,CAAkBC,CAAlB,EAAqB;AACjBd,UAAAA,KAAK,CAACrB,MAAN,GAAeqB,KAAK,CAACrB,MAAN,GAAe,IAAImC,CAAlC;AACAb,UAAAA,MAAM,CAACtB,MAAP,GAAgBsB,MAAM,CAACtB,MAAP,GAAgBmC,CAAhC;AACAZ,UAAAA,MAAM,CAACvB,MAAP,GAAgBuB,MAAM,CAACvB,MAAP,GAAgBmC,CAAhC;AACH;;AACD,iBAASC,GAAT,GAAe;AACX,cAAIC,KAAJ;AACAA,UAAAA,KAAK,GAAGjB,IAAI,CAACO,KAAL,CAAWS,GAAX,MAAoB,CAA5B;;AACA,cAAI,OAAOC,KAAP,KAAiB,QAArB,EAA+B;AAC3BA,YAAAA,KAAK,GAAGjB,IAAI,CAAChC,QAAL,CAAciD,KAAd,KAAwBA,KAAhC;AACH;;AACD,iBAAOA,KAAP;AACH;;AACD,YAAIC,MAAJ;AAAA,YAAYC,cAAZ;AAAA,YAA4BC,KAA5B;AAAA,YAAmCC,MAAnC;AAAA,YAA2CC,CAA3C;AAAA,YAA8CC,CAA9C;AAAA,YAAiDC,KAAK,GAAG,EAAzD;AAAA,YAA6DC,CAA7D;AAAA,YAAgEC,GAAhE;AAAA,YAAqEC,QAArE;AAAA,YAA+EC,QAA/E;;AACA,eAAO,IAAP,EAAa;AACTR,UAAAA,KAAK,GAAGnB,KAAK,CAACA,KAAK,CAACrB,MAAN,GAAe,CAAhB,CAAb;;AACA,cAAI,KAAKc,cAAL,CAAoB0B,KAApB,CAAJ,EAAgC;AAC5BC,YAAAA,MAAM,GAAG,KAAK3B,cAAL,CAAoB0B,KAApB,CAAT;AACH,WAFD,MAEO;AACH,gBAAIF,MAAM,KAAK,IAAX,IAAmB,OAAOA,MAAP,IAAiB,WAAxC,EAAqD;AACjDA,cAAAA,MAAM,GAAGF,GAAG,EAAZ;AACH;;AACDK,YAAAA,MAAM,GAAG5B,KAAK,CAAC2B,KAAD,CAAL,IAAgB3B,KAAK,CAAC2B,KAAD,CAAL,CAAaF,MAAb,CAAzB;AACH;;AACD,cAAI,OAAOG,MAAP,KAAkB,WAAlB,IAAiC,CAACA,MAAM,CAACzC,MAAzC,IAAmD,CAACyC,MAAM,CAAC,CAAD,CAA9D,EAAmE;AAC/D,gBAAIQ,MAAM,GAAG,EAAb;;AACA,gBAAI,CAACzB,UAAL,EAAiB;AACbwB,cAAAA,QAAQ,GAAG,EAAX;;AACA,mBAAKH,CAAL,IAAUhC,KAAK,CAAC2B,KAAD,CAAf,EACI,IAAI,KAAKnD,UAAL,CAAgBwD,CAAhB,KAAsBA,CAAC,GAAG,CAA9B,EAAiC;AAC7BG,gBAAAA,QAAQ,CAACjB,IAAT,CAAc,MAAM,KAAK1C,UAAL,CAAgBwD,CAAhB,CAAN,GAA2B,GAAzC;AACH;;AACL,kBAAI,KAAKlB,KAAL,CAAWuB,YAAf,EAA6B;AACzBD,gBAAAA,MAAM,GAAG,0BAA0BtD,QAAQ,GAAG,CAArC,IAA0C,KAA1C,GAAkD,KAAKgC,KAAL,CAAWuB,YAAX,EAAlD,GAA8E,cAA9E,GAA+FF,QAAQ,CAACG,IAAT,CAAc,IAAd,CAA/F,GAAqH,SAArH,IAAkI,KAAK9D,UAAL,CAAgBiD,MAAhB,KAA2BA,MAA7J,IAAuK,GAAhL;AACH,eAFD,MAEO;AACHW,gBAAAA,MAAM,GAAG,0BAA0BtD,QAAQ,GAAG,CAArC,IAA0C,eAA1C,IAA6D2C,MAAM,IAAI,CAAV,GAAY,cAAZ,GAA2B,OAAO,KAAKjD,UAAL,CAAgBiD,MAAhB,KAA2BA,MAAlC,IAA4C,GAApI,CAAT;AACH;;AACD,mBAAKvB,UAAL,CAAgBkC,MAAhB,EAAwB;AAACG,gBAAAA,IAAI,EAAE,KAAKzB,KAAL,CAAW0B,KAAlB;AAAyBhB,gBAAAA,KAAK,EAAE,KAAKhD,UAAL,CAAgBiD,MAAhB,KAA2BA,MAA3D;AAAmEgB,gBAAAA,IAAI,EAAE,KAAK3B,KAAL,CAAWhC,QAApF;AAA8F4D,gBAAAA,GAAG,EAAEzB,KAAnG;AAA0GkB,gBAAAA,QAAQ,EAAEA;AAApH,eAAxB;AACH;AACJ;;AACD,cAAIP,MAAM,CAAC,CAAD,CAAN,YAAqBe,KAArB,IAA8Bf,MAAM,CAACzC,MAAP,GAAgB,CAAlD,EAAqD;AACjD,kBAAM,IAAIjB,KAAJ,CAAU,sDAAsDyD,KAAtD,GAA8D,WAA9D,GAA4EF,MAAtF,CAAN;AACH;;AACD,kBAAQG,MAAM,CAAC,CAAD,CAAd;AACA,iBAAK,CAAL;AACIpB,cAAAA,KAAK,CAACU,IAAN,CAAWO,MAAX;AACAhB,cAAAA,MAAM,CAACS,IAAP,CAAY,KAAKJ,KAAL,CAAWlC,MAAvB;AACA8B,cAAAA,MAAM,CAACQ,IAAP,CAAY,KAAKJ,KAAL,CAAWE,MAAvB;AACAR,cAAAA,KAAK,CAACU,IAAN,CAAWU,MAAM,CAAC,CAAD,CAAjB;AACAH,cAAAA,MAAM,GAAG,IAAT;;AACA,kBAAI,CAACC,cAAL,EAAqB;AACjB7C,gBAAAA,MAAM,GAAG,KAAKiC,KAAL,CAAWjC,MAApB;AACAD,gBAAAA,MAAM,GAAG,KAAKkC,KAAL,CAAWlC,MAApB;AACAE,gBAAAA,QAAQ,GAAG,KAAKgC,KAAL,CAAWhC,QAAtB;AACAmC,gBAAAA,KAAK,GAAG,KAAKH,KAAL,CAAWE,MAAnB;AACA,oBAAIL,UAAU,GAAG,CAAjB,EACIA,UAAU;AACjB,eAPD,MAOO;AACHc,gBAAAA,MAAM,GAAGC,cAAT;AACAA,gBAAAA,cAAc,GAAG,IAAjB;AACH;;AACD;;AACJ,iBAAK,CAAL;AACIO,cAAAA,GAAG,GAAG,KAAKxD,YAAL,CAAkBmD,MAAM,CAAC,CAAD,CAAxB,EAA6B,CAA7B,CAAN;AACAG,cAAAA,KAAK,CAAC/C,CAAN,GAAUyB,MAAM,CAACA,MAAM,CAACtB,MAAP,GAAgB8C,GAAjB,CAAhB;AACAF,cAAAA,KAAK,CAAC9C,EAAN,GAAW;AAAC2D,gBAAAA,UAAU,EAAElC,MAAM,CAACA,MAAM,CAACvB,MAAP,IAAiB8C,GAAG,IAAI,CAAxB,CAAD,CAAN,CAAmCW,UAAhD;AAA4DC,gBAAAA,SAAS,EAAEnC,MAAM,CAACA,MAAM,CAACvB,MAAP,GAAgB,CAAjB,CAAN,CAA0B0D,SAAjG;AAA4GC,gBAAAA,YAAY,EAAEpC,MAAM,CAACA,MAAM,CAACvB,MAAP,IAAiB8C,GAAG,IAAI,CAAxB,CAAD,CAAN,CAAmCa,YAA7J;AAA2KC,gBAAAA,WAAW,EAAErC,MAAM,CAACA,MAAM,CAACvB,MAAP,GAAgB,CAAjB,CAAN,CAA0B4D;AAAlN,eAAX;;AACA,kBAAI5B,MAAJ,EAAY;AACRY,gBAAAA,KAAK,CAAC9C,EAAN,CAAS+D,KAAT,GAAiB,CAACtC,MAAM,CAACA,MAAM,CAACvB,MAAP,IAAiB8C,GAAG,IAAI,CAAxB,CAAD,CAAN,CAAmCe,KAAnC,CAAyC,CAAzC,CAAD,EAA8CtC,MAAM,CAACA,MAAM,CAACvB,MAAP,GAAgB,CAAjB,CAAN,CAA0B6D,KAA1B,CAAgC,CAAhC,CAA9C,CAAjB;AACH;;AACDlB,cAAAA,CAAC,GAAG,KAAKpD,aAAL,CAAmBuE,IAAnB,CAAwBlB,KAAxB,EAA+BnD,MAA/B,EAAuCC,MAAvC,EAA+CC,QAA/C,EAAyD,KAAKR,EAA9D,EAAkEsD,MAAM,CAAC,CAAD,CAAxE,EAA6EnB,MAA7E,EAAqFC,MAArF,CAAJ;;AACA,kBAAI,OAAOoB,CAAP,KAAa,WAAjB,EAA8B;AAC1B,uBAAOA,CAAP;AACH;;AACD,kBAAIG,GAAJ,EAAS;AACLzB,gBAAAA,KAAK,GAAGA,KAAK,CAAC0C,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAD,GAAKjB,GAAL,GAAW,CAA1B,CAAR;AACAxB,gBAAAA,MAAM,GAAGA,MAAM,CAACyC,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAD,GAAKjB,GAArB,CAAT;AACAvB,gBAAAA,MAAM,GAAGA,MAAM,CAACwC,KAAP,CAAa,CAAb,EAAgB,CAAC,CAAD,GAAKjB,GAArB,CAAT;AACH;;AACDzB,cAAAA,KAAK,CAACU,IAAN,CAAW,KAAKzC,YAAL,CAAkBmD,MAAM,CAAC,CAAD,CAAxB,EAA6B,CAA7B,CAAX;AACAnB,cAAAA,MAAM,CAACS,IAAP,CAAYa,KAAK,CAAC/C,CAAlB;AACA0B,cAAAA,MAAM,CAACQ,IAAP,CAAYa,KAAK,CAAC9C,EAAlB;AACAiD,cAAAA,QAAQ,GAAGlC,KAAK,CAACQ,KAAK,CAACA,KAAK,CAACrB,MAAN,GAAe,CAAhB,CAAN,CAAL,CAA+BqB,KAAK,CAACA,KAAK,CAACrB,MAAN,GAAe,CAAhB,CAApC,CAAX;AACAqB,cAAAA,KAAK,CAACU,IAAN,CAAWgB,QAAX;AACA;;AACJ,iBAAK,CAAL;AACI,qBAAO,IAAP;AA1CJ;AA4CH;;AACD,eAAO,IAAP;AACH;AA7NY,KAAb;AA+NAiB,IAAAA,SAAS;AAAA;;AACT,QAAIrC,KAAK,GAAI,YAAU;AACvB,UAAIA,KAAK,GAAI;AAACD,QAAAA,GAAG,EAAC,CAAL;AACbX,QAAAA,UAAU,EAAC,SAASA,UAAT,CAAoBC,GAApB,EAAyBC,IAAzB,EAA+B;AAClC,cAAI,KAAK9B,EAAL,CAAQF,MAAZ,EAAoB;AAChB,iBAAKE,EAAL,CAAQF,MAAR,CAAe8B,UAAf,CAA0BC,GAA1B,EAA+BC,IAA/B;AACH,WAFD,MAEO;AACH,kBAAM,IAAIlC,KAAJ,CAAUiC,GAAV,CAAN;AACH;AACJ,SAPQ;AAQbY,QAAAA,QAAQ,EAAC,UAAUT,KAAV,EAAiB;AAClB,eAAK8C,MAAL,GAAc9C,KAAd;AACA,eAAK+C,KAAL,GAAa,KAAKC,KAAL,GAAa,KAAKC,IAAL,GAAY,KAAtC;AACA,eAAKzE,QAAL,GAAgB,KAAKD,MAAL,GAAc,CAA9B;AACA,eAAKD,MAAL,GAAc,KAAK4E,OAAL,GAAe,KAAKhB,KAAL,GAAa,EAA1C;AACA,eAAKiB,cAAL,GAAsB,CAAC,SAAD,CAAtB;AACA,eAAKzC,MAAL,GAAc;AAAC4B,YAAAA,UAAU,EAAC,CAAZ;AAAcE,YAAAA,YAAY,EAAC,CAA3B;AAA6BD,YAAAA,SAAS,EAAC,CAAvC;AAAyCE,YAAAA,WAAW,EAAC;AAArD,WAAd;AACA,cAAI,KAAK3B,OAAL,CAAaD,MAAjB,EAAyB,KAAKH,MAAL,CAAYgC,KAAZ,GAAoB,CAAC,CAAD,EAAG,CAAH,CAApB;AACzB,eAAKU,MAAL,GAAc,CAAd;AACA,iBAAO,IAAP;AACH,SAlBQ;AAmBbpD,QAAAA,KAAK,EAAC,YAAY;AACV,cAAIqD,EAAE,GAAG,KAAKP,MAAL,CAAY,CAAZ,CAAT;AACA,eAAKxE,MAAL,IAAe+E,EAAf;AACA,eAAK9E,MAAL;AACA,eAAK6E,MAAL;AACA,eAAKlB,KAAL,IAAcmB,EAAd;AACA,eAAKH,OAAL,IAAgBG,EAAhB;AACA,cAAIC,KAAK,GAAGD,EAAE,CAACnB,KAAH,CAAS,iBAAT,CAAZ;;AACA,cAAIoB,KAAJ,EAAW;AACP,iBAAK9E,QAAL;AACA,iBAAKkC,MAAL,CAAY6B,SAAZ;AACH,WAHD,MAGO;AACH,iBAAK7B,MAAL,CAAY+B,WAAZ;AACH;;AACD,cAAI,KAAK3B,OAAL,CAAaD,MAAjB,EAAyB,KAAKH,MAAL,CAAYgC,KAAZ,CAAkB,CAAlB;AAEzB,eAAKI,MAAL,GAAc,KAAKA,MAAL,CAAYF,KAAZ,CAAkB,CAAlB,CAAd;AACA,iBAAOS,EAAP;AACH,SArCQ;AAsCbE,QAAAA,KAAK,EAAC,UAAUF,EAAV,EAAc;AACZ,cAAI1B,GAAG,GAAG0B,EAAE,CAACxE,MAAb;AACA,cAAIyE,KAAK,GAAGD,EAAE,CAACG,KAAH,CAAS,eAAT,CAAZ;AAEA,eAAKV,MAAL,GAAcO,EAAE,GAAG,KAAKP,MAAxB;AACA,eAAKxE,MAAL,GAAc,KAAKA,MAAL,CAAYmF,MAAZ,CAAmB,CAAnB,EAAsB,KAAKnF,MAAL,CAAYO,MAAZ,GAAmB8C,GAAnB,GAAuB,CAA7C,CAAd,CALY,CAMZ;;AACA,eAAKyB,MAAL,IAAezB,GAAf;AACA,cAAI+B,QAAQ,GAAG,KAAKxB,KAAL,CAAWsB,KAAX,CAAiB,eAAjB,CAAf;AACA,eAAKtB,KAAL,GAAa,KAAKA,KAAL,CAAWuB,MAAX,CAAkB,CAAlB,EAAqB,KAAKvB,KAAL,CAAWrD,MAAX,GAAkB,CAAvC,CAAb;AACA,eAAKqE,OAAL,GAAe,KAAKA,OAAL,CAAaO,MAAb,CAAoB,CAApB,EAAuB,KAAKP,OAAL,CAAarE,MAAb,GAAoB,CAA3C,CAAf;AAEA,cAAIyE,KAAK,CAACzE,MAAN,GAAa,CAAjB,EAAoB,KAAKL,QAAL,IAAiB8E,KAAK,CAACzE,MAAN,GAAa,CAA9B;AACpB,cAAI2C,CAAC,GAAG,KAAKd,MAAL,CAAYgC,KAApB;AAEA,eAAKhC,MAAL,GAAc;AAAC4B,YAAAA,UAAU,EAAE,KAAK5B,MAAL,CAAY4B,UAAzB;AACZC,YAAAA,SAAS,EAAE,KAAK/D,QAAL,GAAc,CADb;AAEZgE,YAAAA,YAAY,EAAE,KAAK9B,MAAL,CAAY8B,YAFd;AAGZC,YAAAA,WAAW,EAAEa,KAAK,GACd,CAACA,KAAK,CAACzE,MAAN,KAAiB6E,QAAQ,CAAC7E,MAA1B,GAAmC,KAAK6B,MAAL,CAAY8B,YAA/C,GAA8D,CAA/D,IAAoEkB,QAAQ,CAACA,QAAQ,CAAC7E,MAAT,GAAkByE,KAAK,CAACzE,MAAzB,CAAR,CAAyCA,MAA7G,GAAsHyE,KAAK,CAAC,CAAD,CAAL,CAASzE,MADjH,GAEd,KAAK6B,MAAL,CAAY8B,YAAZ,GAA2Bb;AALnB,WAAd;;AAQA,cAAI,KAAKb,OAAL,CAAaD,MAAjB,EAAyB;AACrB,iBAAKH,MAAL,CAAYgC,KAAZ,GAAoB,CAAClB,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAD,GAAO,KAAKjD,MAAZ,GAAqBoD,GAA5B,CAApB;AACH;;AACD,iBAAO,IAAP;AACH,SAjEQ;AAkEbgC,QAAAA,IAAI,EAAC,YAAY;AACT,eAAKZ,KAAL,GAAa,IAAb;AACA,iBAAO,IAAP;AACH,SArEQ;AAsEba,QAAAA,IAAI,EAAC,UAAU5C,CAAV,EAAa;AACV,eAAKuC,KAAL,CAAW,KAAKrB,KAAL,CAAWU,KAAX,CAAiB5B,CAAjB,CAAX;AACH,SAxEQ;AAyEb6C,QAAAA,SAAS,EAAC,YAAY;AACd,cAAIC,IAAI,GAAG,KAAKZ,OAAL,CAAaO,MAAb,CAAoB,CAApB,EAAuB,KAAKP,OAAL,CAAarE,MAAb,GAAsB,KAAKqD,KAAL,CAAWrD,MAAxD,CAAX;AACA,iBAAO,CAACiF,IAAI,CAACjF,MAAL,GAAc,EAAd,GAAmB,KAAnB,GAAyB,EAA1B,IAAgCiF,IAAI,CAACL,MAAL,CAAY,CAAC,EAAb,EAAiBM,OAAjB,CAAyB,KAAzB,EAAgC,EAAhC,CAAvC;AACH,SA5EQ;AA6EbC,QAAAA,aAAa,EAAC,YAAY;AAClB,cAAIC,IAAI,GAAG,KAAK/B,KAAhB;;AACA,cAAI+B,IAAI,CAACpF,MAAL,GAAc,EAAlB,EAAsB;AAClBoF,YAAAA,IAAI,IAAI,KAAKnB,MAAL,CAAYW,MAAZ,CAAmB,CAAnB,EAAsB,KAAGQ,IAAI,CAACpF,MAA9B,CAAR;AACH;;AACD,iBAAO,CAACoF,IAAI,CAACR,MAAL,CAAY,CAAZ,EAAc,EAAd,KAAmBQ,IAAI,CAACpF,MAAL,GAAc,EAAd,GAAmB,KAAnB,GAAyB,EAA5C,CAAD,EAAkDkF,OAAlD,CAA0D,KAA1D,EAAiE,EAAjE,CAAP;AACH,SAnFQ;AAoFbhC,QAAAA,YAAY,EAAC,YAAY;AACjB,cAAImC,GAAG,GAAG,KAAKL,SAAL,EAAV;AACA,cAAIM,CAAC,GAAG,IAAI9B,KAAJ,CAAU6B,GAAG,CAACrF,MAAJ,GAAa,CAAvB,EAA0BmD,IAA1B,CAA+B,GAA/B,CAAR;AACA,iBAAOkC,GAAG,GAAG,KAAKF,aAAL,EAAN,GAA6B,IAA7B,GAAoCG,CAApC,GAAsC,GAA7C;AACH,SAxFQ;AAyFbF,QAAAA,IAAI,EAAC,YAAY;AACT,cAAI,KAAKhB,IAAT,EAAe;AACX,mBAAO,KAAK1C,GAAZ;AACH;;AACD,cAAI,CAAC,KAAKuC,MAAV,EAAkB,KAAKG,IAAL,GAAY,IAAZ;AAElB,cAAI/B,KAAJ,EACIgB,KADJ,EAEIkC,SAFJ,EAGIC,KAHJ,EAIIC,GAJJ,EAKIhB,KALJ;;AAMA,cAAI,CAAC,KAAKP,KAAV,EAAiB;AACb,iBAAKzE,MAAL,GAAc,EAAd;AACA,iBAAK4D,KAAL,GAAa,EAAb;AACH;;AACD,cAAIqC,KAAK,GAAG,KAAKC,aAAL,EAAZ;;AACA,eAAK,IAAIC,CAAC,GAAC,CAAX,EAAaA,CAAC,GAAGF,KAAK,CAAC1F,MAAvB,EAA+B4F,CAAC,EAAhC,EAAoC;AAChCL,YAAAA,SAAS,GAAG,KAAKtB,MAAL,CAAYZ,KAAZ,CAAkB,KAAKqC,KAAL,CAAWA,KAAK,CAACE,CAAD,CAAhB,CAAlB,CAAZ;;AACA,gBAAIL,SAAS,KAAK,CAAClC,KAAD,IAAUkC,SAAS,CAAC,CAAD,CAAT,CAAavF,MAAb,GAAsBqD,KAAK,CAAC,CAAD,CAAL,CAASrD,MAA9C,CAAb,EAAoE;AAChEqD,cAAAA,KAAK,GAAGkC,SAAR;AACAC,cAAAA,KAAK,GAAGI,CAAR;AACA,kBAAI,CAAC,KAAK3D,OAAL,CAAa4D,IAAlB,EAAwB;AAC3B;AACJ;;AACD,cAAIxC,KAAJ,EAAW;AACPoB,YAAAA,KAAK,GAAGpB,KAAK,CAAC,CAAD,CAAL,CAASA,KAAT,CAAe,iBAAf,CAAR;AACA,gBAAIoB,KAAJ,EAAW,KAAK9E,QAAL,IAAiB8E,KAAK,CAACzE,MAAvB;AACX,iBAAK6B,MAAL,GAAc;AAAC4B,cAAAA,UAAU,EAAE,KAAK5B,MAAL,CAAY6B,SAAzB;AACCA,cAAAA,SAAS,EAAE,KAAK/D,QAAL,GAAc,CAD1B;AAECgE,cAAAA,YAAY,EAAE,KAAK9B,MAAL,CAAY+B,WAF3B;AAGCA,cAAAA,WAAW,EAAEa,KAAK,GAAGA,KAAK,CAACA,KAAK,CAACzE,MAAN,GAAa,CAAd,CAAL,CAAsBA,MAAtB,GAA6ByE,KAAK,CAACA,KAAK,CAACzE,MAAN,GAAa,CAAd,CAAL,CAAsBqD,KAAtB,CAA4B,QAA5B,EAAsC,CAAtC,EAAyCrD,MAAzE,GAAkF,KAAK6B,MAAL,CAAY+B,WAAZ,GAA0BP,KAAK,CAAC,CAAD,CAAL,CAASrD;AAHxI,aAAd;AAIA,iBAAKP,MAAL,IAAe4D,KAAK,CAAC,CAAD,CAApB;AACA,iBAAKA,KAAL,IAAcA,KAAK,CAAC,CAAD,CAAnB;AACA,iBAAKyC,OAAL,GAAezC,KAAf;AACA,iBAAK3D,MAAL,GAAc,KAAKD,MAAL,CAAYO,MAA1B;;AACA,gBAAI,KAAKiC,OAAL,CAAaD,MAAjB,EAAyB;AACrB,mBAAKH,MAAL,CAAYgC,KAAZ,GAAoB,CAAC,KAAKU,MAAN,EAAc,KAAKA,MAAL,IAAe,KAAK7E,MAAlC,CAApB;AACH;;AACD,iBAAKwE,KAAL,GAAa,KAAb;AACA,iBAAKD,MAAL,GAAc,KAAKA,MAAL,CAAYF,KAAZ,CAAkBV,KAAK,CAAC,CAAD,CAAL,CAASrD,MAA3B,CAAd;AACA,iBAAKqE,OAAL,IAAgBhB,KAAK,CAAC,CAAD,CAArB;AACAhB,YAAAA,KAAK,GAAG,KAAK9C,aAAL,CAAmBuE,IAAnB,CAAwB,IAAxB,EAA8B,KAAK3E,EAAnC,EAAuC,IAAvC,EAA6CuG,KAAK,CAACF,KAAD,CAAlD,EAA0D,KAAKlB,cAAL,CAAoB,KAAKA,cAAL,CAAoBtE,MAApB,GAA2B,CAA/C,CAA1D,CAAR;AACA,gBAAI,KAAKoE,IAAL,IAAa,KAAKH,MAAtB,EAA8B,KAAKG,IAAL,GAAY,KAAZ;AAC9B,gBAAI/B,KAAJ,EAAW,OAAOA,KAAP,CAAX,KACK;AACR;;AACD,cAAI,KAAK4B,MAAL,KAAgB,EAApB,EAAwB;AACpB,mBAAO,KAAKvC,GAAZ;AACH,WAFD,MAEO;AACH,mBAAO,KAAKX,UAAL,CAAgB,4BAA0B,KAAKpB,QAAL,GAAc,CAAxC,IAA2C,wBAA3C,GAAoE,KAAKuD,YAAL,EAApF,EACC;AAACE,cAAAA,IAAI,EAAE,EAAP;AAAWf,cAAAA,KAAK,EAAE,IAAlB;AAAwBiB,cAAAA,IAAI,EAAE,KAAK3D;AAAnC,aADD,CAAP;AAEH;AACJ,SA9IQ;AA+IbyC,QAAAA,GAAG,EAAC,SAASA,GAAT,GAAe;AACX,cAAIO,CAAC,GAAG,KAAKyC,IAAL,EAAR;;AACA,cAAI,OAAOzC,CAAP,KAAa,WAAjB,EAA8B;AAC1B,mBAAOA,CAAP;AACH,WAFD,MAEO;AACH,mBAAO,KAAKP,GAAL,EAAP;AACH;AACJ,SAtJQ;AAuJb2D,QAAAA,KAAK,EAAC,SAASA,KAAT,CAAeC,SAAf,EAA0B;AACxB,eAAK1B,cAAL,CAAoBvC,IAApB,CAAyBiE,SAAzB;AACH,SAzJQ;AA0JbC,QAAAA,QAAQ,EAAC,SAASA,QAAT,GAAoB;AACrB,iBAAO,KAAK3B,cAAL,CAAoB4B,GAApB,EAAP;AACH,SA5JQ;AA6JbP,QAAAA,aAAa,EAAC,SAASA,aAAT,GAAyB;AAC/B,iBAAO,KAAKQ,UAAL,CAAgB,KAAK7B,cAAL,CAAoB,KAAKA,cAAL,CAAoBtE,MAApB,GAA2B,CAA/C,CAAhB,EAAmE0F,KAA1E;AACH,SA/JQ;AAgKbU,QAAAA,QAAQ,EAAC,YAAY;AACb,iBAAO,KAAK9B,cAAL,CAAoB,KAAKA,cAAL,CAAoBtE,MAApB,GAA2B,CAA/C,CAAP;AACH,SAlKQ;AAmKbqG,QAAAA,SAAS,EAAC,SAASN,KAAT,CAAeC,SAAf,EAA0B;AAC5B,eAAKD,KAAL,CAAWC,SAAX;AACH;AArKQ,OAAb;AAsKArE,MAAAA,KAAK,CAACM,OAAN,GAAgB,EAAhB;;AACAN,MAAAA,KAAK,CAACpC,aAAN,GAAsB,SAASC,SAAT,CAAmBL,EAAnB,EAAsBmH,GAAtB,EAA0BC,yBAA1B,EAAoDC;AAC1E;AADsB,QAChB;AAEN,YAAIC,OAAO,GAACD,QAAZ;;AACA,gBAAOD,yBAAP;AACA,eAAK,CAAL;AAAO;AACP;;AACA,eAAK,CAAL;AAAO,mBAAO,EAAP;AACP;;AACA,eAAK,CAAL;AAAO,mBAAO,EAAP;AACP;;AACA,eAAK,CAAL;AAAO,mBAAO,EAAP;AACP;;AACA,eAAK,CAAL;AAAO,mBAAO,EAAP;AACP;;AACA,eAAK,CAAL;AAAO,mBAAO,EAAP;AACP;;AACA,eAAK,CAAL;AAAO,mBAAO,EAAP;AACP;;AACA,eAAK,CAAL;AAAO,mBAAO,EAAP;AACP;;AACA,eAAK,CAAL;AAAO,mBAAO,EAAP;AACP;;AACA,eAAK,CAAL;AAAO,mBAAO,EAAP;AACP;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,EAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,CAAP;AACR;;AACA,eAAK,EAAL;AAAQ,mBAAO,SAAP;AACR;AAlCA;AAoCC,OAxCD;;AAyCA5E,MAAAA,KAAK,CAAC+D,KAAN,GAAc,CAAC,UAAD,EAAY,SAAZ,EAAsB,SAAtB,EAAgC,8CAAhC,EAA+E,cAA/E,EAA8F,mBAA9F,EAAkH,gBAAlH,EAAmI,mBAAnI,EAAuJ,wBAAvJ,EAAgL,qBAAhL,EAAsM,QAAtM,EAA+M,cAA/M,EAA8N,UAA9N,EAAyO,UAAzO,EAAoP,WAApP,EAAgQ,QAAhQ,EAAyQ,QAAzQ,CAAd;AACA/D,MAAAA,KAAK,CAACwE,UAAN,GAAmB;AAAC,mBAAU;AAAC,mBAAQ,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,EAAqB,EAArB,EAAwB,EAAxB,EAA2B,EAA3B,EAA8B,EAA9B,EAAiC,EAAjC,EAAoC,EAApC,EAAuC,EAAvC,CAAT;AAAoD,uBAAY;AAAhE;AAAX,OAAnB;AACA,aAAOxE,KAAP;AAAc,KAnNF,EAAZ;;AAoNA1C,IAAAA,MAAM,CAAC0C,KAAP,GAAeA,KAAf;;AACA,aAAS+E,MAAT,GAAmB;AAAE,WAAKvH,EAAL,GAAU,EAAV;AAAe;;AAAAuH,IAAAA,MAAM,CAACC,SAAP,GAAmB1H,MAAnB;AAA0BA,IAAAA,MAAM,CAACyH,MAAP,GAAgBA,MAAhB;AAC9D,WAAO,IAAIA,MAAJ,EAAP;AACC,GAxbY,EAAb;;AA0bE,WAASzG,UAAT,CAAqB2G,KAArB,EAA4B;AAC1B,SAAKrG,IAAL,GAAY,CAAEqG,KAAF,CAAZ;AACA,SAAKC,IAAL,GAAY,YAAZ;AACD;;AAED5G,EAAAA,UAAU,CAAC0G,SAAX,CAAqBxG,QAArB,GAAgC,UAAUyG,KAAV,EAAiB;AAC/C,QAAIA,KAAK,CAACC,IAAN,KAAe,YAAnB,EAAiC;AAC/B,WAAKtG,IAAL,GAAY,KAAKA,IAAL,CAAUuG,MAAV,CAAiBF,KAAK,CAACrG,IAAvB,CAAZ;AACD,KAFD,MAEO;AACL,WAAKA,IAAL,CAAUwB,IAAV,CAAe6E,KAAf;AACD;;AAED,WAAO,IAAP;AACD,GARD;;AAUA3G,EAAAA,UAAU,CAAC0G,SAAX,CAAqB/F,MAArB,GAA8B,YAAY;AACxC,WAAO,KAAKL,IAAZ;AACD,GAFD;;AAIA,WAASD,IAAT,CAAesG,KAAf,EAAsB;AACpB,SAAKrG,IAAL,GAAYqG,KAAZ;AACA,SAAKC,IAAL,GAAY,MAAZ;AACD;;AAEDvG,EAAAA,IAAI,CAACqG,SAAL,CAAe/F,MAAf,GAAwB,YAAY;AAClC,QAAIL,IAAI,GAAG,EAAX;;AAEA,SAAK,IAAIqF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKrF,IAAL,CAAUA,IAAV,CAAeP,MAAnC,EAA2C4F,CAAC,EAA5C,EAAgD;AAC9CrF,MAAAA,IAAI,CAACwB,IAAL,CAAU,KAAKxB,IAAL,CAAUA,IAAV,CAAeqF,CAAf,CAAV;AACD;;AAED,WAAOrF,IAAP;AACD,GARD;;AAUA,WAASF,QAAT,CAAmB0G,IAAnB,EAAyB;AACvB,SAAKxG,IAAL,GAAY,CAAEwG,IAAF,CAAZ;AACA,SAAKF,IAAL,GAAY,UAAZ;AACD;;AAEDxG,EAAAA,QAAQ,CAACsG,SAAT,CAAmBvG,OAAnB,GAA6B,UAAU2G,IAAV,EAAgB;AAC3C,SAAKxG,IAAL,CAAUwB,IAAV,CAAegF,IAAf;AAEA,WAAO,IAAP;AACD,GAJD;;AAMA1G,EAAAA,QAAQ,CAACsG,SAAT,CAAmB/F,MAAnB,GAA4B,YAAY;AACtC,QAAIL,IAAI,GAAG,EAAX;;AAEA,SAAK,IAAIqF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKrF,IAAL,CAAUP,MAA9B,EAAsC4F,CAAC,EAAvC,EAA2C;AACzCrF,MAAAA,IAAI,CAACwB,IAAL,CAAU,KAAKxB,IAAL,CAAUqF,CAAV,EAAahF,MAAb,EAAV;AACD;;AAED,QAAIL,IAAI,CAACP,MAAL,KAAgB,CAApB,EAAuB;AACrB,aAAOO,IAAP;AACD,KAFD,MAEO;AACL,aAAOA,IAAP;AACD;AACF,GAZD;;AAcA,WAASI,WAAT,CAAsBqG,OAAtB,EAA+B;AAC7B,SAAKzG,IAAL,GAAY,CAAEyG,OAAF,CAAZ;AACA,SAAKH,IAAL,GAAY,aAAZ;AACD;;AAEDlG,EAAAA,WAAW,CAACgG,SAAZ,CAAsBjG,UAAtB,GAAmC,UAAUsG,OAAV,EAAmB;AACpD,SAAKzG,IAAL,CAAUwB,IAAV,CAAeiF,OAAf;AAEA,WAAO,IAAP;AACD,GAJD;;AAMArG,EAAAA,WAAW,CAACgG,SAAZ,CAAsB/F,MAAtB,GAA+B,YAAY;AACzC,QAAIL,IAAI,GAAG,EAAX;;AAEA,SAAK,IAAIqF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKrF,IAAL,CAAUP,MAA9B,EAAsC4F,CAAC,EAAvC,EAA2C;AACzCrF,MAAAA,IAAI,GAAGA,IAAI,CAACuG,MAAL,CAAa,CAAE,KAAKvG,IAAL,CAAUqF,CAAV,EAAahF,MAAb,EAAF,CAAb,CAAP;AACD;;AAED,WAAOL,IAAP;AACD,GARD;;AAUA,WAAS0G,MAAT,GAAmB;AACjB,WAAOhI,MAAM,CAACiC,KAAP,CAAagG,KAAb,CAAmBjI,MAAnB,EAA2BkI,SAA3B,CAAP;AACD;;AAED,WAASjG,KAAT,CAAgBkG,OAAhB,EAAyB;AACvB,QAAIC,GAAJ,EAASC,SAAT;;AAEA,QAAI;AACFD,MAAAA,GAAG,GAAGpI,MAAM,CAACiC,KAAP,CAAakG,OAAb,CAAN;AACD,KAFD,CAEE,OAAOG,GAAP,EAAY;AACZ,YAAMxI,KAAK,CAAC,sBAAsBwI,GAAvB,CAAX;AACD;;AAED,WAAOzI,WAAW,CAAC0I,SAAZ,CAAsBH,GAAtB,CAAP;AACD;;AAED,WAASI,WAAT,CAAsBC,GAAtB,EAA2B;AACzB,QAAIC,KAAK,GAAG,EAAZ;AAAA,QAAiBC,GAAG,GAAG,EAAvB;;AAEA,SAAK,IAAIhC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG8B,GAAG,CAAC1H,MAAxB,EAAgC4F,CAAC,EAAjC,EAAqC;AACnC+B,MAAAA,KAAK,CAAC5F,IAAN,CAAW2F,GAAG,CAAC9B,CAAD,CAAH,CAAOzC,IAAP,CAAY,GAAZ,CAAX;AACD;;AAEDyE,IAAAA,GAAG,IAAI,MAAMD,KAAK,CAACxE,IAAN,CAAW,IAAX,CAAN,GAAyB,GAAhC;AAEA,WAAOyE,GAAP;AAED;;AAED,WAASC,eAAT,CAA0BP,SAA1B,EAAqC;AACnC,QAAIM,GAAG,GAAG,QAAV;;AAEA,QAAIN,SAAS,CAACQ,WAAV,KAA0B9D,SAA1B,IAAuCsD,SAAS,CAACQ,WAAV,CAAsB9H,MAAtB,KAAiC,CAA5E,EAA+E;AAC7E4H,MAAAA,GAAG,IAAI,OAAP;AAEA,aAAOA,GAAP;AACD,KAJD,MAIO,IAAIN,SAAS,CAACQ,WAAV,CAAsB9H,MAAtB,KAAiC,CAArC,EAAwC;AAC7C;AACA,UAAIsH,SAAS,CAACS,UAAV,IAAwBT,SAAS,CAACS,UAAV,CAAqBtH,CAArB,KAA2B,IAAvD,EAA6D;AAC3DmH,QAAAA,GAAG,IAAI,IAAP;AACD,OAFD,MAEO;AACLA,QAAAA,GAAG,IAAI,IAAP;AACD;AACF,KAPM,MAOA,IAAIN,SAAS,CAACQ,WAAV,CAAsB9H,MAAtB,KAAiC,CAArC,EAAwC;AAC7C;AACA4H,MAAAA,GAAG,IAAI,KAAP;AACD,KAjBkC,CAmBnC;;;AACAA,IAAAA,GAAG,IAAI,MAAMN,SAAS,CAACQ,WAAV,CAAsB3E,IAAtB,CAA2B,GAA3B,CAAN,GAAwC,GAA/C;AAEA,WAAOyE,GAAP;AACD;;AAED,WAASI,yBAAT,CAAoCV,SAApC,EAA+C;AAC7C,QAAIM,GAAG,GAAG,aAAV;;AAEA,QAAIN,SAAS,CAACQ,WAAV,KAA0B9D,SAA1B,IAAuCsD,SAAS,CAACQ,WAAV,CAAsB9H,MAAtB,KAAiC,CAAxE,IAA6EsH,SAAS,CAACQ,WAAV,CAAsB,CAAtB,EAAyB9H,MAAzB,KAAoC,CAArH,EAAwH;AACtH4H,MAAAA,GAAG,IAAI,OAAP;AAEA,aAAOA,GAAP;AACD,KAJD,MAIO,IAAIN,SAAS,CAACQ,WAAV,CAAsB,CAAtB,EAAyB9H,MAAzB,KAAoC,CAAxC,EAA2C;AAChD,UAAIsH,SAAS,CAACS,UAAV,IAAwBT,SAAS,CAACS,UAAV,CAAqBtH,CAArB,KAA2B,IAAvD,EAA6D;AAC3DmH,QAAAA,GAAG,IAAI,IAAP;AACD,OAFD,MAEO;AACLA,QAAAA,GAAG,IAAI,IAAP;AACD;AACF,KANM,MAMA,IAAIN,SAAS,CAACQ,WAAV,CAAsB,CAAtB,EAAyB9H,MAAzB,KAAoC,CAAxC,EAA2C;AAChD4H,MAAAA,GAAG,IAAI,KAAP;AACD;;AAEDA,IAAAA,GAAG,IAAIH,WAAW,CAACH,SAAS,CAACQ,WAAX,CAAlB;AAEA,WAAOF,GAAP;AACD;;AAED,WAASK,mBAAT,CAA8BX,SAA9B,EAAyC;AACvC,QAAIM,GAAG,GAAG,UAAV;;AAEA,QAAIN,SAAS,CAACQ,WAAV,KAA0B9D,SAA1B,IAAuCsD,SAAS,CAACQ,WAAV,CAAsB9H,MAAtB,KAAiC,CAAxE,IAA6EsH,SAAS,CAACQ,WAAV,CAAsB,CAAtB,EAAyB9H,MAAzB,KAAoC,CAArH,EAAwH;AACtH4H,MAAAA,GAAG,IAAI,OAAP;AAEA,aAAOA,GAAP;AACD,KAJD,MAIO,IAAIN,SAAS,CAACQ,WAAV,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B9H,MAA5B,KAAuC,CAA3C,EAA8C;AACnD,UAAIsH,SAAS,CAACS,UAAV,IAAwBT,SAAS,CAACS,UAAV,CAAqBtH,CAArB,KAA2B,IAAvD,EAA6D;AAC3DmH,QAAAA,GAAG,IAAI,IAAP;AACD,OAFD,MAEO;AACLA,QAAAA,GAAG,IAAI,IAAP;AACD;AACF,KANM,MAMA,IAAIN,SAAS,CAACQ,WAAV,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B9H,MAA5B,KAAuC,CAA3C,EAA8C;AACnD4H,MAAAA,GAAG,IAAI,KAAP;AACD;;AAEDA,IAAAA,GAAG,IAAI,GAAP;AACA,QAAID,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAI/B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0B,SAAS,CAACQ,WAAV,CAAsB9H,MAA1C,EAAkD4F,CAAC,EAAnD,EAAuD;AACrD+B,MAAAA,KAAK,CAAC5F,IAAN,CAAW0F,WAAW,CAACH,SAAS,CAACQ,WAAV,CAAsBlC,CAAtB,CAAD,CAAtB;AACD;;AAEDgC,IAAAA,GAAG,IAAID,KAAK,CAACxE,IAAN,CAAW,IAAX,CAAP;AACAyE,IAAAA,GAAG,IAAI,GAAP;AAEA,WAAOA,GAAP;AACD;;AAED,WAASM,yBAAT,CAAoCZ,SAApC,EAA+C;AAC7C,QAAIM,GAAG,GAAG,aAAV;;AAEA,QAAIN,SAAS,CAACQ,WAAV,KAA0B9D,SAA1B,IAAuCsD,SAAS,CAACQ,WAAV,CAAsB9H,MAAtB,KAAiC,CAAxE,IAA6EsH,SAAS,CAACQ,WAAV,CAAsB,CAAtB,EAAyB9H,MAAzB,KAAoC,CAArH,EAAwH;AACtH4H,MAAAA,GAAG,IAAI,OAAP;AAEA,aAAOA,GAAP;AACD,KAJD,MAIO,IAAIN,SAAS,CAACQ,WAAV,CAAsB,CAAtB,EAAyB9H,MAAzB,KAAoC,CAAxC,EAA2C;AAChD,UAAIsH,SAAS,CAACS,UAAV,IAAwBT,SAAS,CAACS,UAAV,CAAqBtH,CAArB,KAA2B,IAAvD,EAA6D;AAC3DmH,QAAAA,GAAG,IAAI,IAAP;AACD,OAFD,MAEO;AACLA,QAAAA,GAAG,IAAI,IAAP;AACD;AACF,KANM,MAMA,IAAIN,SAAS,CAACQ,WAAV,CAAsB,CAAtB,EAAyB9H,MAAzB,KAAoC,CAAxC,EAA2C;AAChD4H,MAAAA,GAAG,IAAI,KAAP;AACD;;AAEDA,IAAAA,GAAG,IAAIH,WAAW,CAACH,SAAS,CAACQ,WAAX,CAAlB;AAEA,WAAOF,GAAP;AACD;;AAED,WAASO,mCAAT,CAA8Cb,SAA9C,EAAyD;AACvD,QAAIM,GAAG,GAAG,kBAAV;;AAEA,QAAIN,SAAS,CAACQ,WAAV,KAA0B9D,SAA1B,IAAuCsD,SAAS,CAACQ,WAAV,CAAsB9H,MAAtB,KAAiC,CAAxE,IAA6EsH,SAAS,CAACQ,WAAV,CAAsB,CAAtB,EAAyB9H,MAAzB,KAAoC,CAArH,EAAwH;AACtH4H,MAAAA,GAAG,IAAI,OAAP;AAEA,aAAOA,GAAP;AACD,KAJD,MAIO,IAAIN,SAAS,CAACQ,WAAV,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B9H,MAA5B,KAAuC,CAA3C,EAA8C;AACnD,UAAIsH,SAAS,CAACS,UAAV,IAAwBT,SAAS,CAACS,UAAV,CAAqBtH,CAArB,KAA2B,IAAvD,EAA6D;AAC3DmH,QAAAA,GAAG,IAAI,IAAP;AACD,OAFD,MAEO;AACLA,QAAAA,GAAG,IAAI,IAAP;AACD;AACF,KANM,MAMA,IAAIN,SAAS,CAACQ,WAAV,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B9H,MAA5B,KAAuC,CAA3C,EAA8C;AACnD4H,MAAAA,GAAG,IAAI,KAAP;AACD;;AAEDA,IAAAA,GAAG,IAAI,GAAP;AACA,QAAID,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAI/B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0B,SAAS,CAACQ,WAAV,CAAsB9H,MAA1C,EAAkD4F,CAAC,EAAnD,EAAuD;AACrD+B,MAAAA,KAAK,CAAC5F,IAAN,CAAW0F,WAAW,CAACH,SAAS,CAACQ,WAAV,CAAsBlC,CAAtB,CAAD,CAAtB;AACD;;AAEDgC,IAAAA,GAAG,IAAID,KAAK,CAACxE,IAAN,CAAW,IAAX,CAAP;AACAyE,IAAAA,GAAG,IAAI,GAAP;AAEA,WAAOA,GAAP;AACD;;AAED,WAASQ,6BAAT,CAAwCd,SAAxC,EAAmD;AACjD,QAAIM,GAAG,GAAG,eAAV;;AAEA,QAAIN,SAAS,CAACQ,WAAV,KAA0B9D,SAA1B,IAAuCsD,SAAS,CAACQ,WAAV,CAAsB9H,MAAtB,KAAiC,CAAxE,IAA6EsH,SAAS,CAACQ,WAAV,CAAsB,CAAtB,EAAyB9H,MAAzB,KAAoC,CAArH,EAAwH;AACtH4H,MAAAA,GAAG,IAAI,OAAP;AAEA,aAAOA,GAAP;AACD,KAJD,MAIO,IAAIN,SAAS,CAACQ,WAAV,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B9H,MAA/B,KAA0C,CAA9C,EAAiD;AACtD,UAAIsH,SAAS,CAACS,UAAV,IAAwBT,SAAS,CAACS,UAAV,CAAqBtH,CAArB,KAA2B,IAAvD,EAA6D;AAC3DmH,QAAAA,GAAG,IAAI,IAAP;AACD,OAFD,MAEO;AACLA,QAAAA,GAAG,IAAI,IAAP;AACD;AACF,KANM,MAMA,IAAIN,SAAS,CAACQ,WAAV,CAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B9H,MAA/B,KAA0C,CAA9C,EAAiD;AACtD4H,MAAAA,GAAG,IAAI,KAAP;AACD;;AAEDA,IAAAA,GAAG,IAAI,GAAP;AACA,QAAIS,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAI/C,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgC,SAAS,CAACQ,WAAV,CAAsB9H,MAA1C,EAAkDsF,CAAC,EAAnD,EAAuD;AACrD,UAAIgD,EAAE,GAAG,GAAT;AACA,UAAIX,KAAK,GAAG,EAAZ;;AACA,WAAK,IAAI/B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0B,SAAS,CAACQ,WAAV,CAAsBxC,CAAtB,EAAyBtF,MAA7C,EAAqD4F,CAAC,EAAtD,EAA0D;AACxD+B,QAAAA,KAAK,CAAC5F,IAAN,CAAW0F,WAAW,CAACH,SAAS,CAACQ,WAAV,CAAsBxC,CAAtB,EAAyBM,CAAzB,CAAD,CAAtB;AACD;;AAED0C,MAAAA,EAAE,IAAIX,KAAK,CAACxE,IAAN,CAAW,IAAX,CAAN;AACAmF,MAAAA,EAAE,IAAI,GAAN;AAEAD,MAAAA,KAAK,CAACtG,IAAN,CAAWuG,EAAX;AACD;;AAEDV,IAAAA,GAAG,IAAIS,KAAK,CAAClF,IAAN,CAAW,IAAX,CAAP;AACAyE,IAAAA,GAAG,IAAI,GAAP;AAEA,WAAOA,GAAP;AACD;;AAED,WAASW,OAAT,CAAkBjB,SAAlB,EAA6B;AAC3B,YAAQA,SAAS,CAACT,IAAlB;AACE,WAAK,OAAL;AACE,eAAOgB,eAAe,CAACP,SAAD,CAAtB;;AACF,WAAK,YAAL;AACE,eAAOU,yBAAyB,CAACV,SAAD,CAAhC;;AACF,WAAK,SAAL;AACE,eAAOW,mBAAmB,CAACX,SAAD,CAA1B;;AACF,WAAK,YAAL;AACE,eAAOY,yBAAyB,CAACZ,SAAD,CAAhC;;AACF,WAAK,iBAAL;AACE,eAAOa,mCAAmC,CAACb,SAAD,CAA1C;;AACF,WAAK,cAAL;AACE,eAAOc,6BAA6B,CAACd,SAAD,CAApC;;AACF,WAAK,oBAAL;AACE,YAAIM,GAAG,GAAG,oBAAV;AACA,YAAID,KAAK,GAAG,EAAZ;;AACA,aAAK/B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAG0B,SAAS,CAACkB,UAAV,CAAqBxI,MAArC,EAA6C4F,CAAC,EAA9C,EAAiD;AAC/C+B,UAAAA,KAAK,CAAC5F,IAAN,CAAWwG,OAAO,CAACjB,SAAS,CAACkB,UAAV,CAAqB5C,CAArB,CAAD,CAAlB;AACD;;AACD,eAAOgC,GAAG,GAAG,GAAN,GAAYD,KAAK,CAACxE,IAAN,CAAW,IAAX,CAAZ,GAA+B,GAAtC;;AACF;AACE,cAAMpE,KAAK,CAAE,mBAAmBuI,SAAS,CAACT,IAA/B,CAAX;AArBJ;AAuBD;;AAEDlI,EAAAA,OAAO,CAACM,MAAR,GAAkBA,MAAlB;AACAN,EAAAA,OAAO,CAAC+H,MAAR,GAAkBzH,MAAM,CAACyH,MAAzB;AACA/H,EAAAA,OAAO,CAACuC,KAAR,GAAkBA,KAAlB;AACAvC,EAAAA,OAAO,CAAC4J,OAAR,GAAkBA,OAAlB;AAEA,SAAO5J,OAAP;AACD,CA7vBA,CAAD","sourcesContent":["(function (root, factory) {\n\n  // Node.\n  if(typeof module === 'object' && typeof module.exports === 'object') {\n    exports = module.exports = factory(require(\"terraformer\"));\n  } else if(typeof navigator === \"object\") {\n    // Browser Global.\n    if (!root.Terraformer){\n      throw new Error(\"Terraformer.WKT requires the core Terraformer library. http://github.com/esri/terraformer\")\n    }\n    root.Terraformer.WKT = factory(root.Terraformer);\n  }\n\n}(this, function(Terraformer) {\n  var exports = { };\n\n  /* Jison generated parser */\nvar parser = (function(){\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"expressions\":3,\"point\":4,\"EOF\":5,\"linestring\":6,\"polygon\":7,\"multipoint\":8,\"multilinestring\":9,\"multipolygon\":10,\"coordinate\":11,\"DOUBLE_TOK\":12,\"ptarray\":13,\"COMMA\":14,\"ring_list\":15,\"ring\":16,\"(\":17,\")\":18,\"POINT\":19,\"Z\":20,\"ZM\":21,\"M\":22,\"EMPTY\":23,\"point_untagged\":24,\"polygon_list\":25,\"polygon_untagged\":26,\"point_list\":27,\"LINESTRING\":28,\"POLYGON\":29,\"MULTIPOINT\":30,\"MULTILINESTRING\":31,\"MULTIPOLYGON\":32,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",12:\"DOUBLE_TOK\",14:\"COMMA\",17:\"(\",18:\")\",19:\"POINT\",20:\"Z\",21:\"ZM\",22:\"M\",23:\"EMPTY\",28:\"LINESTRING\",29:\"POLYGON\",30:\"MULTIPOINT\",31:\"MULTILINESTRING\",32:\"MULTIPOLYGON\"},\nproductions_: [0,[3,2],[3,2],[3,2],[3,2],[3,2],[3,2],[11,2],[11,3],[11,4],[13,3],[13,1],[15,3],[15,1],[16,3],[4,4],[4,5],[4,5],[4,5],[4,2],[24,1],[24,3],[25,3],[25,1],[26,3],[27,3],[27,1],[6,4],[6,5],[6,5],[6,5],[6,2],[7,4],[7,5],[7,5],[7,5],[7,2],[8,4],[8,5],[8,5],[8,5],[8,2],[9,4],[9,5],[9,5],[9,5],[9,2],[10,4],[10,5],[10,5],[10,5],[10,2]],\nperformAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$,_$\n/**/) {\n\nvar $0 = $.length - 1;\nswitch (yystate) {\ncase 1: return $[$0-1]; \nbreak;\ncase 2: return $[$0-1]; \nbreak;\ncase 3: return $[$0-1]; \nbreak;\ncase 4: return $[$0-1]; \nbreak;\ncase 5: return $[$0-1]; \nbreak;\ncase 6: return $[$0-1]; \nbreak;\ncase 7: this.$ = new PointArray([ Number($[$0-1]), Number($[$0]) ]); \nbreak;\ncase 8: this.$ = new PointArray([ Number($[$0-2]), Number($[$0-1]), Number($[$0]) ]); \nbreak;\ncase 9: this.$ = new PointArray([ Number($[$0-3]), Number($[$0-2]), Number($[$0-1]), Number($[$0]) ]); \nbreak;\ncase 10: this.$ = $[$0-2].addPoint($[$0]); \nbreak;\ncase 11: this.$ = $[$0]; \nbreak;\ncase 12: this.$ = $[$0-2].addRing($[$0]); \nbreak;\ncase 13: this.$ = new RingList($[$0]); \nbreak;\ncase 14: this.$ = new Ring($[$0-1]); \nbreak;\ncase 15: this.$ = { \"type\": \"Point\", \"coordinates\": $[$0-1].data[0] }; \nbreak;\ncase 16: this.$ = { \"type\": \"Point\", \"coordinates\": $[$0-1].data[0], \"properties\": { z: true } }; \nbreak;\ncase 17: this.$ = { \"type\": \"Point\", \"coordinates\": $[$0-1].data[0], \"properties\": { z: true, m: true } }; \nbreak;\ncase 18: this.$ = { \"type\": \"Point\", \"coordinates\": $[$0-1].data[0], \"properties\": { m: true } }; \nbreak;\ncase 19: this.$ = { \"type\": \"Point\", \"coordinates\": [ ] }; \nbreak;\ncase 20: this.$ = $[$0]; \nbreak;\ncase 21: this.$ = $[$0-1]; \nbreak;\ncase 22: this.$ = $[$0-2].addPolygon($[$0]); \nbreak;\ncase 23: this.$ = new PolygonList($[$0]); \nbreak;\ncase 24: this.$ = $[$0-1]; \nbreak;\ncase 25: this.$ = $[$0-2].addPoint($[$0]); \nbreak;\ncase 26: this.$ = $[$0]; \nbreak;\ncase 27: this.$ = { \"type\": \"LineString\", \"coordinates\": $[$0-1].data }; \nbreak;\ncase 28: this.$ = { \"type\": \"LineString\", \"coordinates\": $[$0-1].data, \"properties\": { z: true } }; \nbreak;\ncase 29: this.$ = { \"type\": \"LineString\", \"coordinates\": $[$0-1].data, \"properties\": { m: true } }; \nbreak;\ncase 30: this.$ = { \"type\": \"LineString\", \"coordinates\": $[$0-1].data, \"properties\": { z: true, m: true } }; \nbreak;\ncase 31: this.$ = { \"type\": \"LineString\", \"coordinates\": [ ] }; \nbreak;\ncase 32: this.$ = { \"type\": \"Polygon\", \"coordinates\": $[$0-1].toJSON() }; \nbreak;\ncase 33: this.$ = { \"type\": \"Polygon\", \"coordinates\": $[$0-1].toJSON(), \"properties\": { z: true } }; \nbreak;\ncase 34: this.$ = { \"type\": \"Polygon\", \"coordinates\": $[$0-1].toJSON(), \"properties\": { m: true } }; \nbreak;\ncase 35: this.$ = { \"type\": \"Polygon\", \"coordinates\": $[$0-1].toJSON(), \"properties\": { z: true, m: true } }; \nbreak;\ncase 36: this.$ = { \"type\": \"Polygon\", \"coordinates\": [ ] }; \nbreak;\ncase 37: this.$ = { \"type\": \"MultiPoint\", \"coordinates\": $[$0-1].data }; \nbreak;\ncase 38: this.$ = { \"type\": \"MultiPoint\", \"coordinates\": $[$0-1].data, \"properties\": { z: true } }; \nbreak;\ncase 39: this.$ = { \"type\": \"MultiPoint\", \"coordinates\": $[$0-1].data, \"properties\": { m: true } }; \nbreak;\ncase 40: this.$ = { \"type\": \"MultiPoint\", \"coordinates\": $[$0-1].data, \"properties\": { z: true, m: true } }; \nbreak;\ncase 41: this.$ = { \"type\": \"MultiPoint\", \"coordinates\": [ ] } \nbreak;\ncase 42: this.$ = { \"type\": \"MultiLineString\", \"coordinates\": $[$0-1].toJSON() }; \nbreak;\ncase 43: this.$ = { \"type\": \"MultiLineString\", \"coordinates\": $[$0-1].toJSON(), \"properties\": { z: true } }; \nbreak;\ncase 44: this.$ = { \"type\": \"MultiLineString\", \"coordinates\": $[$0-1].toJSON(), \"properties\": { m: true } }; \nbreak;\ncase 45: this.$ = { \"type\": \"MultiLineString\", \"coordinates\": $[$0-1].toJSON(), \"properties\": { z: true, m: true } }; \nbreak;\ncase 46: this.$ = { \"type\": \"MultiLineString\", \"coordinates\": [ ] }; \nbreak;\ncase 47: this.$ = { \"type\": \"MultiPolygon\", \"coordinates\": $[$0-1].toJSON() }; \nbreak;\ncase 48: this.$ = { \"type\": \"MultiPolygon\", \"coordinates\": $[$0-1].toJSON(), \"properties\": { z: true } }; \nbreak;\ncase 49: this.$ = { \"type\": \"MultiPolygon\", \"coordinates\": $[$0-1].toJSON(), \"properties\": { m: true } }; \nbreak;\ncase 50: this.$ = { \"type\": \"MultiPolygon\", \"coordinates\": $[$0-1].toJSON(), \"properties\": { z: true, m: true } }; \nbreak;\ncase 51: this.$ = { \"type\": \"MultiPolygon\", \"coordinates\": [ ] }; \nbreak;\n}\n},\ntable: [{3:1,4:2,6:3,7:4,8:5,9:6,10:7,19:[1,8],28:[1,9],29:[1,10],30:[1,11],31:[1,12],32:[1,13]},{1:[3]},{5:[1,14]},{5:[1,15]},{5:[1,16]},{5:[1,17]},{5:[1,18]},{5:[1,19]},{17:[1,20],20:[1,21],21:[1,22],22:[1,23],23:[1,24]},{17:[1,25],20:[1,26],21:[1,28],22:[1,27],23:[1,29]},{17:[1,30],20:[1,31],21:[1,33],22:[1,32],23:[1,34]},{17:[1,35],20:[1,36],21:[1,38],22:[1,37],23:[1,39]},{17:[1,40],20:[1,41],21:[1,43],22:[1,42],23:[1,44]},{17:[1,45],20:[1,46],21:[1,48],22:[1,47],23:[1,49]},{1:[2,1]},{1:[2,2]},{1:[2,3]},{1:[2,4]},{1:[2,5]},{1:[2,6]},{11:51,12:[1,52],13:50},{17:[1,53]},{17:[1,54]},{17:[1,55]},{5:[2,19]},{11:58,12:[1,52],17:[1,59],24:57,27:56},{17:[1,60]},{17:[1,61]},{17:[1,62]},{5:[2,31]},{15:63,16:64,17:[1,65]},{17:[1,66]},{17:[1,67]},{17:[1,68]},{5:[2,36]},{11:58,12:[1,52],17:[1,59],24:57,27:69},{17:[1,70]},{17:[1,71]},{17:[1,72]},{5:[2,41]},{15:73,16:64,17:[1,65]},{17:[1,74]},{17:[1,75]},{17:[1,76]},{5:[2,46]},{17:[1,79],25:77,26:78},{17:[1,80]},{17:[1,81]},{17:[1,82]},{5:[2,51]},{14:[1,84],18:[1,83]},{14:[2,11],18:[2,11]},{12:[1,85]},{11:51,12:[1,52],13:86},{11:51,12:[1,52],13:87},{11:51,12:[1,52],13:88},{14:[1,90],18:[1,89]},{14:[2,26],18:[2,26]},{14:[2,20],18:[2,20]},{11:91,12:[1,52]},{11:58,12:[1,52],17:[1,59],24:57,27:92},{11:58,12:[1,52],17:[1,59],24:57,27:93},{11:58,12:[1,52],17:[1,59],24:57,27:94},{14:[1,96],18:[1,95]},{14:[2,13],18:[2,13]},{11:51,12:[1,52],13:97},{15:98,16:64,17:[1,65]},{15:99,16:64,17:[1,65]},{15:100,16:64,17:[1,65]},{14:[1,90],18:[1,101]},{11:58,12:[1,52],17:[1,59],24:57,27:102},{11:58,12:[1,52],17:[1,59],24:57,27:103},{11:58,12:[1,52],17:[1,59],24:57,27:104},{14:[1,96],18:[1,105]},{15:106,16:64,17:[1,65]},{15:107,16:64,17:[1,65]},{15:108,16:64,17:[1,65]},{14:[1,110],18:[1,109]},{14:[2,23],18:[2,23]},{15:111,16:64,17:[1,65]},{17:[1,79],25:112,26:78},{17:[1,79],25:113,26:78},{17:[1,79],25:114,26:78},{5:[2,15]},{11:115,12:[1,52]},{12:[1,116],14:[2,7],18:[2,7]},{14:[1,84],18:[1,117]},{14:[1,84],18:[1,118]},{14:[1,84],18:[1,119]},{5:[2,27]},{11:58,12:[1,52],17:[1,59],24:120},{18:[1,121]},{14:[1,90],18:[1,122]},{14:[1,90],18:[1,123]},{14:[1,90],18:[1,124]},{5:[2,32]},{16:125,17:[1,65]},{14:[1,84],18:[1,126]},{14:[1,96],18:[1,127]},{14:[1,96],18:[1,128]},{14:[1,96],18:[1,129]},{5:[2,37]},{14:[1,90],18:[1,130]},{14:[1,90],18:[1,131]},{14:[1,90],18:[1,132]},{5:[2,42]},{14:[1,96],18:[1,133]},{14:[1,96],18:[1,134]},{14:[1,96],18:[1,135]},{5:[2,47]},{17:[1,79],26:136},{14:[1,96],18:[1,137]},{14:[1,110],18:[1,138]},{14:[1,110],18:[1,139]},{14:[1,110],18:[1,140]},{14:[2,10],18:[2,10]},{12:[1,141],14:[2,8],18:[2,8]},{5:[2,16]},{5:[2,17]},{5:[2,18]},{14:[2,25],18:[2,25]},{14:[2,21],18:[2,21]},{5:[2,28]},{5:[2,29]},{5:[2,30]},{14:[2,12],18:[2,12]},{14:[2,14],18:[2,14]},{5:[2,33]},{5:[2,34]},{5:[2,35]},{5:[2,38]},{5:[2,39]},{5:[2,40]},{5:[2,43]},{5:[2,44]},{5:[2,45]},{14:[2,22],18:[2,22]},{14:[2,24],18:[2,24]},{5:[2,48]},{5:[2,49]},{5:[2,50]},{14:[2,9],18:[2,9]}],\ndefaultActions: {14:[2,1],15:[2,2],16:[2,3],17:[2,4],18:[2,5],19:[2,6],24:[2,19],29:[2,31],34:[2,36],39:[2,41],44:[2,46],49:[2,51],83:[2,15],89:[2,27],95:[2,32],101:[2,37],105:[2,42],109:[2,47],117:[2,16],118:[2,17],119:[2,18],122:[2,28],123:[2,29],124:[2,30],127:[2,33],128:[2,34],129:[2,35],130:[2,38],131:[2,39],132:[2,40],133:[2,43],134:[2,44],135:[2,45],138:[2,48],139:[2,49],140:[2,50]},\nparseError: function parseError(str, hash) {\n    throw new Error(str);\n},\nparse: function parse(input) {\n    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = \"\", yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    this.lexer.setInput(input);\n    this.lexer.yy = this.yy;\n    this.yy.lexer = this.lexer;\n    this.yy.parser = this;\n    if (typeof this.lexer.yylloc == \"undefined\")\n        this.lexer.yylloc = {};\n    var yyloc = this.lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = this.lexer.options && this.lexer.options.ranges;\n    if (typeof this.yy.parseError === \"function\")\n        this.parseError = this.yy.parseError;\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    function lex() {\n        var token;\n        token = self.lexer.lex() || 1;\n        if (typeof token !== \"number\") {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == \"undefined\") {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n        if (typeof action === \"undefined\" || !action.length || !action[0]) {\n            var errStr = \"\";\n            if (!recovering) {\n                expected = [];\n                for (p in table[state])\n                    if (this.terminals_[p] && p > 2) {\n                        expected.push(\"'\" + this.terminals_[p] + \"'\");\n                    }\n                if (this.lexer.showPosition) {\n                    errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + this.lexer.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n                } else {\n                    errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == 1?\"end of input\":\"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n                }\n                this.parseError(errStr, {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});\n            }\n        }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(this.lexer.yytext);\n            lstack.push(this.lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = this.lexer.yyleng;\n                yytext = this.lexer.yytext;\n                yylineno = this.lexer.yylineno;\n                yyloc = this.lexer.yylloc;\n                if (recovering > 0)\n                    recovering--;\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column};\n            if (ranges) {\n                yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n            }\n            r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n            if (typeof r !== \"undefined\") {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}\n};\nundefined/* Jison generated lexer */\nvar lexer = (function(){\nvar lexer = ({EOF:1,\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\nsetInput:function (input) {\n        this._input = input;\n        this._more = this._less = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};\n        if (this.options.ranges) this.yylloc.range = [0,0];\n        this.offset = 0;\n        return this;\n    },\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) this.yylloc.range[1]++;\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length-len-1);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length-1);\n        this.matched = this.matched.substr(0, this.matched.length-1);\n\n        if (lines.length-1) this.yylineno -= lines.length-1;\n        var r = this.yylloc.range;\n\n        this.yylloc = {first_line: this.yylloc.first_line,\n          last_line: this.yylineno+1,\n          first_column: this.yylloc.first_column,\n          last_column: lines ?\n              (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length:\n              this.yylloc.first_column - len\n          };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        return this;\n    },\nmore:function () {\n        this._more = true;\n        return this;\n    },\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\\n/g, \"\");\n    },\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c+\"^\";\n    },\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) this.done = true;\n\n        var token,\n            match,\n            tempMatch,\n            index,\n            col,\n            lines;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i=0;i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (!this.options.flex) break;\n            }\n        }\n        if (match) {\n            lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n            if (lines) this.yylineno += lines.length;\n            this.yylloc = {first_line: this.yylloc.last_line,\n                           last_line: this.yylineno+1,\n                           first_column: this.yylloc.last_column,\n                           last_column: lines ? lines[lines.length-1].length-lines[lines.length-1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length};\n            this.yytext += match[0];\n            this.match += match[0];\n            this.matches = match;\n            this.yyleng = this.yytext.length;\n            if (this.options.ranges) {\n                this.yylloc.range = [this.offset, this.offset += this.yyleng];\n            }\n            this._more = false;\n            this._input = this._input.slice(match[0].length);\n            this.matched += match[0];\n            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);\n            if (this.done && this._input) this.done = false;\n            if (token) return token;\n            else return;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\\n'+this.showPosition(),\n                    {text: \"\", token: null, line: this.yylineno});\n        }\n    },\nlex:function lex() {\n        var r = this.next();\n        if (typeof r !== 'undefined') {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\npopState:function popState() {\n        return this.conditionStack.pop();\n    },\n_currentRules:function _currentRules() {\n        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;\n    },\ntopState:function () {\n        return this.conditionStack[this.conditionStack.length-2];\n    },\npushState:function begin(condition) {\n        this.begin(condition);\n    }});\nlexer.options = {};\nlexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START\n/**/) {\n\nvar YYSTATE=YY_START\nswitch($avoiding_name_collisions) {\ncase 0:// ignore\nbreak;\ncase 1:return 17\nbreak;\ncase 2:return 18\nbreak;\ncase 3:return 12\nbreak;\ncase 4:return 19\nbreak;\ncase 5:return 28\nbreak;\ncase 6:return 29\nbreak;\ncase 7:return 30\nbreak;\ncase 8:return 31\nbreak;\ncase 9:return 32\nbreak;\ncase 10:return 14\nbreak;\ncase 11:return 23\nbreak;\ncase 12:return 22\nbreak;\ncase 13:return 20\nbreak;\ncase 14:return 21\nbreak;\ncase 15:return 5\nbreak;\ncase 16:return \"INVALID\"\nbreak;\n}\n};\nlexer.rules = [/^(?:\\s+)/,/^(?:\\()/,/^(?:\\))/,/^(?:-?[0-9]+(\\.[0-9]+)?([eE][\\-\\+]?[0-9]+)?)/,/^(?:POINT\\b)/,/^(?:LINESTRING\\b)/,/^(?:POLYGON\\b)/,/^(?:MULTIPOINT\\b)/,/^(?:MULTILINESTRING\\b)/,/^(?:MULTIPOLYGON\\b)/,/^(?:,)/,/^(?:EMPTY\\b)/,/^(?:M\\b)/,/^(?:Z\\b)/,/^(?:ZM\\b)/,/^(?:$)/,/^(?:.)/];\nlexer.conditions = {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16],\"inclusive\":true}};\nreturn lexer;})()\nparser.lexer = lexer;\nfunction Parser () { this.yy = {}; }Parser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n  function PointArray (point) {\n    this.data = [ point ];\n    this.type = 'PointArray';\n  }\n\n  PointArray.prototype.addPoint = function (point) {\n    if (point.type === 'PointArray') {\n      this.data = this.data.concat(point.data);\n    } else {\n      this.data.push(point);\n    }\n\n    return this;\n  };\n\n  PointArray.prototype.toJSON = function () {\n    return this.data;\n  };\n\n  function Ring (point) {\n    this.data = point;\n    this.type = 'Ring';\n  }\n\n  Ring.prototype.toJSON = function () {\n    var data = [ ];\n\n    for (var i = 0; i < this.data.data.length; i++) {\n      data.push(this.data.data[i]);\n    }\n\n    return data;\n  };\n\n  function RingList (ring) {\n    this.data = [ ring ];\n    this.type = 'RingList';\n  }\n\n  RingList.prototype.addRing = function (ring) {\n    this.data.push(ring);\n\n    return this;\n  };\n\n  RingList.prototype.toJSON = function () {\n    var data = [ ];\n\n    for (var i = 0; i < this.data.length; i++) {\n      data.push(this.data[i].toJSON());\n    }\n\n    if (data.length === 1) {\n      return data;\n    } else {\n      return data;\n    }\n  };\n\n  function PolygonList (polygon) {\n    this.data = [ polygon ];\n    this.type = 'PolygonList';\n  }\n\n  PolygonList.prototype.addPolygon = function (polygon) {\n    this.data.push(polygon);\n\n    return this;\n  };\n\n  PolygonList.prototype.toJSON = function () {\n    var data = [ ];\n\n    for (var i = 0; i < this.data.length; i++) {\n      data = data.concat( [ this.data[i].toJSON() ] );\n    }\n\n    return data;\n  };\n\n  function _parse () {\n    return parser.parse.apply(parser, arguments);\n  }\n\n  function parse (element) {\n    var res, primitive;\n\n    try {\n      res = parser.parse(element);\n    } catch (err) {\n      throw Error(\"Unable to parse: \" + err);\n    }\n\n    return Terraformer.Primitive(res);\n  }\n\n  function arrayToRing (arr) {\n    var parts = [ ], ret = '';\n\n    for (var i = 0; i < arr.length; i++) {\n      parts.push(arr[i].join(' '));\n    }\n\n    ret += '(' + parts.join(', ') + ')';\n\n    return ret;\n\n  }\n\n  function pointToWKTPoint (primitive) {\n    var ret = 'POINT ';\n\n    if (primitive.coordinates === undefined || primitive.coordinates.length === 0) {\n      ret += 'EMPTY';\n\n      return ret;\n    } else if (primitive.coordinates.length === 3) {\n      // 3d or time? default to 3d\n      if (primitive.properties && primitive.properties.m === true) {\n        ret += 'M ';\n      } else {\n        ret += 'Z ';\n      }\n    } else if (primitive.coordinates.length === 4) {\n      // 3d and time\n      ret += 'ZM ';\n    }\n\n    // include coordinates\n    ret += '(' + primitive.coordinates.join(' ') + ')';\n\n    return ret;\n  }\n\n  function lineStringToWKTLineString (primitive) {\n    var ret = 'LINESTRING ';\n\n    if (primitive.coordinates === undefined || primitive.coordinates.length === 0 || primitive.coordinates[0].length === 0) {\n      ret += 'EMPTY';\n\n      return ret;\n    } else if (primitive.coordinates[0].length === 3) {\n      if (primitive.properties && primitive.properties.m === true) {\n        ret += 'M ';\n      } else {\n        ret += 'Z ';\n      }\n    } else if (primitive.coordinates[0].length === 4) {\n      ret += 'ZM ';\n    }\n\n    ret += arrayToRing(primitive.coordinates);\n\n    return ret;\n  }\n\n  function polygonToWKTPolygon (primitive) {\n    var ret = 'POLYGON ';\n\n    if (primitive.coordinates === undefined || primitive.coordinates.length === 0 || primitive.coordinates[0].length === 0) {\n      ret += 'EMPTY';\n\n      return ret;\n    } else if (primitive.coordinates[0][0].length === 3) {\n      if (primitive.properties && primitive.properties.m === true) {\n        ret += 'M ';\n      } else {\n        ret += 'Z ';\n      }\n    } else if (primitive.coordinates[0][0].length === 4) {\n      ret += 'ZM ';\n    }\n\n    ret += '(';\n    var parts = [ ];\n    for (var i = 0; i < primitive.coordinates.length; i++) {\n      parts.push(arrayToRing(primitive.coordinates[i]));\n    }\n\n    ret += parts.join(', ');\n    ret += ')';\n\n    return ret;\n  }\n\n  function multiPointToWKTMultiPoint (primitive) {\n    var ret = 'MULTIPOINT ';\n\n    if (primitive.coordinates === undefined || primitive.coordinates.length === 0 || primitive.coordinates[0].length === 0) {\n      ret += 'EMPTY';\n\n      return ret;\n    } else if (primitive.coordinates[0].length === 3) {\n      if (primitive.properties && primitive.properties.m === true) {\n        ret += 'M ';\n      } else {\n        ret += 'Z ';\n      }\n    } else if (primitive.coordinates[0].length === 4) {\n      ret += 'ZM ';\n    }\n\n    ret += arrayToRing(primitive.coordinates);\n\n    return ret;\n  }\n\n  function multiLineStringToWKTMultiLineString (primitive) {\n    var ret = 'MULTILINESTRING ';\n\n    if (primitive.coordinates === undefined || primitive.coordinates.length === 0 || primitive.coordinates[0].length === 0) {\n      ret += 'EMPTY';\n\n      return ret;\n    } else if (primitive.coordinates[0][0].length === 3) {\n      if (primitive.properties && primitive.properties.m === true) {\n        ret += 'M ';\n      } else {\n        ret += 'Z ';\n      }\n    } else if (primitive.coordinates[0][0].length === 4) {\n      ret += 'ZM ';\n    }\n\n    ret += '(';\n    var parts = [ ];\n    for (var i = 0; i < primitive.coordinates.length; i++) {\n      parts.push(arrayToRing(primitive.coordinates[i]));\n    }\n\n    ret += parts.join(', ');\n    ret += ')';\n\n    return ret;\n  }\n\n  function multiPolygonToWKTMultiPolygon (primitive) {\n    var ret = 'MULTIPOLYGON ';\n\n    if (primitive.coordinates === undefined || primitive.coordinates.length === 0 || primitive.coordinates[0].length === 0) {\n      ret += 'EMPTY';\n\n      return ret;\n    } else if (primitive.coordinates[0][0][0].length === 3) {\n      if (primitive.properties && primitive.properties.m === true) {\n        ret += 'M ';\n      } else {\n        ret += 'Z ';\n      }\n    } else if (primitive.coordinates[0][0][0].length === 4) {\n      ret += 'ZM ';\n    }\n\n    ret += '(';\n    var inner = [ ];\n    for (var c = 0; c < primitive.coordinates.length; c++) {\n      var it = '(';\n      var parts = [ ];\n      for (var i = 0; i < primitive.coordinates[c].length; i++) {\n        parts.push(arrayToRing(primitive.coordinates[c][i]));\n      }\n\n      it += parts.join(', ');\n      it += ')';\n\n      inner.push(it);\n    }\n\n    ret += inner.join(', ');\n    ret += ')';\n\n    return ret;\n  }\n\n  function convert (primitive) {\n    switch (primitive.type) {\n      case 'Point':\n        return pointToWKTPoint(primitive);\n      case 'LineString':\n        return lineStringToWKTLineString(primitive);\n      case 'Polygon':\n        return polygonToWKTPolygon(primitive);\n      case 'MultiPoint':\n        return multiPointToWKTMultiPoint(primitive);\n      case 'MultiLineString':\n        return multiLineStringToWKTMultiLineString(primitive);\n      case 'MultiPolygon':\n        return multiPolygonToWKTMultiPolygon(primitive);\n      case 'GeometryCollection':\n        var ret = 'GEOMETRYCOLLECTION';\n        var parts = [ ];\n        for (i = 0; i < primitive.geometries.length; i++){\n          parts.push(convert(primitive.geometries[i]));\n        }\n        return ret + '(' + parts.join(', ') + ')';\n      default:\n        throw Error (\"Unknown Type: \" + primitive.type);\n    }\n  }\n\n  exports.parser  = parser;\n  exports.Parser  = parser.Parser;\n  exports.parse   = parse;\n  exports.convert = convert;\n\n  return exports;\n}));\n"]},"metadata":{},"sourceType":"script"}