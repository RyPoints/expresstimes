{"ast":null,"code":"'use strict';\n\nconst _ = require('lodash');\n\nconst AbstractDialect = require('../abstract');\n\nconst ConnectionManager = require('./connection-manager');\n\nconst Query = require('./query');\n\nconst QueryGenerator = require('./query-generator');\n\nconst DataTypes = require('../../data-types').mysql;\n\nclass MysqlDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.QueryGenerator = _.extend({}, QueryGenerator, {\n      options: sequelize.options,\n      _dialect: this,\n      sequelize\n    });\n  }\n\n}\n\nMysqlDialect.prototype.supports = _.merge(_.cloneDeep(AbstractDialect.prototype.supports), {\n  'VALUES ()': true,\n  'LIMIT ON UPDATE': true,\n  'IGNORE': ' IGNORE',\n  lock: true,\n  forShare: 'LOCK IN SHARE MODE',\n  index: {\n    collate: false,\n    length: true,\n    parser: true,\n    type: true,\n    using: 1\n  },\n  constraints: {\n    dropConstraint: false,\n    check: false\n  },\n  ignoreDuplicates: ' IGNORE',\n  updateOnDuplicate: true,\n  indexViaAlter: true,\n  NUMERIC: true,\n  GEOMETRY: true,\n  JSON: true,\n  REGEXP: true\n});\nConnectionManager.prototype.defaultVersion = '5.6.0';\nMysqlDialect.prototype.Query = Query;\nMysqlDialect.prototype.QueryGenerator = QueryGenerator;\nMysqlDialect.prototype.DataTypes = DataTypes;\nMysqlDialect.prototype.name = 'mysql';\nMysqlDialect.prototype.TICK_CHAR = '`';\nMysqlDialect.prototype.TICK_CHAR_LEFT = MysqlDialect.prototype.TICK_CHAR;\nMysqlDialect.prototype.TICK_CHAR_RIGHT = MysqlDialect.prototype.TICK_CHAR;\nmodule.exports = MysqlDialect;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/node_modules/sequelize/lib/dialects/mysql/index.js"],"names":["_","require","AbstractDialect","ConnectionManager","Query","QueryGenerator","DataTypes","mysql","MysqlDialect","constructor","sequelize","connectionManager","extend","options","_dialect","prototype","supports","merge","cloneDeep","lock","forShare","index","collate","length","parser","type","using","constraints","dropConstraint","check","ignoreDuplicates","updateOnDuplicate","indexViaAlter","NUMERIC","GEOMETRY","JSON","REGEXP","defaultVersion","name","TICK_CHAR","TICK_CHAR_LEFT","TICK_CHAR_RIGHT","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,aAAD,CAA/B;;AACA,MAAME,iBAAiB,GAAGF,OAAO,CAAC,sBAAD,CAAjC;;AACA,MAAMG,KAAK,GAAGH,OAAO,CAAC,SAAD,CAArB;;AACA,MAAMI,cAAc,GAAGJ,OAAO,CAAC,mBAAD,CAA9B;;AACA,MAAMK,SAAS,GAAGL,OAAO,CAAC,kBAAD,CAAP,CAA4BM,KAA9C;;AAEA,MAAMC,YAAN,SAA2BN,eAA3B,CAA2C;AACzCO,EAAAA,WAAW,CAACC,SAAD,EAAY;AACrB;AACA,SAAKA,SAAL,GAAiBA,SAAjB;AACA,SAAKC,iBAAL,GAAyB,IAAIR,iBAAJ,CAAsB,IAAtB,EAA4BO,SAA5B,CAAzB;AACA,SAAKL,cAAL,GAAsBL,CAAC,CAACY,MAAF,CAAS,EAAT,EAAaP,cAAb,EAA6B;AACjDQ,MAAAA,OAAO,EAAEH,SAAS,CAACG,OAD8B;AAEjDC,MAAAA,QAAQ,EAAE,IAFuC;AAGjDJ,MAAAA;AAHiD,KAA7B,CAAtB;AAKD;;AAVwC;;AAa3CF,YAAY,CAACO,SAAb,CAAuBC,QAAvB,GAAkChB,CAAC,CAACiB,KAAF,CAAQjB,CAAC,CAACkB,SAAF,CAAYhB,eAAe,CAACa,SAAhB,CAA0BC,QAAtC,CAAR,EAAyD;AACzF,eAAa,IAD4E;AAEzF,qBAAmB,IAFsE;AAGzF,YAAU,SAH+E;AAIzFG,EAAAA,IAAI,EAAE,IAJmF;AAKzFC,EAAAA,QAAQ,EAAE,oBAL+E;AAMzFC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,KADJ;AAELC,IAAAA,MAAM,EAAE,IAFH;AAGLC,IAAAA,MAAM,EAAE,IAHH;AAILC,IAAAA,IAAI,EAAE,IAJD;AAKLC,IAAAA,KAAK,EAAE;AALF,GANkF;AAazFC,EAAAA,WAAW,EAAE;AACXC,IAAAA,cAAc,EAAE,KADL;AAEXC,IAAAA,KAAK,EAAE;AAFI,GAb4E;AAiBzFC,EAAAA,gBAAgB,EAAE,SAjBuE;AAkBzFC,EAAAA,iBAAiB,EAAE,IAlBsE;AAmBzFC,EAAAA,aAAa,EAAE,IAnB0E;AAoBzFC,EAAAA,OAAO,EAAE,IApBgF;AAqBzFC,EAAAA,QAAQ,EAAE,IArB+E;AAsBzFC,EAAAA,IAAI,EAAE,IAtBmF;AAuBzFC,EAAAA,MAAM,EAAE;AAvBiF,CAAzD,CAAlC;AA0BAjC,iBAAiB,CAACY,SAAlB,CAA4BsB,cAA5B,GAA6C,OAA7C;AACA7B,YAAY,CAACO,SAAb,CAAuBX,KAAvB,GAA+BA,KAA/B;AACAI,YAAY,CAACO,SAAb,CAAuBV,cAAvB,GAAwCA,cAAxC;AACAG,YAAY,CAACO,SAAb,CAAuBT,SAAvB,GAAmCA,SAAnC;AACAE,YAAY,CAACO,SAAb,CAAuBuB,IAAvB,GAA8B,OAA9B;AACA9B,YAAY,CAACO,SAAb,CAAuBwB,SAAvB,GAAmC,GAAnC;AACA/B,YAAY,CAACO,SAAb,CAAuByB,cAAvB,GAAwChC,YAAY,CAACO,SAAb,CAAuBwB,SAA/D;AACA/B,YAAY,CAACO,SAAb,CAAuB0B,eAAvB,GAAyCjC,YAAY,CAACO,SAAb,CAAuBwB,SAAhE;AAEAG,MAAM,CAACC,OAAP,GAAiBnC,YAAjB","sourcesContent":["'use strict';\n\nconst _ = require('lodash');\nconst AbstractDialect = require('../abstract');\nconst ConnectionManager = require('./connection-manager');\nconst Query = require('./query');\nconst QueryGenerator = require('./query-generator');\nconst DataTypes = require('../../data-types').mysql;\n\nclass MysqlDialect extends AbstractDialect {\n  constructor(sequelize) {\n    super();\n    this.sequelize = sequelize;\n    this.connectionManager = new ConnectionManager(this, sequelize);\n    this.QueryGenerator = _.extend({}, QueryGenerator, {\n      options: sequelize.options,\n      _dialect: this,\n      sequelize\n    });\n  }\n}\n\nMysqlDialect.prototype.supports = _.merge(_.cloneDeep(AbstractDialect.prototype.supports), {\n  'VALUES ()': true,\n  'LIMIT ON UPDATE': true,\n  'IGNORE': ' IGNORE',\n  lock: true,\n  forShare: 'LOCK IN SHARE MODE',\n  index: {\n    collate: false,\n    length: true,\n    parser: true,\n    type: true,\n    using: 1\n  },\n  constraints: {\n    dropConstraint: false,\n    check: false\n  },\n  ignoreDuplicates: ' IGNORE',\n  updateOnDuplicate: true,\n  indexViaAlter: true,\n  NUMERIC: true,\n  GEOMETRY: true,\n  JSON: true,\n  REGEXP: true\n});\n\nConnectionManager.prototype.defaultVersion = '5.6.0';\nMysqlDialect.prototype.Query = Query;\nMysqlDialect.prototype.QueryGenerator = QueryGenerator;\nMysqlDialect.prototype.DataTypes = DataTypes;\nMysqlDialect.prototype.name = 'mysql';\nMysqlDialect.prototype.TICK_CHAR = '`';\nMysqlDialect.prototype.TICK_CHAR_LEFT = MysqlDialect.prototype.TICK_CHAR;\nMysqlDialect.prototype.TICK_CHAR_RIGHT = MysqlDialect.prototype.TICK_CHAR;\n\nmodule.exports = MysqlDialect;\n"]},"metadata":{},"sourceType":"script"}