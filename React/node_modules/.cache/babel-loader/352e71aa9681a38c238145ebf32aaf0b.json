{"ast":null,"code":"import GestureHandler from './GestureHandler';\n/**\n * The base class for **Rotation** and **Pinch** gesture handlers.\n */\n\nclass IndiscreteGestureHandler extends GestureHandler {\n  get shouldEnableGestureOnSetup() {\n    return false;\n  }\n\n  updateGestureConfig({\n    minPointers = 2,\n    maxPointers = 2,\n    ...props\n  }) {\n    return super.updateGestureConfig({\n      minPointers,\n      maxPointers,\n      ...props\n    });\n  }\n\n  isGestureEnabledForEvent({\n    minPointers,\n    maxPointers\n  }, recognizer, {\n    maxPointers: pointerLength\n  }) {\n    if (pointerLength > maxPointers) {\n      return {\n        failed: true\n      };\n    }\n\n    const validPointerCount = pointerLength >= minPointers;\n    return {\n      success: validPointerCount\n    };\n  }\n\n}\n\nexport default IndiscreteGestureHandler;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/node_modules/react-native-gesture-handler/web/IndiscreteGestureHandler.js"],"names":["GestureHandler","IndiscreteGestureHandler","shouldEnableGestureOnSetup","updateGestureConfig","minPointers","maxPointers","props","isGestureEnabledForEvent","recognizer","pointerLength","failed","validPointerCount","success"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AAEA;;;;AAGA,MAAMC,wBAAN,SAAuCD,cAAvC,CAAsD;AACpD,MAAIE,0BAAJ,GAAiC;AAC/B,WAAO,KAAP;AACD;;AAEDC,EAAAA,mBAAmB,CAAC;AAAEC,IAAAA,WAAW,GAAG,CAAhB;AAAmBC,IAAAA,WAAW,GAAG,CAAjC;AAAoC,OAAGC;AAAvC,GAAD,EAAiD;AAClE,WAAO,MAAMH,mBAAN,CAA0B;AAC/BC,MAAAA,WAD+B;AAE/BC,MAAAA,WAF+B;AAG/B,SAAGC;AAH4B,KAA1B,CAAP;AAKD;;AAEDC,EAAAA,wBAAwB,CACtB;AAAEH,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GADsB,EAEtBG,UAFsB,EAGtB;AAAEH,IAAAA,WAAW,EAAEI;AAAf,GAHsB,EAItB;AACA,QAAIA,aAAa,GAAGJ,WAApB,EAAiC;AAC/B,aAAO;AAAEK,QAAAA,MAAM,EAAE;AAAV,OAAP;AACD;;AACD,UAAMC,iBAAiB,GAAGF,aAAa,IAAIL,WAA3C;AACA,WAAO;AACLQ,MAAAA,OAAO,EAAED;AADJ,KAAP;AAGD;;AAzBmD;;AA2BtD,eAAeV,wBAAf","sourcesContent":["import GestureHandler from './GestureHandler';\n\n/**\n * The base class for **Rotation** and **Pinch** gesture handlers.\n */\nclass IndiscreteGestureHandler extends GestureHandler {\n  get shouldEnableGestureOnSetup() {\n    return false;\n  }\n\n  updateGestureConfig({ minPointers = 2, maxPointers = 2, ...props }) {\n    return super.updateGestureConfig({\n      minPointers,\n      maxPointers,\n      ...props,\n    });\n  }\n\n  isGestureEnabledForEvent(\n    { minPointers, maxPointers },\n    recognizer,\n    { maxPointers: pointerLength }\n  ) {\n    if (pointerLength > maxPointers) {\n      return { failed: true };\n    }\n    const validPointerCount = pointerLength >= minPointers;\n    return {\n      success: validPointerCount,\n    };\n  }\n}\nexport default IndiscreteGestureHandler;\n"]},"metadata":{},"sourceType":"module"}