{"ast":null,"code":"'use strict';\n\nconst Command = require('./command');\n\nconst Packets = require('../packets');\n\nclass RegisterSlave extends Command {\n  constructor(opts, callback) {\n    super();\n    this.onResult = callback;\n    this.opts = opts;\n  }\n\n  start(packet, connection) {\n    const newPacket = new Packets.RegisterSlave(this.opts);\n    connection.writePacket(newPacket.toPacket(1));\n    return RegisterSlave.prototype.registerResponse;\n  }\n\n  registerResponse() {\n    if (this.onResult) {\n      process.nextTick(this.onResult.bind(this));\n    }\n\n    return null;\n  }\n\n}\n\nmodule.exports = RegisterSlave;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp5/expresstimes/node_modules/mysql2/lib/commands/register_slave.js"],"names":["Command","require","Packets","RegisterSlave","constructor","opts","callback","onResult","start","packet","connection","newPacket","writePacket","toPacket","prototype","registerResponse","process","nextTick","bind","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,WAAD,CAAvB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,YAAD,CAAvB;;AAEA,MAAME,aAAN,SAA4BH,OAA5B,CAAoC;AAClCI,EAAAA,WAAW,CAACC,IAAD,EAAOC,QAAP,EAAiB;AAC1B;AACA,SAAKC,QAAL,GAAgBD,QAAhB;AACA,SAAKD,IAAL,GAAYA,IAAZ;AACD;;AAEDG,EAAAA,KAAK,CAACC,MAAD,EAASC,UAAT,EAAqB;AACxB,UAAMC,SAAS,GAAG,IAAIT,OAAO,CAACC,aAAZ,CAA0B,KAAKE,IAA/B,CAAlB;AACAK,IAAAA,UAAU,CAACE,WAAX,CAAuBD,SAAS,CAACE,QAAV,CAAmB,CAAnB,CAAvB;AACA,WAAOV,aAAa,CAACW,SAAd,CAAwBC,gBAA/B;AACD;;AAEDA,EAAAA,gBAAgB,GAAG;AACjB,QAAI,KAAKR,QAAT,EAAmB;AACjBS,MAAAA,OAAO,CAACC,QAAR,CAAiB,KAAKV,QAAL,CAAcW,IAAd,CAAmB,IAAnB,CAAjB;AACD;;AACD,WAAO,IAAP;AACD;;AAlBiC;;AAqBpCC,MAAM,CAACC,OAAP,GAAiBjB,aAAjB","sourcesContent":["'use strict';\n\nconst Command = require('./command');\nconst Packets = require('../packets');\n\nclass RegisterSlave extends Command {\n  constructor(opts, callback) {\n    super();\n    this.onResult = callback;\n    this.opts = opts;\n  }\n\n  start(packet, connection) {\n    const newPacket = new Packets.RegisterSlave(this.opts);\n    connection.writePacket(newPacket.toPacket(1));\n    return RegisterSlave.prototype.registerResponse;\n  }\n\n  registerResponse() {\n    if (this.onResult) {\n      process.nextTick(this.onResult.bind(this));\n    }\n    return null;\n  }\n}\n\nmodule.exports = RegisterSlave;\n"]},"metadata":{},"sourceType":"script"}