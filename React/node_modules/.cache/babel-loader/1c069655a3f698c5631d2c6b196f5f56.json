{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\n/**\n * Get the path to this parameter's value as a dotted string (a.b.c).\n * @param parameter The parameter to get the path string for.\n * @returns The path to this parameter's value as a dotted string.\n */\nexport function getPathStringFromParameter(parameter) {\n  return getPathStringFromParameterPath(parameter.parameterPath, parameter.mapper);\n}\nexport function getPathStringFromParameterPath(parameterPath, mapper) {\n  var result;\n\n  if (typeof parameterPath === \"string\") {\n    result = parameterPath;\n  } else if (Array.isArray(parameterPath)) {\n    result = parameterPath.join(\".\");\n  } else {\n    result = mapper.serializedName;\n  }\n\n  return result;\n}","map":{"version":3,"sources":["../../lib/operationParameter.ts"],"names":[],"mappings":"AAAA;AACA;;AAkDA;;;;;AAKA,OAAM,SAAU,0BAAV,CAAqC,SAArC,EAAkE;AACtE,SAAO,8BAA8B,CAAC,SAAS,CAAC,aAAX,EAA0B,SAAS,CAAC,MAApC,CAArC;AACD;AAED,OAAM,SAAU,8BAAV,CAAyC,aAAzC,EAAuE,MAAvE,EAAqF;AACzF,MAAI,MAAJ;;AACA,MAAI,OAAO,aAAP,KAAyB,QAA7B,EAAuC;AACrC,IAAA,MAAM,GAAG,aAAT;AACD,GAFD,MAEO,IAAI,KAAK,CAAC,OAAN,CAAc,aAAd,CAAJ,EAAkC;AACvC,IAAA,MAAM,GAAG,aAAa,CAAC,IAAd,CAAmB,GAAnB,CAAT;AACD,GAFM,MAEA;AACL,IAAA,MAAM,GAAG,MAAM,CAAC,cAAhB;AACD;;AACD,SAAO,MAAP;AACD","sourceRoot":"","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n/**\n * Get the path to this parameter's value as a dotted string (a.b.c).\n * @param parameter The parameter to get the path string for.\n * @returns The path to this parameter's value as a dotted string.\n */\nexport function getPathStringFromParameter(parameter) {\n    return getPathStringFromParameterPath(parameter.parameterPath, parameter.mapper);\n}\nexport function getPathStringFromParameterPath(parameterPath, mapper) {\n    var result;\n    if (typeof parameterPath === \"string\") {\n        result = parameterPath;\n    }\n    else if (Array.isArray(parameterPath)) {\n        result = parameterPath.join(\".\");\n    }\n    else {\n        result = mapper.serializedName;\n    }\n    return result;\n}\n//# sourceMappingURL=operationParameter.js.map"]},"metadata":{},"sourceType":"module"}