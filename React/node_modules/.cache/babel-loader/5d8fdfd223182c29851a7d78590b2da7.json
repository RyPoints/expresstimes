{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst Image = {\n  id: 0x22,\n  type: 'IMAGE',\n  name: 'Image',\n  hasTableName: true,\n  declaration: function declaration() {\n    return 'image';\n  },\n  resolveLength: function resolveLength(parameter) {\n    if (parameter.value != null) {\n      const value = parameter.value; // TODO: Temporary solution. Replace 'any' more with specific type;\n\n      return value.length;\n    } else {\n      return -1;\n    }\n  },\n  writeTypeInfo: function writeTypeInfo(buffer, parameter) {\n    buffer.writeUInt8(this.id);\n    buffer.writeInt32LE(parameter.length);\n  },\n  writeParameterData: function writeParameterData(buffer, parameter, options, cb) {\n    if (parameter.value != null) {\n      buffer.writeInt32LE(parameter.length);\n      buffer.writeBuffer(parameter.value);\n    } else {\n      buffer.writeInt32LE(parameter.length);\n    }\n\n    cb();\n  },\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (!Buffer.isBuffer(value)) {\n      return new TypeError('Invalid buffer.');\n    }\n\n    return value;\n  }\n};\nvar _default = Image;\nexports.default = _default;\nmodule.exports = Image;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/node_modules/tedious/lib/data-types/image.js"],"names":["Object","defineProperty","exports","value","default","Image","id","type","name","hasTableName","declaration","resolveLength","parameter","length","writeTypeInfo","buffer","writeUInt8","writeInt32LE","writeParameterData","options","cb","writeBuffer","validate","Buffer","isBuffer","TypeError","_default","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;AACA,MAAMC,KAAK,GAAG;AACZC,EAAAA,EAAE,EAAE,IADQ;AAEZC,EAAAA,IAAI,EAAE,OAFM;AAGZC,EAAAA,IAAI,EAAE,OAHM;AAIZC,EAAAA,YAAY,EAAE,IAJF;AAKZC,EAAAA,WAAW,EAAE,SAASA,WAAT,GAAuB;AAClC,WAAO,OAAP;AACD,GAPW;AAQZC,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBC,SAAvB,EAAkC;AAC/C,QAAIA,SAAS,CAACT,KAAV,IAAmB,IAAvB,EAA6B;AAC3B,YAAMA,KAAK,GAAGS,SAAS,CAACT,KAAxB,CAD2B,CACI;;AAE/B,aAAOA,KAAK,CAACU,MAAb;AACD,KAJD,MAIO;AACL,aAAO,CAAC,CAAR;AACD;AACF,GAhBW;AAiBZC,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBC,MAAvB,EAA+BH,SAA/B,EAA0C;AACvDG,IAAAA,MAAM,CAACC,UAAP,CAAkB,KAAKV,EAAvB;AACAS,IAAAA,MAAM,CAACE,YAAP,CAAoBL,SAAS,CAACC,MAA9B;AACD,GApBW;AAqBZK,EAAAA,kBAAkB,EAAE,SAASA,kBAAT,CAA4BH,MAA5B,EAAoCH,SAApC,EAA+CO,OAA/C,EAAwDC,EAAxD,EAA4D;AAC9E,QAAIR,SAAS,CAACT,KAAV,IAAmB,IAAvB,EAA6B;AAC3BY,MAAAA,MAAM,CAACE,YAAP,CAAoBL,SAAS,CAACC,MAA9B;AACAE,MAAAA,MAAM,CAACM,WAAP,CAAmBT,SAAS,CAACT,KAA7B;AACD,KAHD,MAGO;AACLY,MAAAA,MAAM,CAACE,YAAP,CAAoBL,SAAS,CAACC,MAA9B;AACD;;AAEDO,IAAAA,EAAE;AACH,GA9BW;AA+BZE,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBnB,KAAlB,EAAyB;AACjC,QAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,aAAO,IAAP;AACD;;AAED,QAAI,CAACoB,MAAM,CAACC,QAAP,CAAgBrB,KAAhB,CAAL,EAA6B;AAC3B,aAAO,IAAIsB,SAAJ,CAAc,iBAAd,CAAP;AACD;;AAED,WAAOtB,KAAP;AACD;AAzCW,CAAd;AA2CA,IAAIuB,QAAQ,GAAGrB,KAAf;AACAH,OAAO,CAACE,OAAR,GAAkBsB,QAAlB;AACAC,MAAM,CAACzB,OAAP,GAAiBG,KAAjB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nconst Image = {\n  id: 0x22,\n  type: 'IMAGE',\n  name: 'Image',\n  hasTableName: true,\n  declaration: function declaration() {\n    return 'image';\n  },\n  resolveLength: function resolveLength(parameter) {\n    if (parameter.value != null) {\n      const value = parameter.value; // TODO: Temporary solution. Replace 'any' more with specific type;\n\n      return value.length;\n    } else {\n      return -1;\n    }\n  },\n  writeTypeInfo: function writeTypeInfo(buffer, parameter) {\n    buffer.writeUInt8(this.id);\n    buffer.writeInt32LE(parameter.length);\n  },\n  writeParameterData: function writeParameterData(buffer, parameter, options, cb) {\n    if (parameter.value != null) {\n      buffer.writeInt32LE(parameter.length);\n      buffer.writeBuffer(parameter.value);\n    } else {\n      buffer.writeInt32LE(parameter.length);\n    }\n\n    cb();\n  },\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (!Buffer.isBuffer(value)) {\n      return new TypeError('Invalid buffer.');\n    }\n\n    return value;\n  }\n};\nvar _default = Image;\nexports.default = _default;\nmodule.exports = Image;"]},"metadata":{},"sourceType":"script"}