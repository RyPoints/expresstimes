{"ast":null,"code":"module.exports = MultiLineString;\n\nvar util = require('util');\n\nvar Types = require('./types');\n\nvar Geometry = require('./geometry');\n\nvar Point = require('./point');\n\nvar LineString = require('./linestring');\n\nvar BinaryWriter = require('./binarywriter');\n\nfunction MultiLineString(lineStrings, srid) {\n  Geometry.call(this);\n  this.lineStrings = lineStrings || [];\n  this.srid = srid;\n\n  if (this.lineStrings.length > 0) {\n    this.hasZ = this.lineStrings[0].hasZ;\n    this.hasM = this.lineStrings[0].hasM;\n  }\n}\n\nutil.inherits(MultiLineString, Geometry);\n\nMultiLineString.Z = function (lineStrings, srid) {\n  var multiLineString = new MultiLineString(lineStrings, srid);\n  multiLineString.hasZ = true;\n  return multiLineString;\n};\n\nMultiLineString.M = function (lineStrings, srid) {\n  var multiLineString = new MultiLineString(lineStrings, srid);\n  multiLineString.hasM = true;\n  return multiLineString;\n};\n\nMultiLineString.ZM = function (lineStrings, srid) {\n  var multiLineString = new MultiLineString(lineStrings, srid);\n  multiLineString.hasZ = true;\n  multiLineString.hasM = true;\n  return multiLineString;\n};\n\nMultiLineString._parseWkt = function (value, options) {\n  var multiLineString = new MultiLineString();\n  multiLineString.srid = options.srid;\n  multiLineString.hasZ = options.hasZ;\n  multiLineString.hasM = options.hasM;\n  if (value.isMatch(['EMPTY'])) return multiLineString;\n  value.expectGroupStart();\n\n  do {\n    value.expectGroupStart();\n    multiLineString.lineStrings.push(new LineString(value.matchCoordinates(options)));\n    value.expectGroupEnd();\n  } while (value.isMatch([',']));\n\n  value.expectGroupEnd();\n  return multiLineString;\n};\n\nMultiLineString._parseWkb = function (value, options) {\n  var multiLineString = new MultiLineString();\n  multiLineString.srid = options.srid;\n  multiLineString.hasZ = options.hasZ;\n  multiLineString.hasM = options.hasM;\n  var lineStringCount = value.readUInt32();\n\n  for (var i = 0; i < lineStringCount; i++) multiLineString.lineStrings.push(Geometry.parse(value, options));\n\n  return multiLineString;\n};\n\nMultiLineString._parseTwkb = function (value, options) {\n  var multiLineString = new MultiLineString();\n  multiLineString.hasZ = options.hasZ;\n  multiLineString.hasM = options.hasM;\n  if (options.isEmpty) return multiLineString;\n  var previousPoint = new Point(0, 0, options.hasZ ? 0 : undefined, options.hasM ? 0 : undefined);\n  var lineStringCount = value.readVarInt();\n\n  for (var i = 0; i < lineStringCount; i++) {\n    var lineString = new LineString();\n    lineString.hasZ = options.hasZ;\n    lineString.hasM = options.hasM;\n    var pointCount = value.readVarInt();\n\n    for (var j = 0; j < pointCount; j++) lineString.points.push(Point._readTwkbPoint(value, options, previousPoint));\n\n    multiLineString.lineStrings.push(lineString);\n  }\n\n  return multiLineString;\n};\n\nMultiLineString._parseGeoJSON = function (value) {\n  var multiLineString = new MultiLineString();\n  if (value.coordinates.length > 0 && value.coordinates[0].length > 0) multiLineString.hasZ = value.coordinates[0][0].length > 2;\n\n  for (var i = 0; i < value.coordinates.length; i++) multiLineString.lineStrings.push(LineString._parseGeoJSON({\n    coordinates: value.coordinates[i]\n  }));\n\n  return multiLineString;\n};\n\nMultiLineString.prototype.toWkt = function () {\n  if (this.lineStrings.length === 0) return this._getWktType(Types.wkt.MultiLineString, true);\n  var wkt = this._getWktType(Types.wkt.MultiLineString, false) + '(';\n\n  for (var i = 0; i < this.lineStrings.length; i++) wkt += this.lineStrings[i]._toInnerWkt() + ',';\n\n  wkt = wkt.slice(0, -1);\n  wkt += ')';\n  return wkt;\n};\n\nMultiLineString.prototype.toWkb = function () {\n  var wkb = new BinaryWriter(this._getWkbSize());\n  wkb.writeInt8(1);\n\n  this._writeWkbType(wkb, Types.wkb.MultiLineString);\n\n  wkb.writeUInt32LE(this.lineStrings.length);\n\n  for (var i = 0; i < this.lineStrings.length; i++) wkb.writeBuffer(this.lineStrings[i].toWkb({\n    srid: this.srid\n  }));\n\n  return wkb.buffer;\n};\n\nMultiLineString.prototype.toTwkb = function () {\n  var twkb = new BinaryWriter(0, true);\n  var precision = Geometry.getTwkbPrecision(5, 0, 0);\n  var isEmpty = this.lineStrings.length === 0;\n\n  this._writeTwkbHeader(twkb, Types.wkb.MultiLineString, precision, isEmpty);\n\n  if (this.lineStrings.length > 0) {\n    twkb.writeVarInt(this.lineStrings.length);\n    var previousPoint = new Point(0, 0, 0, 0);\n\n    for (var i = 0; i < this.lineStrings.length; i++) {\n      twkb.writeVarInt(this.lineStrings[i].points.length);\n\n      for (var j = 0; j < this.lineStrings[i].points.length; j++) this.lineStrings[i].points[j]._writeTwkbPoint(twkb, precision, previousPoint);\n    }\n  }\n\n  return twkb.buffer;\n};\n\nMultiLineString.prototype._getWkbSize = function () {\n  var size = 1 + 4 + 4;\n\n  for (var i = 0; i < this.lineStrings.length; i++) size += this.lineStrings[i]._getWkbSize();\n\n  return size;\n};\n\nMultiLineString.prototype.toGeoJSON = function (options) {\n  var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\n  geoJSON.type = Types.geoJSON.MultiLineString;\n  geoJSON.coordinates = [];\n\n  for (var i = 0; i < this.lineStrings.length; i++) geoJSON.coordinates.push(this.lineStrings[i].toGeoJSON().coordinates);\n\n  return geoJSON;\n};","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/node_modules/wkx/lib/multilinestring.js"],"names":["module","exports","MultiLineString","util","require","Types","Geometry","Point","LineString","BinaryWriter","lineStrings","srid","call","length","hasZ","hasM","inherits","Z","multiLineString","M","ZM","_parseWkt","value","options","isMatch","expectGroupStart","push","matchCoordinates","expectGroupEnd","_parseWkb","lineStringCount","readUInt32","i","parse","_parseTwkb","isEmpty","previousPoint","undefined","readVarInt","lineString","pointCount","j","points","_readTwkbPoint","_parseGeoJSON","coordinates","prototype","toWkt","_getWktType","wkt","_toInnerWkt","slice","toWkb","wkb","_getWkbSize","writeInt8","_writeWkbType","writeUInt32LE","writeBuffer","buffer","toTwkb","twkb","precision","getTwkbPrecision","_writeTwkbHeader","writeVarInt","_writeTwkbPoint","size","toGeoJSON","geoJSON","type"],"mappings":"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","sourcesContent":["module.exports = MultiLineString;\r\n\r\nvar util = require('util');\r\n\r\nvar Types = require('./types');\r\nvar Geometry = require('./geometry');\r\nvar Point = require('./point');\r\nvar LineString = require('./linestring');\r\nvar BinaryWriter = require('./binarywriter');\r\n\r\nfunction MultiLineString(lineStrings, srid) {\r\n    Geometry.call(this);\r\n\r\n    this.lineStrings = lineStrings || [];\r\n\tthis.srid = srid;\r\n\r\n    if (this.lineStrings.length > 0) {\r\n        this.hasZ = this.lineStrings[0].hasZ;\r\n        this.hasM = this.lineStrings[0].hasM;\r\n    }\r\n}\r\n\r\nutil.inherits(MultiLineString, Geometry);\r\n\r\nMultiLineString.Z = function (lineStrings, srid) {\r\n    var multiLineString = new MultiLineString(lineStrings, srid);\r\n    multiLineString.hasZ = true;\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString.M = function (lineStrings, srid) {\r\n    var multiLineString = new MultiLineString(lineStrings, srid);\r\n    multiLineString.hasM = true;\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString.ZM = function (lineStrings, srid) {\r\n    var multiLineString = new MultiLineString(lineStrings, srid);\r\n    multiLineString.hasZ = true;\r\n    multiLineString.hasM = true;\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString._parseWkt = function (value, options) {\r\n    var multiLineString = new MultiLineString();\r\n    multiLineString.srid = options.srid;\r\n    multiLineString.hasZ = options.hasZ;\r\n    multiLineString.hasM = options.hasM;\r\n\r\n    if (value.isMatch(['EMPTY']))\r\n        return multiLineString;\r\n\r\n    value.expectGroupStart();\r\n\r\n    do {\r\n        value.expectGroupStart();\r\n        multiLineString.lineStrings.push(new LineString(value.matchCoordinates(options)));\r\n        value.expectGroupEnd();\r\n    } while (value.isMatch([',']));\r\n\r\n    value.expectGroupEnd();\r\n\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString._parseWkb = function (value, options) {\r\n    var multiLineString = new MultiLineString();\r\n    multiLineString.srid = options.srid;\r\n    multiLineString.hasZ = options.hasZ;\r\n    multiLineString.hasM = options.hasM;\r\n\r\n    var lineStringCount = value.readUInt32();\r\n\r\n    for (var i = 0; i < lineStringCount; i++)\r\n        multiLineString.lineStrings.push(Geometry.parse(value, options));\r\n\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString._parseTwkb = function (value, options) {\r\n    var multiLineString = new MultiLineString();\r\n    multiLineString.hasZ = options.hasZ;\r\n    multiLineString.hasM = options.hasM;\r\n\r\n    if (options.isEmpty)\r\n        return multiLineString;\r\n\r\n    var previousPoint = new Point(0, 0, options.hasZ ? 0 : undefined, options.hasM ? 0 : undefined);\r\n    var lineStringCount = value.readVarInt();\r\n\r\n    for (var i = 0; i < lineStringCount; i++) {\r\n        var lineString = new LineString();\r\n        lineString.hasZ = options.hasZ;\r\n        lineString.hasM = options.hasM;\r\n\r\n        var pointCount = value.readVarInt();\r\n\r\n        for (var j = 0; j < pointCount; j++)\r\n            lineString.points.push(Point._readTwkbPoint(value, options, previousPoint));\r\n\r\n        multiLineString.lineStrings.push(lineString);\r\n    }\r\n\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString._parseGeoJSON = function (value) {\r\n    var multiLineString = new MultiLineString();\r\n\r\n    if (value.coordinates.length > 0 && value.coordinates[0].length > 0)\r\n        multiLineString.hasZ = value.coordinates[0][0].length > 2;\r\n\r\n    for (var i = 0; i < value.coordinates.length; i++)\r\n        multiLineString.lineStrings.push(LineString._parseGeoJSON({ coordinates: value.coordinates[i] }));\r\n\r\n    return multiLineString;\r\n};\r\n\r\nMultiLineString.prototype.toWkt = function () {\r\n    if (this.lineStrings.length === 0)\r\n        return this._getWktType(Types.wkt.MultiLineString, true);\r\n\r\n    var wkt = this._getWktType(Types.wkt.MultiLineString, false) + '(';\r\n\r\n    for (var i = 0; i < this.lineStrings.length; i++)\r\n        wkt += this.lineStrings[i]._toInnerWkt() + ',';\r\n\r\n    wkt = wkt.slice(0, -1);\r\n    wkt += ')';\r\n\r\n    return wkt;\r\n};\r\n\r\nMultiLineString.prototype.toWkb = function () {\r\n    var wkb = new BinaryWriter(this._getWkbSize());\r\n\r\n    wkb.writeInt8(1);\r\n\r\n    this._writeWkbType(wkb, Types.wkb.MultiLineString);\r\n    wkb.writeUInt32LE(this.lineStrings.length);\r\n\r\n    for (var i = 0; i < this.lineStrings.length; i++)\r\n        wkb.writeBuffer(this.lineStrings[i].toWkb({ srid: this.srid }));\r\n\r\n    return wkb.buffer;\r\n};\r\n\r\nMultiLineString.prototype.toTwkb = function () {\r\n    var twkb = new BinaryWriter(0, true);\r\n\r\n    var precision = Geometry.getTwkbPrecision(5, 0, 0);\r\n    var isEmpty = this.lineStrings.length === 0;\r\n\r\n    this._writeTwkbHeader(twkb, Types.wkb.MultiLineString, precision, isEmpty);\r\n\r\n    if (this.lineStrings.length > 0) {\r\n        twkb.writeVarInt(this.lineStrings.length);\r\n\r\n        var previousPoint = new Point(0, 0, 0, 0);\r\n        for (var i = 0; i < this.lineStrings.length; i++) {\r\n            twkb.writeVarInt(this.lineStrings[i].points.length);\r\n\r\n            for (var j = 0; j < this.lineStrings[i].points.length; j++)\r\n                this.lineStrings[i].points[j]._writeTwkbPoint(twkb, precision, previousPoint);\r\n        }\r\n    }\r\n\r\n    return twkb.buffer;\r\n};\r\n\r\nMultiLineString.prototype._getWkbSize = function () {\r\n    var size = 1 + 4 + 4;\r\n\r\n    for (var i = 0; i < this.lineStrings.length; i++)\r\n        size += this.lineStrings[i]._getWkbSize();\r\n\r\n    return size;\r\n};\r\n\r\nMultiLineString.prototype.toGeoJSON = function (options) {\r\n    var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\r\n    geoJSON.type = Types.geoJSON.MultiLineString;\r\n    geoJSON.coordinates = [];\r\n\r\n    for (var i = 0; i < this.lineStrings.length; i++)\r\n        geoJSON.coordinates.push(this.lineStrings[i].toGeoJSON().coordinates);\r\n\r\n    return geoJSON;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}