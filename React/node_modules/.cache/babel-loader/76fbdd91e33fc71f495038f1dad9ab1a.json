{"ast":null,"code":"'use strict';\n\nvar lodash = require('lodash');\n\nvar isPromise = require('is-promise');\n\nmodule.exports = function (adapter) {\n  if (typeof adapter !== 'object') {\n    throw new Error('An adapter must be provided, see https://github.com/typicode/lowdb/#usage');\n  } // Create a fresh copy of lodash\n\n\n  var _ = lodash.runInContext();\n\n  var db = _.chain({}); // Add write function to lodash\n  // Calls save before returning result\n\n\n  _.prototype.write = _.wrap(_.prototype.value, function (func) {\n    var funcRes = func.apply(this);\n    return db.write(funcRes);\n  });\n\n  function plant(state) {\n    db.__wrapped__ = state;\n    return db;\n  } // Lowdb API\n  // Expose _ for mixins\n\n\n  db._ = _;\n\n  db.read = function () {\n    var r = adapter.read();\n    return isPromise(r) ? r.then(plant) : plant(r);\n  };\n\n  db.write = function (returnValue) {\n    var w = adapter.write(db.getState());\n    return isPromise(w) ? w.then(function () {\n      return returnValue;\n    }) : returnValue;\n  };\n\n  db.getState = function () {\n    return db.__wrapped__;\n  };\n\n  db.setState = function (state) {\n    return plant(state);\n  };\n\n  return db.read();\n};","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/node_modules/lowdb/lib/main.js"],"names":["lodash","require","isPromise","module","exports","adapter","Error","_","runInContext","db","chain","prototype","write","wrap","value","func","funcRes","apply","plant","state","__wrapped__","read","r","then","returnValue","w","getState","setState"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,YAAD,CAAvB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAAUC,OAAV,EAAmB;AAClC,MAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,UAAM,IAAIC,KAAJ,CAAU,2EAAV,CAAN;AACD,GAHiC,CAKlC;;;AACA,MAAIC,CAAC,GAAGP,MAAM,CAACQ,YAAP,EAAR;;AACA,MAAIC,EAAE,GAAGF,CAAC,CAACG,KAAF,CAAQ,EAAR,CAAT,CAPkC,CASlC;AACA;;;AACAH,EAAAA,CAAC,CAACI,SAAF,CAAYC,KAAZ,GAAoBL,CAAC,CAACM,IAAF,CAAON,CAAC,CAACI,SAAF,CAAYG,KAAnB,EAA0B,UAAUC,IAAV,EAAgB;AAC5D,QAAIC,OAAO,GAAGD,IAAI,CAACE,KAAL,CAAW,IAAX,CAAd;AACA,WAAOR,EAAE,CAACG,KAAH,CAASI,OAAT,CAAP;AACD,GAHmB,CAApB;;AAKA,WAASE,KAAT,CAAeC,KAAf,EAAsB;AACpBV,IAAAA,EAAE,CAACW,WAAH,GAAiBD,KAAjB;AACA,WAAOV,EAAP;AACD,GAnBiC,CAqBlC;AACA;;;AACAA,EAAAA,EAAE,CAACF,CAAH,GAAOA,CAAP;;AAEAE,EAAAA,EAAE,CAACY,IAAH,GAAU,YAAY;AACpB,QAAIC,CAAC,GAAGjB,OAAO,CAACgB,IAAR,EAAR;AACA,WAAOnB,SAAS,CAACoB,CAAD,CAAT,GAAeA,CAAC,CAACC,IAAF,CAAOL,KAAP,CAAf,GAA+BA,KAAK,CAACI,CAAD,CAA3C;AACD,GAHD;;AAKAb,EAAAA,EAAE,CAACG,KAAH,GAAW,UAAUY,WAAV,EAAuB;AAChC,QAAIC,CAAC,GAAGpB,OAAO,CAACO,KAAR,CAAcH,EAAE,CAACiB,QAAH,EAAd,CAAR;AACA,WAAOxB,SAAS,CAACuB,CAAD,CAAT,GAAeA,CAAC,CAACF,IAAF,CAAO,YAAY;AACvC,aAAOC,WAAP;AACD,KAFqB,CAAf,GAEFA,WAFL;AAGD,GALD;;AAOAf,EAAAA,EAAE,CAACiB,QAAH,GAAc,YAAY;AACxB,WAAOjB,EAAE,CAACW,WAAV;AACD,GAFD;;AAIAX,EAAAA,EAAE,CAACkB,QAAH,GAAc,UAAUR,KAAV,EAAiB;AAC7B,WAAOD,KAAK,CAACC,KAAD,CAAZ;AACD,GAFD;;AAIA,SAAOV,EAAE,CAACY,IAAH,EAAP;AACD,CA9CD","sourcesContent":["'use strict';\n\nvar lodash = require('lodash');\nvar isPromise = require('is-promise');\n\nmodule.exports = function (adapter) {\n  if (typeof adapter !== 'object') {\n    throw new Error('An adapter must be provided, see https://github.com/typicode/lowdb/#usage');\n  }\n\n  // Create a fresh copy of lodash\n  var _ = lodash.runInContext();\n  var db = _.chain({});\n\n  // Add write function to lodash\n  // Calls save before returning result\n  _.prototype.write = _.wrap(_.prototype.value, function (func) {\n    var funcRes = func.apply(this);\n    return db.write(funcRes);\n  });\n\n  function plant(state) {\n    db.__wrapped__ = state;\n    return db;\n  }\n\n  // Lowdb API\n  // Expose _ for mixins\n  db._ = _;\n\n  db.read = function () {\n    var r = adapter.read();\n    return isPromise(r) ? r.then(plant) : plant(r);\n  };\n\n  db.write = function (returnValue) {\n    var w = adapter.write(db.getState());\n    return isPromise(w) ? w.then(function () {\n      return returnValue;\n    }) : returnValue;\n  };\n\n  db.getState = function () {\n    return db.__wrapped__;\n  };\n\n  db.setState = function (state) {\n    return plant(state);\n  };\n\n  return db.read();\n};"]},"metadata":{},"sourceType":"script"}