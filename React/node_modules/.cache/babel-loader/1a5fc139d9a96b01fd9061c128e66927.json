{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _sprintfJs = require(\"sprintf-js\");\n\nconst FLAGS_1 = {\n  ENDIAN_LITTLE: 0x00,\n  ENDIAN_BIG: 0x01,\n  CHARSET_ASCII: 0x00,\n  CHARSET_EBCDIC: 0x02,\n  FLOAT_IEEE_754: 0x00,\n  FLOAT_VAX: 0x04,\n  FLOAT_ND5000: 0x08,\n  BCP_DUMPLOAD_ON: 0x00,\n  BCP_DUMPLOAD_OFF: 0x10,\n  USE_DB_ON: 0x00,\n  USE_DB_OFF: 0x20,\n  INIT_DB_WARN: 0x00,\n  INIT_DB_FATAL: 0x40,\n  SET_LANG_WARN_OFF: 0x00,\n  SET_LANG_WARN_ON: 0x80\n};\nconst FLAGS_2 = {\n  INIT_LANG_WARN: 0x00,\n  INIT_LANG_FATAL: 0x01,\n  ODBC_OFF: 0x00,\n  ODBC_ON: 0x02,\n  F_TRAN_BOUNDARY: 0x04,\n  F_CACHE_CONNECT: 0x08,\n  USER_NORMAL: 0x00,\n  USER_SERVER: 0x10,\n  USER_REMUSER: 0x20,\n  USER_SQLREPL: 0x40,\n  INTEGRATED_SECURITY_OFF: 0x00,\n  INTEGRATED_SECURITY_ON: 0x80\n};\nconst TYPE_FLAGS = {\n  SQL_DFLT: 0x00,\n  SQL_TSQL: 0x08,\n  OLEDB_OFF: 0x00,\n  OLEDB_ON: 0x10,\n  READ_WRITE_INTENT: 0x00,\n  READ_ONLY_INTENT: 0x20\n};\nconst FLAGS_3 = {\n  CHANGE_PASSWORD_NO: 0x00,\n  CHANGE_PASSWORD_YES: 0x01,\n  BINARY_XML: 0x02,\n  SPAWN_USER_INSTANCE: 0x04,\n  UNKNOWN_COLLATION_HANDLING: 0x08,\n  EXTENSION_USED: 0x10\n};\nconst FEDAUTH_OPTIONS = {\n  FEATURE_ID: 0x02,\n  LIBRARY_SECURITYTOKEN: 0x01,\n  LIBRARY_ADAL: 0x02,\n  FEDAUTH_YES_ECHO: 0x01,\n  FEDAUTH_NO_ECHO: 0x00,\n  ADAL_WORKFLOW_USER_PASS: 0x01,\n  ADAL_WORKFLOW_INTEGRATED: 0x02\n};\nconst FEATURE_EXT_TERMINATOR = 0xFF;\n/*\n  s2.2.6.3\n */\n\nclass Login7Payload {\n  constructor({\n    tdsVersion,\n    packetSize,\n    clientProgVer,\n    clientPid,\n    connectionId,\n    clientTimeZone,\n    clientLcid\n  }) {\n    this.tdsVersion = tdsVersion;\n    this.packetSize = packetSize;\n    this.clientProgVer = clientProgVer;\n    this.clientPid = clientPid;\n    this.connectionId = connectionId;\n    this.clientTimeZone = clientTimeZone;\n    this.clientLcid = clientLcid;\n    this.readOnlyIntent = false;\n    this.initDbFatal = false;\n    this.fedAuth = undefined;\n    this.userName = undefined;\n    this.password = undefined;\n    this.serverName = undefined;\n    this.appName = undefined;\n    this.hostname = undefined;\n    this.libraryName = undefined;\n    this.language = undefined;\n    this.database = undefined;\n    this.clientId = undefined;\n    this.sspi = undefined;\n    this.attachDbFile = undefined;\n    this.changePassword = undefined;\n  }\n\n  toBuffer() {\n    const fixedData = Buffer.alloc(94);\n    const buffers = [fixedData];\n    let offset = 0;\n    let dataOffset = fixedData.length; // Length: 4-byte\n\n    offset = fixedData.writeUInt32LE(0, offset); // TDSVersion: 4-byte\n\n    offset = fixedData.writeUInt32LE(this.tdsVersion, offset); // PacketSize: 4-byte\n\n    offset = fixedData.writeUInt32LE(this.packetSize, offset); // ClientProgVer: 4-byte\n\n    offset = fixedData.writeUInt32LE(this.clientProgVer, offset); // ClientPID: 4-byte\n\n    offset = fixedData.writeUInt32LE(this.clientPid, offset); // ConnectionID: 4-byte\n\n    offset = fixedData.writeUInt32LE(this.connectionId, offset); // OptionFlags1: 1-byte\n\n    offset = fixedData.writeUInt8(this.buildOptionFlags1(), offset); // OptionFlags2: 1-byte\n\n    offset = fixedData.writeUInt8(this.buildOptionFlags2(), offset); // TypeFlags: 1-byte\n\n    offset = fixedData.writeUInt8(this.buildTypeFlags(), offset); // OptionFlags3: 1-byte\n\n    offset = fixedData.writeUInt8(this.buildOptionFlags3(), offset); // ClientTimZone: 4-byte\n\n    offset = fixedData.writeInt32LE(this.clientTimeZone, offset); // ClientLCID: 4-byte\n\n    offset = fixedData.writeUInt32LE(this.clientLcid, offset); // ibHostName: 2-byte\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchHostName: 2-byte\n\n    if (this.hostname) {\n      const buffer = Buffer.from(this.hostname, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(dataOffset, offset);\n    } // ibUserName: 2-byte\n\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchUserName: 2-byte\n\n    if (this.userName) {\n      const buffer = Buffer.from(this.userName, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ibPassword: 2-byte\n\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchPassword: 2-byte\n\n    if (this.password) {\n      const buffer = Buffer.from(this.password, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(this.scramblePassword(buffer));\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ibAppName: 2-byte\n\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchAppName: 2-byte\n\n    if (this.appName) {\n      const buffer = Buffer.from(this.appName, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ibServerName: 2-byte\n\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchServerName: 2-byte\n\n    if (this.serverName) {\n      const buffer = Buffer.from(this.serverName, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // (ibUnused / ibExtension): 2-byte\n\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // (cchUnused / cbExtension): 2-byte\n\n    const extensions = this.buildFeatureExt();\n    offset = fixedData.writeUInt16LE(4, offset);\n    const extensionOffset = Buffer.alloc(4);\n    extensionOffset.writeUInt32LE(dataOffset += 4, 0);\n    dataOffset += extensions.length;\n    buffers.push(extensionOffset, extensions); // ibCltIntName: 2-byte\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchCltIntName: 2-byte\n\n    if (this.libraryName) {\n      const buffer = Buffer.from(this.libraryName, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ibLanguage: 2-byte\n\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchLanguage: 2-byte\n\n    if (this.language) {\n      const buffer = Buffer.from(this.language, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ibDatabase: 2-byte\n\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchDatabase: 2-byte\n\n    if (this.database) {\n      const buffer = Buffer.from(this.database, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ClientID: 6-byte\n\n\n    if (this.clientId) {\n      this.clientId.copy(fixedData, offset, 0, 6);\n    }\n\n    offset += 6; // ibSSPI: 2-byte\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cbSSPI: 2-byte\n\n    if (this.sspi) {\n      if (this.sspi.length > 65535) {\n        offset = fixedData.writeUInt16LE(65535, offset);\n      } else {\n        offset = fixedData.writeUInt16LE(this.sspi.length, offset);\n      }\n\n      buffers.push(this.sspi);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ibAtchDBFile: 2-byte\n\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchAtchDBFile: 2-byte\n\n    if (this.attachDbFile) {\n      const buffer = Buffer.from(this.attachDbFile, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ibChangePassword: 2-byte\n\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchChangePassword: 2-byte\n\n    if (this.changePassword) {\n      const buffer = Buffer.from(this.changePassword, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // cbSSPILong: 4-byte\n\n\n    if (this.sspi && this.sspi.length > 65535) {\n      fixedData.writeUInt32LE(this.sspi.length, offset);\n    } else {\n      fixedData.writeUInt32LE(0, offset);\n    }\n\n    const data = Buffer.concat(buffers);\n    data.writeUInt32LE(data.length, 0);\n    return data;\n  }\n\n  buildOptionFlags1() {\n    let flags1 = FLAGS_1.ENDIAN_LITTLE | FLAGS_1.CHARSET_ASCII | FLAGS_1.FLOAT_IEEE_754 | FLAGS_1.BCP_DUMPLOAD_OFF | FLAGS_1.USE_DB_OFF | FLAGS_1.SET_LANG_WARN_ON;\n\n    if (this.initDbFatal) {\n      flags1 |= FLAGS_1.INIT_DB_FATAL;\n    } else {\n      flags1 |= FLAGS_1.INIT_DB_WARN;\n    }\n\n    return flags1;\n  }\n\n  buildFeatureExt() {\n    const buffers = [];\n    const fedAuth = this.fedAuth;\n\n    if (fedAuth) {\n      switch (fedAuth.type) {\n        case 'ADAL':\n          const buffer = Buffer.alloc(7);\n          buffer.writeUInt8(FEDAUTH_OPTIONS.FEATURE_ID, 0);\n          buffer.writeUInt32LE(2, 1);\n          buffer.writeUInt8(FEDAUTH_OPTIONS.LIBRARY_ADAL << 1 | (fedAuth.echo ? FEDAUTH_OPTIONS.FEDAUTH_YES_ECHO : FEDAUTH_OPTIONS.FEDAUTH_NO_ECHO), 5);\n          buffer.writeUInt8(fedAuth.workflow === 'integrated' ? 0x02 : FEDAUTH_OPTIONS.ADAL_WORKFLOW_USER_PASS, 6);\n          buffers.push(buffer);\n          break;\n\n        case 'SECURITYTOKEN':\n          const token = Buffer.from(fedAuth.fedAuthToken, 'ucs2');\n          const buf = Buffer.alloc(10);\n          let offset = 0;\n          offset = buf.writeUInt8(FEDAUTH_OPTIONS.FEATURE_ID, offset);\n          offset = buf.writeUInt32LE(token.length + 4 + 1, offset);\n          offset = buf.writeUInt8(FEDAUTH_OPTIONS.LIBRARY_SECURITYTOKEN << 1 | (fedAuth.echo ? FEDAUTH_OPTIONS.FEDAUTH_YES_ECHO : FEDAUTH_OPTIONS.FEDAUTH_NO_ECHO), offset);\n          buf.writeInt32LE(token.length, offset);\n          buffers.push(buf);\n          buffers.push(token);\n          break;\n      }\n    }\n\n    buffers.push(Buffer.from([FEATURE_EXT_TERMINATOR]));\n    return Buffer.concat(buffers);\n  }\n\n  buildOptionFlags2() {\n    let flags2 = FLAGS_2.INIT_LANG_WARN | FLAGS_2.ODBC_OFF | FLAGS_2.USER_NORMAL;\n\n    if (this.sspi) {\n      flags2 |= FLAGS_2.INTEGRATED_SECURITY_ON;\n    } else {\n      flags2 |= FLAGS_2.INTEGRATED_SECURITY_OFF;\n    }\n\n    return flags2;\n  }\n\n  buildTypeFlags() {\n    let typeFlags = TYPE_FLAGS.SQL_DFLT | TYPE_FLAGS.OLEDB_OFF;\n\n    if (this.readOnlyIntent) {\n      typeFlags |= TYPE_FLAGS.READ_ONLY_INTENT;\n    } else {\n      typeFlags |= TYPE_FLAGS.READ_WRITE_INTENT;\n    }\n\n    return typeFlags;\n  }\n\n  buildOptionFlags3() {\n    return FLAGS_3.CHANGE_PASSWORD_NO | FLAGS_3.UNKNOWN_COLLATION_HANDLING | FLAGS_3.EXTENSION_USED;\n  }\n\n  scramblePassword(password) {\n    for (let b = 0, len = password.length; b < len; b++) {\n      let byte = password[b];\n      const lowNibble = byte & 0x0f;\n      const highNibble = byte >> 4;\n      byte = lowNibble << 4 | highNibble;\n      byte = byte ^ 0xa5;\n      password[b] = byte;\n    }\n\n    return password;\n  }\n\n  toString(indent = '') {\n    return indent + 'Login7 - ' + (0, _sprintfJs.sprintf)('TDS:0x%08X, PacketSize:0x%08X, ClientProgVer:0x%08X, ClientPID:0x%08X, ConnectionID:0x%08X', this.tdsVersion, this.packetSize, this.clientProgVer, this.clientPid, this.connectionId) + '\\n' + indent + '         ' + (0, _sprintfJs.sprintf)('Flags1:0x%02X, Flags2:0x%02X, TypeFlags:0x%02X, Flags3:0x%02X, ClientTimezone:%d, ClientLCID:0x%08X', this.buildOptionFlags1(), this.buildOptionFlags2(), this.buildTypeFlags(), this.buildOptionFlags3(), this.clientTimeZone, this.clientLcid) + '\\n' + indent + '         ' + (0, _sprintfJs.sprintf)(\"Hostname:'%s', Username:'%s', Password:'%s', AppName:'%s', ServerName:'%s', LibraryName:'%s'\", this.hostname, this.userName, this.password, this.appName, this.serverName, this.libraryName) + '\\n' + indent + '         ' + (0, _sprintfJs.sprintf)(\"Language:'%s', Database:'%s', SSPI:'%s', AttachDbFile:'%s', ChangePassword:'%s'\", this.language, this.database, this.sspi, this.attachDbFile, this.changePassword);\n  }\n\n}\n\nvar _default = Login7Payload;\nexports.default = _default;\nmodule.exports = Login7Payload;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/node_modules/tedious/lib/login7-payload.js"],"names":["Object","defineProperty","exports","value","default","_sprintfJs","require","FLAGS_1","ENDIAN_LITTLE","ENDIAN_BIG","CHARSET_ASCII","CHARSET_EBCDIC","FLOAT_IEEE_754","FLOAT_VAX","FLOAT_ND5000","BCP_DUMPLOAD_ON","BCP_DUMPLOAD_OFF","USE_DB_ON","USE_DB_OFF","INIT_DB_WARN","INIT_DB_FATAL","SET_LANG_WARN_OFF","SET_LANG_WARN_ON","FLAGS_2","INIT_LANG_WARN","INIT_LANG_FATAL","ODBC_OFF","ODBC_ON","F_TRAN_BOUNDARY","F_CACHE_CONNECT","USER_NORMAL","USER_SERVER","USER_REMUSER","USER_SQLREPL","INTEGRATED_SECURITY_OFF","INTEGRATED_SECURITY_ON","TYPE_FLAGS","SQL_DFLT","SQL_TSQL","OLEDB_OFF","OLEDB_ON","READ_WRITE_INTENT","READ_ONLY_INTENT","FLAGS_3","CHANGE_PASSWORD_NO","CHANGE_PASSWORD_YES","BINARY_XML","SPAWN_USER_INSTANCE","UNKNOWN_COLLATION_HANDLING","EXTENSION_USED","FEDAUTH_OPTIONS","FEATURE_ID","LIBRARY_SECURITYTOKEN","LIBRARY_ADAL","FEDAUTH_YES_ECHO","FEDAUTH_NO_ECHO","ADAL_WORKFLOW_USER_PASS","ADAL_WORKFLOW_INTEGRATED","FEATURE_EXT_TERMINATOR","Login7Payload","constructor","tdsVersion","packetSize","clientProgVer","clientPid","connectionId","clientTimeZone","clientLcid","readOnlyIntent","initDbFatal","fedAuth","undefined","userName","password","serverName","appName","hostname","libraryName","language","database","clientId","sspi","attachDbFile","changePassword","toBuffer","fixedData","Buffer","alloc","buffers","offset","dataOffset","length","writeUInt32LE","writeUInt8","buildOptionFlags1","buildOptionFlags2","buildTypeFlags","buildOptionFlags3","writeInt32LE","writeUInt16LE","buffer","from","push","scramblePassword","extensions","buildFeatureExt","extensionOffset","copy","data","concat","flags1","type","echo","workflow","token","fedAuthToken","buf","flags2","typeFlags","b","len","byte","lowNibble","highNibble","toString","indent","sprintf","_default","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAAxB;;AAEA,MAAMC,OAAO,GAAG;AACdC,EAAAA,aAAa,EAAE,IADD;AAEdC,EAAAA,UAAU,EAAE,IAFE;AAGdC,EAAAA,aAAa,EAAE,IAHD;AAIdC,EAAAA,cAAc,EAAE,IAJF;AAKdC,EAAAA,cAAc,EAAE,IALF;AAMdC,EAAAA,SAAS,EAAE,IANG;AAOdC,EAAAA,YAAY,EAAE,IAPA;AAQdC,EAAAA,eAAe,EAAE,IARH;AASdC,EAAAA,gBAAgB,EAAE,IATJ;AAUdC,EAAAA,SAAS,EAAE,IAVG;AAWdC,EAAAA,UAAU,EAAE,IAXE;AAYdC,EAAAA,YAAY,EAAE,IAZA;AAadC,EAAAA,aAAa,EAAE,IAbD;AAcdC,EAAAA,iBAAiB,EAAE,IAdL;AAedC,EAAAA,gBAAgB,EAAE;AAfJ,CAAhB;AAiBA,MAAMC,OAAO,GAAG;AACdC,EAAAA,cAAc,EAAE,IADF;AAEdC,EAAAA,eAAe,EAAE,IAFH;AAGdC,EAAAA,QAAQ,EAAE,IAHI;AAIdC,EAAAA,OAAO,EAAE,IAJK;AAKdC,EAAAA,eAAe,EAAE,IALH;AAMdC,EAAAA,eAAe,EAAE,IANH;AAOdC,EAAAA,WAAW,EAAE,IAPC;AAQdC,EAAAA,WAAW,EAAE,IARC;AASdC,EAAAA,YAAY,EAAE,IATA;AAUdC,EAAAA,YAAY,EAAE,IAVA;AAWdC,EAAAA,uBAAuB,EAAE,IAXX;AAYdC,EAAAA,sBAAsB,EAAE;AAZV,CAAhB;AAcA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,QAAQ,EAAE,IADO;AAEjBC,EAAAA,QAAQ,EAAE,IAFO;AAGjBC,EAAAA,SAAS,EAAE,IAHM;AAIjBC,EAAAA,QAAQ,EAAE,IAJO;AAKjBC,EAAAA,iBAAiB,EAAE,IALF;AAMjBC,EAAAA,gBAAgB,EAAE;AAND,CAAnB;AAQA,MAAMC,OAAO,GAAG;AACdC,EAAAA,kBAAkB,EAAE,IADN;AAEdC,EAAAA,mBAAmB,EAAE,IAFP;AAGdC,EAAAA,UAAU,EAAE,IAHE;AAIdC,EAAAA,mBAAmB,EAAE,IAJP;AAKdC,EAAAA,0BAA0B,EAAE,IALd;AAMdC,EAAAA,cAAc,EAAE;AANF,CAAhB;AAQA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,UAAU,EAAE,IADU;AAEtBC,EAAAA,qBAAqB,EAAE,IAFD;AAGtBC,EAAAA,YAAY,EAAE,IAHQ;AAItBC,EAAAA,gBAAgB,EAAE,IAJI;AAKtBC,EAAAA,eAAe,EAAE,IALK;AAMtBC,EAAAA,uBAAuB,EAAE,IANH;AAOtBC,EAAAA,wBAAwB,EAAE;AAPJ,CAAxB;AASA,MAAMC,sBAAsB,GAAG,IAA/B;AAEA;;;;AAGA,MAAMC,aAAN,CAAoB;AAClBC,EAAAA,WAAW,CAAC;AACVC,IAAAA,UADU;AAEVC,IAAAA,UAFU;AAGVC,IAAAA,aAHU;AAIVC,IAAAA,SAJU;AAKVC,IAAAA,YALU;AAMVC,IAAAA,cANU;AAOVC,IAAAA;AAPU,GAAD,EAQR;AACD,SAAKN,UAAL,GAAkBA,UAAlB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACA,SAAKC,YAAL,GAAoBA,YAApB;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,cAAL,GAAsB,KAAtB;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKC,OAAL,GAAeC,SAAf;AACA,SAAKC,QAAL,GAAgBD,SAAhB;AACA,SAAKE,QAAL,GAAgBF,SAAhB;AACA,SAAKG,UAAL,GAAkBH,SAAlB;AACA,SAAKI,OAAL,GAAeJ,SAAf;AACA,SAAKK,QAAL,GAAgBL,SAAhB;AACA,SAAKM,WAAL,GAAmBN,SAAnB;AACA,SAAKO,QAAL,GAAgBP,SAAhB;AACA,SAAKQ,QAAL,GAAgBR,SAAhB;AACA,SAAKS,QAAL,GAAgBT,SAAhB;AACA,SAAKU,IAAL,GAAYV,SAAZ;AACA,SAAKW,YAAL,GAAoBX,SAApB;AACA,SAAKY,cAAL,GAAsBZ,SAAtB;AACD;;AAEDa,EAAAA,QAAQ,GAAG;AACT,UAAMC,SAAS,GAAGC,MAAM,CAACC,KAAP,CAAa,EAAb,CAAlB;AACA,UAAMC,OAAO,GAAG,CAACH,SAAD,CAAhB;AACA,QAAII,MAAM,GAAG,CAAb;AACA,QAAIC,UAAU,GAAGL,SAAS,CAACM,MAA3B,CAJS,CAI0B;;AAEnCF,IAAAA,MAAM,GAAGJ,SAAS,CAACO,aAAV,CAAwB,CAAxB,EAA2BH,MAA3B,CAAT,CANS,CAMoC;;AAE7CA,IAAAA,MAAM,GAAGJ,SAAS,CAACO,aAAV,CAAwB,KAAK/B,UAA7B,EAAyC4B,MAAzC,CAAT,CARS,CAQkD;;AAE3DA,IAAAA,MAAM,GAAGJ,SAAS,CAACO,aAAV,CAAwB,KAAK9B,UAA7B,EAAyC2B,MAAzC,CAAT,CAVS,CAUkD;;AAE3DA,IAAAA,MAAM,GAAGJ,SAAS,CAACO,aAAV,CAAwB,KAAK7B,aAA7B,EAA4C0B,MAA5C,CAAT,CAZS,CAYqD;;AAE9DA,IAAAA,MAAM,GAAGJ,SAAS,CAACO,aAAV,CAAwB,KAAK5B,SAA7B,EAAwCyB,MAAxC,CAAT,CAdS,CAciD;;AAE1DA,IAAAA,MAAM,GAAGJ,SAAS,CAACO,aAAV,CAAwB,KAAK3B,YAA7B,EAA2CwB,MAA3C,CAAT,CAhBS,CAgBoD;;AAE7DA,IAAAA,MAAM,GAAGJ,SAAS,CAACQ,UAAV,CAAqB,KAAKC,iBAAL,EAArB,EAA+CL,MAA/C,CAAT,CAlBS,CAkBwD;;AAEjEA,IAAAA,MAAM,GAAGJ,SAAS,CAACQ,UAAV,CAAqB,KAAKE,iBAAL,EAArB,EAA+CN,MAA/C,CAAT,CApBS,CAoBwD;;AAEjEA,IAAAA,MAAM,GAAGJ,SAAS,CAACQ,UAAV,CAAqB,KAAKG,cAAL,EAArB,EAA4CP,MAA5C,CAAT,CAtBS,CAsBqD;;AAE9DA,IAAAA,MAAM,GAAGJ,SAAS,CAACQ,UAAV,CAAqB,KAAKI,iBAAL,EAArB,EAA+CR,MAA/C,CAAT,CAxBS,CAwBwD;;AAEjEA,IAAAA,MAAM,GAAGJ,SAAS,CAACa,YAAV,CAAuB,KAAKhC,cAA5B,EAA4CuB,MAA5C,CAAT,CA1BS,CA0BqD;;AAE9DA,IAAAA,MAAM,GAAGJ,SAAS,CAACO,aAAV,CAAwB,KAAKzB,UAA7B,EAAyCsB,MAAzC,CAAT,CA5BS,CA4BkD;;AAE3DA,IAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBT,UAAxB,EAAoCD,MAApC,CAAT,CA9BS,CA8B6C;;AAEtD,QAAI,KAAKb,QAAT,EAAmB;AACjB,YAAMwB,MAAM,GAAGd,MAAM,CAACe,IAAP,CAAY,KAAKzB,QAAjB,EAA2B,MAA3B,CAAf;AACAa,MAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBC,MAAM,CAACT,MAAP,GAAgB,CAAxC,EAA2CF,MAA3C,CAAT;AACAC,MAAAA,UAAU,IAAIU,MAAM,CAACT,MAArB;AACAH,MAAAA,OAAO,CAACc,IAAR,CAAaF,MAAb;AACD,KALD,MAKO;AACLX,MAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBT,UAAxB,EAAoCD,MAApC,CAAT;AACD,KAvCQ,CAuCP;;;AAGFA,IAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBT,UAAxB,EAAoCD,MAApC,CAAT,CA1CS,CA0C6C;;AAEtD,QAAI,KAAKjB,QAAT,EAAmB;AACjB,YAAM4B,MAAM,GAAGd,MAAM,CAACe,IAAP,CAAY,KAAK7B,QAAjB,EAA2B,MAA3B,CAAf;AACAiB,MAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBC,MAAM,CAACT,MAAP,GAAgB,CAAxC,EAA2CF,MAA3C,CAAT;AACAC,MAAAA,UAAU,IAAIU,MAAM,CAACT,MAArB;AACAH,MAAAA,OAAO,CAACc,IAAR,CAAaF,MAAb;AACD,KALD,MAKO;AACLX,MAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwB,CAAxB,EAA2BV,MAA3B,CAAT;AACD,KAnDQ,CAmDP;;;AAGFA,IAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBT,UAAxB,EAAoCD,MAApC,CAAT,CAtDS,CAsD6C;;AAEtD,QAAI,KAAKhB,QAAT,EAAmB;AACjB,YAAM2B,MAAM,GAAGd,MAAM,CAACe,IAAP,CAAY,KAAK5B,QAAjB,EAA2B,MAA3B,CAAf;AACAgB,MAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBC,MAAM,CAACT,MAAP,GAAgB,CAAxC,EAA2CF,MAA3C,CAAT;AACAC,MAAAA,UAAU,IAAIU,MAAM,CAACT,MAArB;AACAH,MAAAA,OAAO,CAACc,IAAR,CAAa,KAAKC,gBAAL,CAAsBH,MAAtB,CAAb;AACD,KALD,MAKO;AACLX,MAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwB,CAAxB,EAA2BV,MAA3B,CAAT;AACD,KA/DQ,CA+DP;;;AAGFA,IAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBT,UAAxB,EAAoCD,MAApC,CAAT,CAlES,CAkE6C;;AAEtD,QAAI,KAAKd,OAAT,EAAkB;AAChB,YAAMyB,MAAM,GAAGd,MAAM,CAACe,IAAP,CAAY,KAAK1B,OAAjB,EAA0B,MAA1B,CAAf;AACAc,MAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBC,MAAM,CAACT,MAAP,GAAgB,CAAxC,EAA2CF,MAA3C,CAAT;AACAC,MAAAA,UAAU,IAAIU,MAAM,CAACT,MAArB;AACAH,MAAAA,OAAO,CAACc,IAAR,CAAaF,MAAb;AACD,KALD,MAKO;AACLX,MAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwB,CAAxB,EAA2BV,MAA3B,CAAT;AACD,KA3EQ,CA2EP;;;AAGFA,IAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBT,UAAxB,EAAoCD,MAApC,CAAT,CA9ES,CA8E6C;;AAEtD,QAAI,KAAKf,UAAT,EAAqB;AACnB,YAAM0B,MAAM,GAAGd,MAAM,CAACe,IAAP,CAAY,KAAK3B,UAAjB,EAA6B,MAA7B,CAAf;AACAe,MAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBC,MAAM,CAACT,MAAP,GAAgB,CAAxC,EAA2CF,MAA3C,CAAT;AACAC,MAAAA,UAAU,IAAIU,MAAM,CAACT,MAArB;AACAH,MAAAA,OAAO,CAACc,IAAR,CAAaF,MAAb;AACD,KALD,MAKO;AACLX,MAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwB,CAAxB,EAA2BV,MAA3B,CAAT;AACD,KAvFQ,CAuFP;;;AAGFA,IAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBT,UAAxB,EAAoCD,MAApC,CAAT,CA1FS,CA0F6C;;AAEtD,UAAMe,UAAU,GAAG,KAAKC,eAAL,EAAnB;AACAhB,IAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwB,CAAxB,EAA2BV,MAA3B,CAAT;AACA,UAAMiB,eAAe,GAAGpB,MAAM,CAACC,KAAP,CAAa,CAAb,CAAxB;AACAmB,IAAAA,eAAe,CAACd,aAAhB,CAA8BF,UAAU,IAAI,CAA5C,EAA+C,CAA/C;AACAA,IAAAA,UAAU,IAAIc,UAAU,CAACb,MAAzB;AACAH,IAAAA,OAAO,CAACc,IAAR,CAAaI,eAAb,EAA8BF,UAA9B,EAjGS,CAiGkC;;AAE3Cf,IAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBT,UAAxB,EAAoCD,MAApC,CAAT,CAnGS,CAmG6C;;AAEtD,QAAI,KAAKZ,WAAT,EAAsB;AACpB,YAAMuB,MAAM,GAAGd,MAAM,CAACe,IAAP,CAAY,KAAKxB,WAAjB,EAA8B,MAA9B,CAAf;AACAY,MAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBC,MAAM,CAACT,MAAP,GAAgB,CAAxC,EAA2CF,MAA3C,CAAT;AACAC,MAAAA,UAAU,IAAIU,MAAM,CAACT,MAArB;AACAH,MAAAA,OAAO,CAACc,IAAR,CAAaF,MAAb;AACD,KALD,MAKO;AACLX,MAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwB,CAAxB,EAA2BV,MAA3B,CAAT;AACD,KA5GQ,CA4GP;;;AAGFA,IAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBT,UAAxB,EAAoCD,MAApC,CAAT,CA/GS,CA+G6C;;AAEtD,QAAI,KAAKX,QAAT,EAAmB;AACjB,YAAMsB,MAAM,GAAGd,MAAM,CAACe,IAAP,CAAY,KAAKvB,QAAjB,EAA2B,MAA3B,CAAf;AACAW,MAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBC,MAAM,CAACT,MAAP,GAAgB,CAAxC,EAA2CF,MAA3C,CAAT;AACAC,MAAAA,UAAU,IAAIU,MAAM,CAACT,MAArB;AACAH,MAAAA,OAAO,CAACc,IAAR,CAAaF,MAAb;AACD,KALD,MAKO;AACLX,MAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwB,CAAxB,EAA2BV,MAA3B,CAAT;AACD,KAxHQ,CAwHP;;;AAGFA,IAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBT,UAAxB,EAAoCD,MAApC,CAAT,CA3HS,CA2H6C;;AAEtD,QAAI,KAAKV,QAAT,EAAmB;AACjB,YAAMqB,MAAM,GAAGd,MAAM,CAACe,IAAP,CAAY,KAAKtB,QAAjB,EAA2B,MAA3B,CAAf;AACAU,MAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBC,MAAM,CAACT,MAAP,GAAgB,CAAxC,EAA2CF,MAA3C,CAAT;AACAC,MAAAA,UAAU,IAAIU,MAAM,CAACT,MAArB;AACAH,MAAAA,OAAO,CAACc,IAAR,CAAaF,MAAb;AACD,KALD,MAKO;AACLX,MAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwB,CAAxB,EAA2BV,MAA3B,CAAT;AACD,KApIQ,CAoIP;;;AAGF,QAAI,KAAKT,QAAT,EAAmB;AACjB,WAAKA,QAAL,CAAc2B,IAAd,CAAmBtB,SAAnB,EAA8BI,MAA9B,EAAsC,CAAtC,EAAyC,CAAzC;AACD;;AAEDA,IAAAA,MAAM,IAAI,CAAV,CA3IS,CA2II;;AAEbA,IAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBT,UAAxB,EAAoCD,MAApC,CAAT,CA7IS,CA6I6C;;AAEtD,QAAI,KAAKR,IAAT,EAAe;AACb,UAAI,KAAKA,IAAL,CAAUU,MAAV,GAAmB,KAAvB,EAA8B;AAC5BF,QAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwB,KAAxB,EAA+BV,MAA/B,CAAT;AACD,OAFD,MAEO;AACLA,QAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwB,KAAKlB,IAAL,CAAUU,MAAlC,EAA0CF,MAA1C,CAAT;AACD;;AAEDD,MAAAA,OAAO,CAACc,IAAR,CAAa,KAAKrB,IAAlB;AACD,KARD,MAQO;AACLQ,MAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwB,CAAxB,EAA2BV,MAA3B,CAAT;AACD,KAzJQ,CAyJP;;;AAGFA,IAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBT,UAAxB,EAAoCD,MAApC,CAAT,CA5JS,CA4J6C;;AAEtD,QAAI,KAAKP,YAAT,EAAuB;AACrB,YAAMkB,MAAM,GAAGd,MAAM,CAACe,IAAP,CAAY,KAAKnB,YAAjB,EAA+B,MAA/B,CAAf;AACAO,MAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBC,MAAM,CAACT,MAAP,GAAgB,CAAxC,EAA2CF,MAA3C,CAAT;AACAC,MAAAA,UAAU,IAAIU,MAAM,CAACT,MAArB;AACAH,MAAAA,OAAO,CAACc,IAAR,CAAaF,MAAb;AACD,KALD,MAKO;AACLX,MAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwB,CAAxB,EAA2BV,MAA3B,CAAT;AACD,KArKQ,CAqKP;;;AAGFA,IAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBT,UAAxB,EAAoCD,MAApC,CAAT,CAxKS,CAwK6C;;AAEtD,QAAI,KAAKN,cAAT,EAAyB;AACvB,YAAMiB,MAAM,GAAGd,MAAM,CAACe,IAAP,CAAY,KAAKlB,cAAjB,EAAiC,MAAjC,CAAf;AACAM,MAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwBC,MAAM,CAACT,MAAP,GAAgB,CAAxC,EAA2CF,MAA3C,CAAT;AACAC,MAAAA,UAAU,IAAIU,MAAM,CAACT,MAArB;AACAH,MAAAA,OAAO,CAACc,IAAR,CAAaF,MAAb;AACD,KALD,MAKO;AACLX,MAAAA,MAAM,GAAGJ,SAAS,CAACc,aAAV,CAAwB,CAAxB,EAA2BV,MAA3B,CAAT;AACD,KAjLQ,CAiLP;;;AAGF,QAAI,KAAKR,IAAL,IAAa,KAAKA,IAAL,CAAUU,MAAV,GAAmB,KAApC,EAA2C;AACzCN,MAAAA,SAAS,CAACO,aAAV,CAAwB,KAAKX,IAAL,CAAUU,MAAlC,EAA0CF,MAA1C;AACD,KAFD,MAEO;AACLJ,MAAAA,SAAS,CAACO,aAAV,CAAwB,CAAxB,EAA2BH,MAA3B;AACD;;AAED,UAAMmB,IAAI,GAAGtB,MAAM,CAACuB,MAAP,CAAcrB,OAAd,CAAb;AACAoB,IAAAA,IAAI,CAAChB,aAAL,CAAmBgB,IAAI,CAACjB,MAAxB,EAAgC,CAAhC;AACA,WAAOiB,IAAP;AACD;;AAEDd,EAAAA,iBAAiB,GAAG;AAClB,QAAIgB,MAAM,GAAGvG,OAAO,CAACC,aAAR,GAAwBD,OAAO,CAACG,aAAhC,GAAgDH,OAAO,CAACK,cAAxD,GAAyEL,OAAO,CAACS,gBAAjF,GAAoGT,OAAO,CAACW,UAA5G,GAAyHX,OAAO,CAACe,gBAA9I;;AAEA,QAAI,KAAK+C,WAAT,EAAsB;AACpByC,MAAAA,MAAM,IAAIvG,OAAO,CAACa,aAAlB;AACD,KAFD,MAEO;AACL0F,MAAAA,MAAM,IAAIvG,OAAO,CAACY,YAAlB;AACD;;AAED,WAAO2F,MAAP;AACD;;AAEDL,EAAAA,eAAe,GAAG;AAChB,UAAMjB,OAAO,GAAG,EAAhB;AACA,UAAMlB,OAAO,GAAG,KAAKA,OAArB;;AAEA,QAAIA,OAAJ,EAAa;AACX,cAAQA,OAAO,CAACyC,IAAhB;AACE,aAAK,MAAL;AACE,gBAAMX,MAAM,GAAGd,MAAM,CAACC,KAAP,CAAa,CAAb,CAAf;AACAa,UAAAA,MAAM,CAACP,UAAP,CAAkB3C,eAAe,CAACC,UAAlC,EAA8C,CAA9C;AACAiD,UAAAA,MAAM,CAACR,aAAP,CAAqB,CAArB,EAAwB,CAAxB;AACAQ,UAAAA,MAAM,CAACP,UAAP,CAAkB3C,eAAe,CAACG,YAAhB,IAAgC,CAAhC,IAAqCiB,OAAO,CAAC0C,IAAR,GAAe9D,eAAe,CAACI,gBAA/B,GAAkDJ,eAAe,CAACK,eAAvG,CAAlB,EAA2I,CAA3I;AACA6C,UAAAA,MAAM,CAACP,UAAP,CAAkBvB,OAAO,CAAC2C,QAAR,KAAqB,YAArB,GAAoC,IAApC,GAA2C/D,eAAe,CAACM,uBAA7E,EAAsG,CAAtG;AACAgC,UAAAA,OAAO,CAACc,IAAR,CAAaF,MAAb;AACA;;AAEF,aAAK,eAAL;AACE,gBAAMc,KAAK,GAAG5B,MAAM,CAACe,IAAP,CAAY/B,OAAO,CAAC6C,YAApB,EAAkC,MAAlC,CAAd;AACA,gBAAMC,GAAG,GAAG9B,MAAM,CAACC,KAAP,CAAa,EAAb,CAAZ;AACA,cAAIE,MAAM,GAAG,CAAb;AACAA,UAAAA,MAAM,GAAG2B,GAAG,CAACvB,UAAJ,CAAe3C,eAAe,CAACC,UAA/B,EAA2CsC,MAA3C,CAAT;AACAA,UAAAA,MAAM,GAAG2B,GAAG,CAACxB,aAAJ,CAAkBsB,KAAK,CAACvB,MAAN,GAAe,CAAf,GAAmB,CAArC,EAAwCF,MAAxC,CAAT;AACAA,UAAAA,MAAM,GAAG2B,GAAG,CAACvB,UAAJ,CAAe3C,eAAe,CAACE,qBAAhB,IAAyC,CAAzC,IAA8CkB,OAAO,CAAC0C,IAAR,GAAe9D,eAAe,CAACI,gBAA/B,GAAkDJ,eAAe,CAACK,eAAhH,CAAf,EAAiJkC,MAAjJ,CAAT;AACA2B,UAAAA,GAAG,CAAClB,YAAJ,CAAiBgB,KAAK,CAACvB,MAAvB,EAA+BF,MAA/B;AACAD,UAAAA,OAAO,CAACc,IAAR,CAAac,GAAb;AACA5B,UAAAA,OAAO,CAACc,IAAR,CAAaY,KAAb;AACA;AApBJ;AAsBD;;AAED1B,IAAAA,OAAO,CAACc,IAAR,CAAahB,MAAM,CAACe,IAAP,CAAY,CAAC3C,sBAAD,CAAZ,CAAb;AACA,WAAO4B,MAAM,CAACuB,MAAP,CAAcrB,OAAd,CAAP;AACD;;AAEDO,EAAAA,iBAAiB,GAAG;AAClB,QAAIsB,MAAM,GAAG9F,OAAO,CAACC,cAAR,GAAyBD,OAAO,CAACG,QAAjC,GAA4CH,OAAO,CAACO,WAAjE;;AAEA,QAAI,KAAKmD,IAAT,EAAe;AACboC,MAAAA,MAAM,IAAI9F,OAAO,CAACY,sBAAlB;AACD,KAFD,MAEO;AACLkF,MAAAA,MAAM,IAAI9F,OAAO,CAACW,uBAAlB;AACD;;AAED,WAAOmF,MAAP;AACD;;AAEDrB,EAAAA,cAAc,GAAG;AACf,QAAIsB,SAAS,GAAGlF,UAAU,CAACC,QAAX,GAAsBD,UAAU,CAACG,SAAjD;;AAEA,QAAI,KAAK6B,cAAT,EAAyB;AACvBkD,MAAAA,SAAS,IAAIlF,UAAU,CAACM,gBAAxB;AACD,KAFD,MAEO;AACL4E,MAAAA,SAAS,IAAIlF,UAAU,CAACK,iBAAxB;AACD;;AAED,WAAO6E,SAAP;AACD;;AAEDrB,EAAAA,iBAAiB,GAAG;AAClB,WAAOtD,OAAO,CAACC,kBAAR,GAA6BD,OAAO,CAACK,0BAArC,GAAkEL,OAAO,CAACM,cAAjF;AACD;;AAEDsD,EAAAA,gBAAgB,CAAC9B,QAAD,EAAW;AACzB,SAAK,IAAI8C,CAAC,GAAG,CAAR,EAAWC,GAAG,GAAG/C,QAAQ,CAACkB,MAA/B,EAAuC4B,CAAC,GAAGC,GAA3C,EAAgDD,CAAC,EAAjD,EAAqD;AACnD,UAAIE,IAAI,GAAGhD,QAAQ,CAAC8C,CAAD,CAAnB;AACA,YAAMG,SAAS,GAAGD,IAAI,GAAG,IAAzB;AACA,YAAME,UAAU,GAAGF,IAAI,IAAI,CAA3B;AACAA,MAAAA,IAAI,GAAGC,SAAS,IAAI,CAAb,GAAiBC,UAAxB;AACAF,MAAAA,IAAI,GAAGA,IAAI,GAAG,IAAd;AACAhD,MAAAA,QAAQ,CAAC8C,CAAD,CAAR,GAAcE,IAAd;AACD;;AAED,WAAOhD,QAAP;AACD;;AAEDmD,EAAAA,QAAQ,CAACC,MAAM,GAAG,EAAV,EAAc;AACpB,WAAOA,MAAM,GAAG,WAAT,GAAuB,CAAC,GAAGxH,UAAU,CAACyH,OAAf,EAAwB,4FAAxB,EAAsH,KAAKjE,UAA3H,EAAuI,KAAKC,UAA5I,EAAwJ,KAAKC,aAA7J,EAA4K,KAAKC,SAAjL,EAA4L,KAAKC,YAAjM,CAAvB,GAAwO,IAAxO,GAA+O4D,MAA/O,GAAwP,WAAxP,GAAsQ,CAAC,GAAGxH,UAAU,CAACyH,OAAf,EAAwB,qGAAxB,EAA+H,KAAKhC,iBAAL,EAA/H,EAAyJ,KAAKC,iBAAL,EAAzJ,EAAmL,KAAKC,cAAL,EAAnL,EAA0M,KAAKC,iBAAL,EAA1M,EAAoO,KAAK/B,cAAzO,EAAyP,KAAKC,UAA9P,CAAtQ,GAAkhB,IAAlhB,GAAyhB0D,MAAzhB,GAAkiB,WAAliB,GAAgjB,CAAC,GAAGxH,UAAU,CAACyH,OAAf,EAAwB,8FAAxB,EAAwH,KAAKlD,QAA7H,EAAuI,KAAKJ,QAA5I,EAAsJ,KAAKC,QAA3J,EAAqK,KAAKE,OAA1K,EAAmL,KAAKD,UAAxL,EAAoM,KAAKG,WAAzM,CAAhjB,GAAwwB,IAAxwB,GAA+wBgD,MAA/wB,GAAwxB,WAAxxB,GAAsyB,CAAC,GAAGxH,UAAU,CAACyH,OAAf,EAAwB,iFAAxB,EAA2G,KAAKhD,QAAhH,EAA0H,KAAKC,QAA/H,EAAyI,KAAKE,IAA9I,EAAoJ,KAAKC,YAAzJ,EAAuK,KAAKC,cAA5K,CAA7yB;AACD;;AAzTiB;;AA6TpB,IAAI4C,QAAQ,GAAGpE,aAAf;AACAzD,OAAO,CAACE,OAAR,GAAkB2H,QAAlB;AACAC,MAAM,CAAC9H,OAAP,GAAiByD,aAAjB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _sprintfJs = require(\"sprintf-js\");\n\nconst FLAGS_1 = {\n  ENDIAN_LITTLE: 0x00,\n  ENDIAN_BIG: 0x01,\n  CHARSET_ASCII: 0x00,\n  CHARSET_EBCDIC: 0x02,\n  FLOAT_IEEE_754: 0x00,\n  FLOAT_VAX: 0x04,\n  FLOAT_ND5000: 0x08,\n  BCP_DUMPLOAD_ON: 0x00,\n  BCP_DUMPLOAD_OFF: 0x10,\n  USE_DB_ON: 0x00,\n  USE_DB_OFF: 0x20,\n  INIT_DB_WARN: 0x00,\n  INIT_DB_FATAL: 0x40,\n  SET_LANG_WARN_OFF: 0x00,\n  SET_LANG_WARN_ON: 0x80\n};\nconst FLAGS_2 = {\n  INIT_LANG_WARN: 0x00,\n  INIT_LANG_FATAL: 0x01,\n  ODBC_OFF: 0x00,\n  ODBC_ON: 0x02,\n  F_TRAN_BOUNDARY: 0x04,\n  F_CACHE_CONNECT: 0x08,\n  USER_NORMAL: 0x00,\n  USER_SERVER: 0x10,\n  USER_REMUSER: 0x20,\n  USER_SQLREPL: 0x40,\n  INTEGRATED_SECURITY_OFF: 0x00,\n  INTEGRATED_SECURITY_ON: 0x80\n};\nconst TYPE_FLAGS = {\n  SQL_DFLT: 0x00,\n  SQL_TSQL: 0x08,\n  OLEDB_OFF: 0x00,\n  OLEDB_ON: 0x10,\n  READ_WRITE_INTENT: 0x00,\n  READ_ONLY_INTENT: 0x20\n};\nconst FLAGS_3 = {\n  CHANGE_PASSWORD_NO: 0x00,\n  CHANGE_PASSWORD_YES: 0x01,\n  BINARY_XML: 0x02,\n  SPAWN_USER_INSTANCE: 0x04,\n  UNKNOWN_COLLATION_HANDLING: 0x08,\n  EXTENSION_USED: 0x10\n};\nconst FEDAUTH_OPTIONS = {\n  FEATURE_ID: 0x02,\n  LIBRARY_SECURITYTOKEN: 0x01,\n  LIBRARY_ADAL: 0x02,\n  FEDAUTH_YES_ECHO: 0x01,\n  FEDAUTH_NO_ECHO: 0x00,\n  ADAL_WORKFLOW_USER_PASS: 0x01,\n  ADAL_WORKFLOW_INTEGRATED: 0x02\n};\nconst FEATURE_EXT_TERMINATOR = 0xFF;\n\n/*\n  s2.2.6.3\n */\nclass Login7Payload {\n  constructor({\n    tdsVersion,\n    packetSize,\n    clientProgVer,\n    clientPid,\n    connectionId,\n    clientTimeZone,\n    clientLcid\n  }) {\n    this.tdsVersion = tdsVersion;\n    this.packetSize = packetSize;\n    this.clientProgVer = clientProgVer;\n    this.clientPid = clientPid;\n    this.connectionId = connectionId;\n    this.clientTimeZone = clientTimeZone;\n    this.clientLcid = clientLcid;\n    this.readOnlyIntent = false;\n    this.initDbFatal = false;\n    this.fedAuth = undefined;\n    this.userName = undefined;\n    this.password = undefined;\n    this.serverName = undefined;\n    this.appName = undefined;\n    this.hostname = undefined;\n    this.libraryName = undefined;\n    this.language = undefined;\n    this.database = undefined;\n    this.clientId = undefined;\n    this.sspi = undefined;\n    this.attachDbFile = undefined;\n    this.changePassword = undefined;\n  }\n\n  toBuffer() {\n    const fixedData = Buffer.alloc(94);\n    const buffers = [fixedData];\n    let offset = 0;\n    let dataOffset = fixedData.length; // Length: 4-byte\n\n    offset = fixedData.writeUInt32LE(0, offset); // TDSVersion: 4-byte\n\n    offset = fixedData.writeUInt32LE(this.tdsVersion, offset); // PacketSize: 4-byte\n\n    offset = fixedData.writeUInt32LE(this.packetSize, offset); // ClientProgVer: 4-byte\n\n    offset = fixedData.writeUInt32LE(this.clientProgVer, offset); // ClientPID: 4-byte\n\n    offset = fixedData.writeUInt32LE(this.clientPid, offset); // ConnectionID: 4-byte\n\n    offset = fixedData.writeUInt32LE(this.connectionId, offset); // OptionFlags1: 1-byte\n\n    offset = fixedData.writeUInt8(this.buildOptionFlags1(), offset); // OptionFlags2: 1-byte\n\n    offset = fixedData.writeUInt8(this.buildOptionFlags2(), offset); // TypeFlags: 1-byte\n\n    offset = fixedData.writeUInt8(this.buildTypeFlags(), offset); // OptionFlags3: 1-byte\n\n    offset = fixedData.writeUInt8(this.buildOptionFlags3(), offset); // ClientTimZone: 4-byte\n\n    offset = fixedData.writeInt32LE(this.clientTimeZone, offset); // ClientLCID: 4-byte\n\n    offset = fixedData.writeUInt32LE(this.clientLcid, offset); // ibHostName: 2-byte\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchHostName: 2-byte\n\n    if (this.hostname) {\n      const buffer = Buffer.from(this.hostname, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(dataOffset, offset);\n    } // ibUserName: 2-byte\n\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchUserName: 2-byte\n\n    if (this.userName) {\n      const buffer = Buffer.from(this.userName, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ibPassword: 2-byte\n\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchPassword: 2-byte\n\n    if (this.password) {\n      const buffer = Buffer.from(this.password, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(this.scramblePassword(buffer));\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ibAppName: 2-byte\n\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchAppName: 2-byte\n\n    if (this.appName) {\n      const buffer = Buffer.from(this.appName, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ibServerName: 2-byte\n\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchServerName: 2-byte\n\n    if (this.serverName) {\n      const buffer = Buffer.from(this.serverName, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // (ibUnused / ibExtension): 2-byte\n\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // (cchUnused / cbExtension): 2-byte\n\n    const extensions = this.buildFeatureExt();\n    offset = fixedData.writeUInt16LE(4, offset);\n    const extensionOffset = Buffer.alloc(4);\n    extensionOffset.writeUInt32LE(dataOffset += 4, 0);\n    dataOffset += extensions.length;\n    buffers.push(extensionOffset, extensions); // ibCltIntName: 2-byte\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchCltIntName: 2-byte\n\n    if (this.libraryName) {\n      const buffer = Buffer.from(this.libraryName, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ibLanguage: 2-byte\n\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchLanguage: 2-byte\n\n    if (this.language) {\n      const buffer = Buffer.from(this.language, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ibDatabase: 2-byte\n\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchDatabase: 2-byte\n\n    if (this.database) {\n      const buffer = Buffer.from(this.database, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ClientID: 6-byte\n\n\n    if (this.clientId) {\n      this.clientId.copy(fixedData, offset, 0, 6);\n    }\n\n    offset += 6; // ibSSPI: 2-byte\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cbSSPI: 2-byte\n\n    if (this.sspi) {\n      if (this.sspi.length > 65535) {\n        offset = fixedData.writeUInt16LE(65535, offset);\n      } else {\n        offset = fixedData.writeUInt16LE(this.sspi.length, offset);\n      }\n\n      buffers.push(this.sspi);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ibAtchDBFile: 2-byte\n\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchAtchDBFile: 2-byte\n\n    if (this.attachDbFile) {\n      const buffer = Buffer.from(this.attachDbFile, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // ibChangePassword: 2-byte\n\n\n    offset = fixedData.writeUInt16LE(dataOffset, offset); // cchChangePassword: 2-byte\n\n    if (this.changePassword) {\n      const buffer = Buffer.from(this.changePassword, 'ucs2');\n      offset = fixedData.writeUInt16LE(buffer.length / 2, offset);\n      dataOffset += buffer.length;\n      buffers.push(buffer);\n    } else {\n      offset = fixedData.writeUInt16LE(0, offset);\n    } // cbSSPILong: 4-byte\n\n\n    if (this.sspi && this.sspi.length > 65535) {\n      fixedData.writeUInt32LE(this.sspi.length, offset);\n    } else {\n      fixedData.writeUInt32LE(0, offset);\n    }\n\n    const data = Buffer.concat(buffers);\n    data.writeUInt32LE(data.length, 0);\n    return data;\n  }\n\n  buildOptionFlags1() {\n    let flags1 = FLAGS_1.ENDIAN_LITTLE | FLAGS_1.CHARSET_ASCII | FLAGS_1.FLOAT_IEEE_754 | FLAGS_1.BCP_DUMPLOAD_OFF | FLAGS_1.USE_DB_OFF | FLAGS_1.SET_LANG_WARN_ON;\n\n    if (this.initDbFatal) {\n      flags1 |= FLAGS_1.INIT_DB_FATAL;\n    } else {\n      flags1 |= FLAGS_1.INIT_DB_WARN;\n    }\n\n    return flags1;\n  }\n\n  buildFeatureExt() {\n    const buffers = [];\n    const fedAuth = this.fedAuth;\n\n    if (fedAuth) {\n      switch (fedAuth.type) {\n        case 'ADAL':\n          const buffer = Buffer.alloc(7);\n          buffer.writeUInt8(FEDAUTH_OPTIONS.FEATURE_ID, 0);\n          buffer.writeUInt32LE(2, 1);\n          buffer.writeUInt8(FEDAUTH_OPTIONS.LIBRARY_ADAL << 1 | (fedAuth.echo ? FEDAUTH_OPTIONS.FEDAUTH_YES_ECHO : FEDAUTH_OPTIONS.FEDAUTH_NO_ECHO), 5);\n          buffer.writeUInt8(fedAuth.workflow === 'integrated' ? 0x02 : FEDAUTH_OPTIONS.ADAL_WORKFLOW_USER_PASS, 6);\n          buffers.push(buffer);\n          break;\n\n        case 'SECURITYTOKEN':\n          const token = Buffer.from(fedAuth.fedAuthToken, 'ucs2');\n          const buf = Buffer.alloc(10);\n          let offset = 0;\n          offset = buf.writeUInt8(FEDAUTH_OPTIONS.FEATURE_ID, offset);\n          offset = buf.writeUInt32LE(token.length + 4 + 1, offset);\n          offset = buf.writeUInt8(FEDAUTH_OPTIONS.LIBRARY_SECURITYTOKEN << 1 | (fedAuth.echo ? FEDAUTH_OPTIONS.FEDAUTH_YES_ECHO : FEDAUTH_OPTIONS.FEDAUTH_NO_ECHO), offset);\n          buf.writeInt32LE(token.length, offset);\n          buffers.push(buf);\n          buffers.push(token);\n          break;\n      }\n    }\n\n    buffers.push(Buffer.from([FEATURE_EXT_TERMINATOR]));\n    return Buffer.concat(buffers);\n  }\n\n  buildOptionFlags2() {\n    let flags2 = FLAGS_2.INIT_LANG_WARN | FLAGS_2.ODBC_OFF | FLAGS_2.USER_NORMAL;\n\n    if (this.sspi) {\n      flags2 |= FLAGS_2.INTEGRATED_SECURITY_ON;\n    } else {\n      flags2 |= FLAGS_2.INTEGRATED_SECURITY_OFF;\n    }\n\n    return flags2;\n  }\n\n  buildTypeFlags() {\n    let typeFlags = TYPE_FLAGS.SQL_DFLT | TYPE_FLAGS.OLEDB_OFF;\n\n    if (this.readOnlyIntent) {\n      typeFlags |= TYPE_FLAGS.READ_ONLY_INTENT;\n    } else {\n      typeFlags |= TYPE_FLAGS.READ_WRITE_INTENT;\n    }\n\n    return typeFlags;\n  }\n\n  buildOptionFlags3() {\n    return FLAGS_3.CHANGE_PASSWORD_NO | FLAGS_3.UNKNOWN_COLLATION_HANDLING | FLAGS_3.EXTENSION_USED;\n  }\n\n  scramblePassword(password) {\n    for (let b = 0, len = password.length; b < len; b++) {\n      let byte = password[b];\n      const lowNibble = byte & 0x0f;\n      const highNibble = byte >> 4;\n      byte = lowNibble << 4 | highNibble;\n      byte = byte ^ 0xa5;\n      password[b] = byte;\n    }\n\n    return password;\n  }\n\n  toString(indent = '') {\n    return indent + 'Login7 - ' + (0, _sprintfJs.sprintf)('TDS:0x%08X, PacketSize:0x%08X, ClientProgVer:0x%08X, ClientPID:0x%08X, ConnectionID:0x%08X', this.tdsVersion, this.packetSize, this.clientProgVer, this.clientPid, this.connectionId) + '\\n' + indent + '         ' + (0, _sprintfJs.sprintf)('Flags1:0x%02X, Flags2:0x%02X, TypeFlags:0x%02X, Flags3:0x%02X, ClientTimezone:%d, ClientLCID:0x%08X', this.buildOptionFlags1(), this.buildOptionFlags2(), this.buildTypeFlags(), this.buildOptionFlags3(), this.clientTimeZone, this.clientLcid) + '\\n' + indent + '         ' + (0, _sprintfJs.sprintf)(\"Hostname:'%s', Username:'%s', Password:'%s', AppName:'%s', ServerName:'%s', LibraryName:'%s'\", this.hostname, this.userName, this.password, this.appName, this.serverName, this.libraryName) + '\\n' + indent + '         ' + (0, _sprintfJs.sprintf)(\"Language:'%s', Database:'%s', SSPI:'%s', AttachDbFile:'%s', ChangePassword:'%s'\", this.language, this.database, this.sspi, this.attachDbFile, this.changePassword);\n  }\n\n}\n\nvar _default = Login7Payload;\nexports.default = _default;\nmodule.exports = Login7Payload;"]},"metadata":{},"sourceType":"script"}