{"ast":null,"code":"'use strict';\n\nexports.parse = function (source, transform) {\n  return new ArrayParser(source, transform).parse();\n};\n\nfunction ArrayParser(source, transform) {\n  this.source = source;\n  this.transform = transform || identity;\n  this.position = 0;\n  this.entries = [];\n  this.recorded = [];\n  this.dimension = 0;\n}\n\nArrayParser.prototype.isEof = function () {\n  return this.position >= this.source.length;\n};\n\nArrayParser.prototype.nextCharacter = function () {\n  var character = this.source[this.position++];\n\n  if (character === '\\\\') {\n    return {\n      value: this.source[this.position++],\n      escaped: true\n    };\n  }\n\n  return {\n    value: character,\n    escaped: false\n  };\n};\n\nArrayParser.prototype.record = function (character) {\n  this.recorded.push(character);\n};\n\nArrayParser.prototype.newEntry = function (includeEmpty) {\n  var entry;\n\n  if (this.recorded.length > 0 || includeEmpty) {\n    entry = this.recorded.join('');\n\n    if (entry === 'NULL' && !includeEmpty) {\n      entry = null;\n    }\n\n    if (entry !== null) entry = this.transform(entry);\n    this.entries.push(entry);\n    this.recorded = [];\n  }\n};\n\nArrayParser.prototype.parse = function (nested) {\n  var character, parser, quote;\n\n  while (!this.isEof()) {\n    character = this.nextCharacter();\n\n    if (character.value === '{' && !quote) {\n      this.dimension++;\n\n      if (this.dimension > 1) {\n        parser = new ArrayParser(this.source.substr(this.position - 1), this.transform);\n        this.entries.push(parser.parse(true));\n        this.position += parser.position - 2;\n      }\n    } else if (character.value === '}' && !quote) {\n      this.dimension--;\n\n      if (!this.dimension) {\n        this.newEntry();\n        if (nested) return this.entries;\n      }\n    } else if (character.value === '\"' && !character.escaped) {\n      if (quote) this.newEntry(true);\n      quote = !quote;\n    } else if (character.value === ',' && !quote) {\n      this.newEntry();\n    } else {\n      this.record(character.value);\n    }\n  }\n\n  if (this.dimension !== 0) {\n    throw new Error('array dimension not balanced');\n  }\n\n  return this.entries;\n};\n\nfunction identity(value) {\n  return value;\n}","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/node_modules/pg-native/node_modules/postgres-array/index.js"],"names":["exports","parse","source","transform","ArrayParser","identity","position","entries","recorded","dimension","prototype","isEof","length","nextCharacter","character","value","escaped","record","push","newEntry","includeEmpty","entry","join","nested","parser","quote","substr","Error"],"mappings":"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","sourcesContent":["'use strict'\n\nexports.parse = function (source, transform) {\n  return new ArrayParser(source, transform).parse()\n}\n\nfunction ArrayParser (source, transform) {\n  this.source = source\n  this.transform = transform || identity\n  this.position = 0\n  this.entries = []\n  this.recorded = []\n  this.dimension = 0\n}\n\nArrayParser.prototype.isEof = function () {\n  return this.position >= this.source.length\n}\n\nArrayParser.prototype.nextCharacter = function () {\n  var character = this.source[this.position++]\n  if (character === '\\\\') {\n    return {\n      value: this.source[this.position++],\n      escaped: true\n    }\n  }\n  return {\n    value: character,\n    escaped: false\n  }\n}\n\nArrayParser.prototype.record = function (character) {\n  this.recorded.push(character)\n}\n\nArrayParser.prototype.newEntry = function (includeEmpty) {\n  var entry\n  if (this.recorded.length > 0 || includeEmpty) {\n    entry = this.recorded.join('')\n    if (entry === 'NULL' && !includeEmpty) {\n      entry = null\n    }\n    if (entry !== null) entry = this.transform(entry)\n    this.entries.push(entry)\n    this.recorded = []\n  }\n}\n\nArrayParser.prototype.parse = function (nested) {\n  var character, parser, quote\n  while (!this.isEof()) {\n    character = this.nextCharacter()\n    if (character.value === '{' && !quote) {\n      this.dimension++\n      if (this.dimension > 1) {\n        parser = new ArrayParser(this.source.substr(this.position - 1), this.transform)\n        this.entries.push(parser.parse(true))\n        this.position += parser.position - 2\n      }\n    } else if (character.value === '}' && !quote) {\n      this.dimension--\n      if (!this.dimension) {\n        this.newEntry()\n        if (nested) return this.entries\n      }\n    } else if (character.value === '\"' && !character.escaped) {\n      if (quote) this.newEntry(true)\n      quote = !quote\n    } else if (character.value === ',' && !quote) {\n      this.newEntry()\n    } else {\n      this.record(character.value)\n    }\n  }\n  if (this.dimension !== 0) {\n    throw new Error('array dimension not balanced')\n  }\n  return this.entries\n}\n\nfunction identity (value) {\n  return value\n}\n"]},"metadata":{},"sourceType":"script"}