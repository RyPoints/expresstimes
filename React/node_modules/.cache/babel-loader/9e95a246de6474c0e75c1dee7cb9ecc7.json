{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport * as tslib_1 from \"tslib\";\nimport * as utils from \"../util/utils\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport function generateClientRequestIdPolicy(requestIdHeaderName) {\n  if (requestIdHeaderName === void 0) {\n    requestIdHeaderName = \"x-ms-client-request-id\";\n  }\n\n  return {\n    create: function (nextPolicy, options) {\n      return new GenerateClientRequestIdPolicy(nextPolicy, options, requestIdHeaderName);\n    }\n  };\n}\n\nvar GenerateClientRequestIdPolicy =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(GenerateClientRequestIdPolicy, _super);\n\n  function GenerateClientRequestIdPolicy(nextPolicy, options, _requestIdHeaderName) {\n    var _this = _super.call(this, nextPolicy, options) || this;\n\n    _this._requestIdHeaderName = _requestIdHeaderName;\n    return _this;\n  }\n\n  GenerateClientRequestIdPolicy.prototype.sendRequest = function (request) {\n    if (!request.headers.contains(this._requestIdHeaderName)) {\n      request.headers.set(this._requestIdHeaderName, utils.generateUuid());\n    }\n\n    return this._nextPolicy.sendRequest(request);\n  };\n\n  return GenerateClientRequestIdPolicy;\n}(BaseRequestPolicy);\n\nexport { GenerateClientRequestIdPolicy };","map":{"version":3,"sources":["../../../lib/policies/generateClientRequestIdPolicy.ts"],"names":[],"mappings":"AAAA;AACA;;AAGA,OAAO,KAAK,KAAZ,MAAuB,eAAvB;AAEA,SAAS,iBAAT,QAA6F,iBAA7F;AAEA,OAAM,SAAU,6BAAV,CAAwC,mBAAxC,EAAsF;AAA9C,MAAA,mBAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,mBAAA,GAAA,wBAAA;AAA8C;;AAC1F,SAAO;AACL,IAAA,MAAM,EAAE,UAAC,UAAD,EAA4B,OAA5B,EAAyD;AAC/D,aAAO,IAAI,6BAAJ,CAAkC,UAAlC,EAA8C,OAA9C,EAAuD,mBAAvD,CAAP;AACD;AAHI,GAAP;AAKD;;AAED,IAAA,6BAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAmD,EAAA,OAAA,CAAA,SAAA,CAAA,6BAAA,EAAA,MAAA;;AACjD,WAAA,6BAAA,CAAY,UAAZ,EAAuC,OAAvC,EAA8E,oBAA9E,EAA0G;AAA1G,QAAA,KAAA,GACE,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,UAAN,EAAkB,OAAlB,KAA0B,IAD5B;;AAA8E,IAAA,KAAA,CAAA,oBAAA,GAAA,oBAAA;;AAE7E;;AAEM,EAAA,6BAAA,CAAA,SAAA,CAAA,WAAA,GAAP,UAAmB,OAAnB,EAAuC;AACrC,QAAI,CAAC,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAyB,KAAK,oBAA9B,CAAL,EAA0D;AACxD,MAAA,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAAoB,KAAK,oBAAzB,EAA+C,KAAK,CAAC,YAAN,EAA/C;AACD;;AACD,WAAO,KAAK,WAAL,CAAiB,WAAjB,CAA6B,OAA7B,CAAP;AACD,GALM;;AAMT,SAAA,6BAAA;AAAC,CAXD,CAAmD,iBAAnD,CAAA","sourceRoot":"","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport * as tslib_1 from \"tslib\";\nimport * as utils from \"../util/utils\";\nimport { BaseRequestPolicy } from \"./requestPolicy\";\nexport function generateClientRequestIdPolicy(requestIdHeaderName) {\n    if (requestIdHeaderName === void 0) { requestIdHeaderName = \"x-ms-client-request-id\"; }\n    return {\n        create: function (nextPolicy, options) {\n            return new GenerateClientRequestIdPolicy(nextPolicy, options, requestIdHeaderName);\n        }\n    };\n}\nvar GenerateClientRequestIdPolicy = /** @class */ (function (_super) {\n    tslib_1.__extends(GenerateClientRequestIdPolicy, _super);\n    function GenerateClientRequestIdPolicy(nextPolicy, options, _requestIdHeaderName) {\n        var _this = _super.call(this, nextPolicy, options) || this;\n        _this._requestIdHeaderName = _requestIdHeaderName;\n        return _this;\n    }\n    GenerateClientRequestIdPolicy.prototype.sendRequest = function (request) {\n        if (!request.headers.contains(this._requestIdHeaderName)) {\n            request.headers.set(this._requestIdHeaderName, utils.generateUuid());\n        }\n        return this._nextPolicy.sendRequest(request);\n    };\n    return GenerateClientRequestIdPolicy;\n}(BaseRequestPolicy));\nexport { GenerateClientRequestIdPolicy };\n//# sourceMappingURL=generateClientRequestIdPolicy.js.map"]},"metadata":{},"sourceType":"module"}