{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _jsbi = _interopRequireDefault(require(\"jsbi\"));\n\nvar _readableStream = require(\"readable-stream\");\n\nvar _token = require(\"./token\");\n\nvar _colmetadataTokenParser = _interopRequireDefault(require(\"./colmetadata-token-parser\"));\n\nvar _doneTokenParser = require(\"./done-token-parser\");\n\nvar _envChangeTokenParser = _interopRequireDefault(require(\"./env-change-token-parser\"));\n\nvar _infoerrorTokenParser = require(\"./infoerror-token-parser\");\n\nvar _fedauthInfoParser = _interopRequireDefault(require(\"./fedauth-info-parser\"));\n\nvar _featureExtAckParser = _interopRequireDefault(require(\"./feature-ext-ack-parser\"));\n\nvar _loginackTokenParser = _interopRequireDefault(require(\"./loginack-token-parser\"));\n\nvar _orderTokenParser = _interopRequireDefault(require(\"./order-token-parser\"));\n\nvar _returnstatusTokenParser = _interopRequireDefault(require(\"./returnstatus-token-parser\"));\n\nvar _returnvalueTokenParser = _interopRequireDefault(require(\"./returnvalue-token-parser\"));\n\nvar _rowTokenParser = _interopRequireDefault(require(\"./row-token-parser\"));\n\nvar _nbcrowTokenParser = _interopRequireDefault(require(\"./nbcrow-token-parser\"));\n\nvar _sspiTokenParser = _interopRequireDefault(require(\"./sspi-token-parser\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst tokenParsers = {\n  [_token.TYPE.COLMETADATA]: _colmetadataTokenParser.default,\n  [_token.TYPE.DONE]: _doneTokenParser.doneParser,\n  [_token.TYPE.DONEINPROC]: _doneTokenParser.doneInProcParser,\n  [_token.TYPE.DONEPROC]: _doneTokenParser.doneProcParser,\n  [_token.TYPE.ENVCHANGE]: _envChangeTokenParser.default,\n  [_token.TYPE.ERROR]: _infoerrorTokenParser.errorParser,\n  [_token.TYPE.FEDAUTHINFO]: _fedauthInfoParser.default,\n  [_token.TYPE.FEATUREEXTACK]: _featureExtAckParser.default,\n  [_token.TYPE.INFO]: _infoerrorTokenParser.infoParser,\n  [_token.TYPE.LOGINACK]: _loginackTokenParser.default,\n  [_token.TYPE.ORDER]: _orderTokenParser.default,\n  [_token.TYPE.RETURNSTATUS]: _returnstatusTokenParser.default,\n  [_token.TYPE.RETURNVALUE]: _returnvalueTokenParser.default,\n  [_token.TYPE.ROW]: _rowTokenParser.default,\n  [_token.TYPE.NBCROW]: _nbcrowTokenParser.default,\n  [_token.TYPE.SSPI]: _sspiTokenParser.default\n};\n\nclass EndOfMessageMarker {}\n\nclass Parser extends _readableStream.Transform {\n  constructor(debug, colMetadata, options) {\n    super({\n      objectMode: true\n    });\n    this.debug = debug;\n    this.colMetadata = colMetadata;\n    this.options = options;\n    this.endOfMessageMarker = new EndOfMessageMarker();\n    this.buffer = Buffer.alloc(0);\n    this.position = 0;\n    this.suspended = false;\n    this.next = undefined;\n  }\n\n  _transform(input, _encoding, done) {\n    if (input instanceof EndOfMessageMarker) {\n      return done(undefined, new _token.EndOfMessageToken());\n    }\n\n    if (this.position === this.buffer.length) {\n      this.buffer = input;\n    } else {\n      this.buffer = Buffer.concat([this.buffer.slice(this.position), input]);\n    }\n\n    this.position = 0;\n\n    if (this.suspended) {\n      // Unsuspend and continue from where ever we left off.\n      this.suspended = false;\n      const next = this.next;\n      next();\n    } // If we're no longer suspended, parse new tokens\n\n\n    if (!this.suspended) {\n      // Start the parser\n      this.parseTokens();\n    }\n\n    done();\n  }\n\n  parseTokens() {\n    const doneParsing = token => {\n      if (token) {\n        if (token instanceof _token.ColMetadataToken) {\n          this.colMetadata = token.columns;\n        }\n\n        this.push(token);\n      }\n    };\n\n    while (!this.suspended && this.position + 1 <= this.buffer.length) {\n      const type = this.buffer.readUInt8(this.position);\n      this.position += 1;\n\n      if (tokenParsers[type]) {\n        tokenParsers[type](this, this.colMetadata, this.options, doneParsing);\n      } else {\n        this.emit('error', new Error('Unknown type: ' + type));\n      }\n    }\n  }\n\n  suspend(next) {\n    this.suspended = true;\n    this.next = next;\n  }\n\n  awaitData(length, callback) {\n    if (this.position + length <= this.buffer.length) {\n      callback();\n    } else {\n      this.suspend(() => {\n        this.awaitData(length, callback);\n      });\n    }\n  }\n\n  readInt8(callback) {\n    this.awaitData(1, () => {\n      const data = this.buffer.readInt8(this.position);\n      this.position += 1;\n      callback(data);\n    });\n  }\n\n  readUInt8(callback) {\n    this.awaitData(1, () => {\n      const data = this.buffer.readUInt8(this.position);\n      this.position += 1;\n      callback(data);\n    });\n  }\n\n  readInt16LE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readInt16LE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n\n  readInt16BE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readInt16BE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n\n  readUInt16LE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readUInt16LE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n\n  readUInt16BE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readUInt16BE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n\n  readInt32LE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readInt32LE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readInt32BE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readInt32BE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readUInt32LE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readUInt32LE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readUInt32BE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readUInt32BE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readBigInt64LE(callback) {\n    this.awaitData(8, () => {\n      const result = _jsbi.default.add(_jsbi.default.leftShift(_jsbi.default.BigInt(this.buffer[this.position + 4] + this.buffer[this.position + 5] * Math.pow(2, 8) + this.buffer[this.position + 6] * Math.pow(2, 16) + (this.buffer[this.position + 7] << 24) // Overflow\n      ), _jsbi.default.BigInt(32)), _jsbi.default.BigInt(this.buffer[this.position] + this.buffer[this.position + 1] * Math.pow(2, 8) + this.buffer[this.position + 2] * Math.pow(2, 16) + this.buffer[this.position + 3] * Math.pow(2, 24)));\n\n      this.position += 8;\n      callback(result);\n    });\n  }\n\n  readInt64LE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readInt32LE(this.position + 4) + ((this.buffer[this.position + 4] & 0x80) === 0x80 ? 1 : -1) * this.buffer.readUInt32LE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readInt64BE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readInt32BE(this.position) + ((this.buffer[this.position] & 0x80) === 0x80 ? 1 : -1) * this.buffer.readUInt32BE(this.position + 4);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readBigUInt64LE(callback) {\n    this.awaitData(8, () => {\n      const low = _jsbi.default.BigInt(this.buffer.readUInt32LE(this.position));\n\n      const high = _jsbi.default.BigInt(this.buffer.readUInt32LE(this.position + 4));\n\n      this.position += 8;\n      callback(_jsbi.default.add(low, _jsbi.default.leftShift(high, _jsbi.default.BigInt(32))));\n    });\n  }\n\n  readUInt64LE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readUInt32LE(this.position + 4) + this.buffer.readUInt32LE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readUInt64BE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readUInt32BE(this.position) + this.buffer.readUInt32BE(this.position + 4);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readFloatLE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readFloatLE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readFloatBE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readFloatBE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readDoubleLE(callback) {\n    this.awaitData(8, () => {\n      const data = this.buffer.readDoubleLE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readDoubleBE(callback) {\n    this.awaitData(8, () => {\n      const data = this.buffer.readDoubleBE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readUInt24LE(callback) {\n    this.awaitData(3, () => {\n      const low = this.buffer.readUInt16LE(this.position);\n      const high = this.buffer.readUInt8(this.position + 2);\n      this.position += 3;\n      callback(low | high << 16);\n    });\n  }\n\n  readUInt40LE(callback) {\n    this.awaitData(5, () => {\n      const low = this.buffer.readUInt32LE(this.position);\n      const high = this.buffer.readUInt8(this.position + 4);\n      this.position += 5;\n      callback(0x100000000 * high + low);\n    });\n  }\n\n  readUNumeric64LE(callback) {\n    this.awaitData(8, () => {\n      const low = this.buffer.readUInt32LE(this.position);\n      const high = this.buffer.readUInt32LE(this.position + 4);\n      this.position += 8;\n      callback(0x100000000 * high + low);\n    });\n  }\n\n  readUNumeric96LE(callback) {\n    this.awaitData(12, () => {\n      const dword1 = this.buffer.readUInt32LE(this.position);\n      const dword2 = this.buffer.readUInt32LE(this.position + 4);\n      const dword3 = this.buffer.readUInt32LE(this.position + 8);\n      this.position += 12;\n      callback(dword1 + 0x100000000 * dword2 + 0x100000000 * 0x100000000 * dword3);\n    });\n  }\n\n  readUNumeric128LE(callback) {\n    this.awaitData(16, () => {\n      const dword1 = this.buffer.readUInt32LE(this.position);\n      const dword2 = this.buffer.readUInt32LE(this.position + 4);\n      const dword3 = this.buffer.readUInt32LE(this.position + 8);\n      const dword4 = this.buffer.readUInt32LE(this.position + 12);\n      this.position += 16;\n      callback(dword1 + 0x100000000 * dword2 + 0x100000000 * 0x100000000 * dword3 + 0x100000000 * 0x100000000 * 0x100000000 * dword4);\n    });\n  } // Variable length data\n\n\n  readBuffer(length, callback) {\n    this.awaitData(length, () => {\n      const data = this.buffer.slice(this.position, this.position + length);\n      this.position += length;\n      callback(data);\n    });\n  } // Read a Unicode String (BVARCHAR)\n\n\n  readBVarChar(callback) {\n    this.readUInt8(length => {\n      this.readBuffer(length * 2, data => {\n        callback(data.toString('ucs2'));\n      });\n    });\n  } // Read a Unicode String (USVARCHAR)\n\n\n  readUsVarChar(callback) {\n    this.readUInt16LE(length => {\n      this.readBuffer(length * 2, data => {\n        callback(data.toString('ucs2'));\n      });\n    });\n  } // Read binary data (BVARBYTE)\n\n\n  readBVarByte(callback) {\n    this.readUInt8(length => {\n      this.readBuffer(length, callback);\n    });\n  } // Read binary data (USVARBYTE)\n\n\n  readUsVarByte(callback) {\n    this.readUInt16LE(length => {\n      this.readBuffer(length, callback);\n    });\n  }\n\n}\n\nvar _default = Parser;\nexports.default = _default;\nmodule.exports = Parser;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/node_modules/tedious/lib/token/stream-parser.js"],"names":["Object","defineProperty","exports","value","default","_jsbi","_interopRequireDefault","require","_readableStream","_token","_colmetadataTokenParser","_doneTokenParser","_envChangeTokenParser","_infoerrorTokenParser","_fedauthInfoParser","_featureExtAckParser","_loginackTokenParser","_orderTokenParser","_returnstatusTokenParser","_returnvalueTokenParser","_rowTokenParser","_nbcrowTokenParser","_sspiTokenParser","obj","__esModule","tokenParsers","TYPE","COLMETADATA","DONE","doneParser","DONEINPROC","doneInProcParser","DONEPROC","doneProcParser","ENVCHANGE","ERROR","errorParser","FEDAUTHINFO","FEATUREEXTACK","INFO","infoParser","LOGINACK","ORDER","RETURNSTATUS","RETURNVALUE","ROW","NBCROW","SSPI","EndOfMessageMarker","Parser","Transform","constructor","debug","colMetadata","options","objectMode","endOfMessageMarker","buffer","Buffer","alloc","position","suspended","next","undefined","_transform","input","_encoding","done","EndOfMessageToken","length","concat","slice","parseTokens","doneParsing","token","ColMetadataToken","columns","push","type","readUInt8","emit","Error","suspend","awaitData","callback","readInt8","data","readInt16LE","readInt16BE","readUInt16LE","readUInt16BE","readInt32LE","readInt32BE","readUInt32LE","readUInt32BE","readBigInt64LE","result","add","leftShift","BigInt","Math","pow","readInt64LE","readInt64BE","readBigUInt64LE","low","high","readUInt64LE","readUInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","readUInt24LE","readUInt40LE","readUNumeric64LE","readUNumeric96LE","dword1","dword2","dword3","readUNumeric128LE","dword4","readBuffer","readBVarChar","toString","readUsVarChar","readBVarByte","readUsVarByte","_default","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,KAAK,GAAGC,sBAAsB,CAACC,OAAO,CAAC,MAAD,CAAR,CAAlC;;AAEA,IAAIC,eAAe,GAAGD,OAAO,CAAC,iBAAD,CAA7B;;AAEA,IAAIE,MAAM,GAAGF,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIG,uBAAuB,GAAGJ,sBAAsB,CAACC,OAAO,CAAC,4BAAD,CAAR,CAApD;;AAEA,IAAII,gBAAgB,GAAGJ,OAAO,CAAC,qBAAD,CAA9B;;AAEA,IAAIK,qBAAqB,GAAGN,sBAAsB,CAACC,OAAO,CAAC,2BAAD,CAAR,CAAlD;;AAEA,IAAIM,qBAAqB,GAAGN,OAAO,CAAC,0BAAD,CAAnC;;AAEA,IAAIO,kBAAkB,GAAGR,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAA/C;;AAEA,IAAIQ,oBAAoB,GAAGT,sBAAsB,CAACC,OAAO,CAAC,0BAAD,CAAR,CAAjD;;AAEA,IAAIS,oBAAoB,GAAGV,sBAAsB,CAACC,OAAO,CAAC,yBAAD,CAAR,CAAjD;;AAEA,IAAIU,iBAAiB,GAAGX,sBAAsB,CAACC,OAAO,CAAC,sBAAD,CAAR,CAA9C;;AAEA,IAAIW,wBAAwB,GAAGZ,sBAAsB,CAACC,OAAO,CAAC,6BAAD,CAAR,CAArD;;AAEA,IAAIY,uBAAuB,GAAGb,sBAAsB,CAACC,OAAO,CAAC,4BAAD,CAAR,CAApD;;AAEA,IAAIa,eAAe,GAAGd,sBAAsB,CAACC,OAAO,CAAC,oBAAD,CAAR,CAA5C;;AAEA,IAAIc,kBAAkB,GAAGf,sBAAsB,CAACC,OAAO,CAAC,uBAAD,CAAR,CAA/C;;AAEA,IAAIe,gBAAgB,GAAGhB,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA7C;;AAEA,SAASD,sBAAT,CAAgCiB,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEnB,IAAAA,OAAO,EAAEmB;AAAX,GAArC;AAAwD;;AAE/F,MAAME,YAAY,GAAG;AACnB,GAAChB,MAAM,CAACiB,IAAP,CAAYC,WAAb,GAA2BjB,uBAAuB,CAACN,OADhC;AAEnB,GAACK,MAAM,CAACiB,IAAP,CAAYE,IAAb,GAAoBjB,gBAAgB,CAACkB,UAFlB;AAGnB,GAACpB,MAAM,CAACiB,IAAP,CAAYI,UAAb,GAA0BnB,gBAAgB,CAACoB,gBAHxB;AAInB,GAACtB,MAAM,CAACiB,IAAP,CAAYM,QAAb,GAAwBrB,gBAAgB,CAACsB,cAJtB;AAKnB,GAACxB,MAAM,CAACiB,IAAP,CAAYQ,SAAb,GAAyBtB,qBAAqB,CAACR,OAL5B;AAMnB,GAACK,MAAM,CAACiB,IAAP,CAAYS,KAAb,GAAqBtB,qBAAqB,CAACuB,WANxB;AAOnB,GAAC3B,MAAM,CAACiB,IAAP,CAAYW,WAAb,GAA2BvB,kBAAkB,CAACV,OAP3B;AAQnB,GAACK,MAAM,CAACiB,IAAP,CAAYY,aAAb,GAA6BvB,oBAAoB,CAACX,OAR/B;AASnB,GAACK,MAAM,CAACiB,IAAP,CAAYa,IAAb,GAAoB1B,qBAAqB,CAAC2B,UATvB;AAUnB,GAAC/B,MAAM,CAACiB,IAAP,CAAYe,QAAb,GAAwBzB,oBAAoB,CAACZ,OAV1B;AAWnB,GAACK,MAAM,CAACiB,IAAP,CAAYgB,KAAb,GAAqBzB,iBAAiB,CAACb,OAXpB;AAYnB,GAACK,MAAM,CAACiB,IAAP,CAAYiB,YAAb,GAA4BzB,wBAAwB,CAACd,OAZlC;AAanB,GAACK,MAAM,CAACiB,IAAP,CAAYkB,WAAb,GAA2BzB,uBAAuB,CAACf,OAbhC;AAcnB,GAACK,MAAM,CAACiB,IAAP,CAAYmB,GAAb,GAAmBzB,eAAe,CAAChB,OAdhB;AAenB,GAACK,MAAM,CAACiB,IAAP,CAAYoB,MAAb,GAAsBzB,kBAAkB,CAACjB,OAftB;AAgBnB,GAACK,MAAM,CAACiB,IAAP,CAAYqB,IAAb,GAAoBzB,gBAAgB,CAAClB;AAhBlB,CAArB;;AAmBA,MAAM4C,kBAAN,CAAyB;;AAEzB,MAAMC,MAAN,SAAqBzC,eAAe,CAAC0C,SAArC,CAA+C;AAC7CC,EAAAA,WAAW,CAACC,KAAD,EAAQC,WAAR,EAAqBC,OAArB,EAA8B;AACvC,UAAM;AACJC,MAAAA,UAAU,EAAE;AADR,KAAN;AAGA,SAAKH,KAAL,GAAaA,KAAb;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKE,kBAAL,GAA0B,IAAIR,kBAAJ,EAA1B;AACA,SAAKS,MAAL,GAAcC,MAAM,CAACC,KAAP,CAAa,CAAb,CAAd;AACA,SAAKC,QAAL,GAAgB,CAAhB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,IAAL,GAAYC,SAAZ;AACD;;AAEDC,EAAAA,UAAU,CAACC,KAAD,EAAQC,SAAR,EAAmBC,IAAnB,EAAyB;AACjC,QAAIF,KAAK,YAAYjB,kBAArB,EAAyC;AACvC,aAAOmB,IAAI,CAACJ,SAAD,EAAY,IAAItD,MAAM,CAAC2D,iBAAX,EAAZ,CAAX;AACD;;AAED,QAAI,KAAKR,QAAL,KAAkB,KAAKH,MAAL,CAAYY,MAAlC,EAA0C;AACxC,WAAKZ,MAAL,GAAcQ,KAAd;AACD,KAFD,MAEO;AACL,WAAKR,MAAL,GAAcC,MAAM,CAACY,MAAP,CAAc,CAAC,KAAKb,MAAL,CAAYc,KAAZ,CAAkB,KAAKX,QAAvB,CAAD,EAAmCK,KAAnC,CAAd,CAAd;AACD;;AAED,SAAKL,QAAL,GAAgB,CAAhB;;AAEA,QAAI,KAAKC,SAAT,EAAoB;AAClB;AACA,WAAKA,SAAL,GAAiB,KAAjB;AACA,YAAMC,IAAI,GAAG,KAAKA,IAAlB;AACAA,MAAAA,IAAI;AACL,KAlBgC,CAkB/B;;;AAGF,QAAI,CAAC,KAAKD,SAAV,EAAqB;AACnB;AACA,WAAKW,WAAL;AACD;;AAEDL,IAAAA,IAAI;AACL;;AAEDK,EAAAA,WAAW,GAAG;AACZ,UAAMC,WAAW,GAAGC,KAAK,IAAI;AAC3B,UAAIA,KAAJ,EAAW;AACT,YAAIA,KAAK,YAAYjE,MAAM,CAACkE,gBAA5B,EAA8C;AAC5C,eAAKtB,WAAL,GAAmBqB,KAAK,CAACE,OAAzB;AACD;;AAED,aAAKC,IAAL,CAAUH,KAAV;AACD;AACF,KARD;;AAUA,WAAO,CAAC,KAAKb,SAAN,IAAmB,KAAKD,QAAL,GAAgB,CAAhB,IAAqB,KAAKH,MAAL,CAAYY,MAA3D,EAAmE;AACjE,YAAMS,IAAI,GAAG,KAAKrB,MAAL,CAAYsB,SAAZ,CAAsB,KAAKnB,QAA3B,CAAb;AACA,WAAKA,QAAL,IAAiB,CAAjB;;AAEA,UAAInC,YAAY,CAACqD,IAAD,CAAhB,EAAwB;AACtBrD,QAAAA,YAAY,CAACqD,IAAD,CAAZ,CAAmB,IAAnB,EAAyB,KAAKzB,WAA9B,EAA2C,KAAKC,OAAhD,EAAyDmB,WAAzD;AACD,OAFD,MAEO;AACL,aAAKO,IAAL,CAAU,OAAV,EAAmB,IAAIC,KAAJ,CAAU,mBAAmBH,IAA7B,CAAnB;AACD;AACF;AACF;;AAEDI,EAAAA,OAAO,CAACpB,IAAD,EAAO;AACZ,SAAKD,SAAL,GAAiB,IAAjB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACD;;AAEDqB,EAAAA,SAAS,CAACd,MAAD,EAASe,QAAT,EAAmB;AAC1B,QAAI,KAAKxB,QAAL,GAAgBS,MAAhB,IAA0B,KAAKZ,MAAL,CAAYY,MAA1C,EAAkD;AAChDe,MAAAA,QAAQ;AACT,KAFD,MAEO;AACL,WAAKF,OAAL,CAAa,MAAM;AACjB,aAAKC,SAAL,CAAed,MAAf,EAAuBe,QAAvB;AACD,OAFD;AAGD;AACF;;AAEDC,EAAAA,QAAQ,CAACD,QAAD,EAAW;AACjB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMG,IAAI,GAAG,KAAK7B,MAAL,CAAY4B,QAAZ,CAAqB,KAAKzB,QAA1B,CAAb;AACA,WAAKA,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAJD;AAKD;;AAEDP,EAAAA,SAAS,CAACK,QAAD,EAAW;AAClB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMG,IAAI,GAAG,KAAK7B,MAAL,CAAYsB,SAAZ,CAAsB,KAAKnB,QAA3B,CAAb;AACA,WAAKA,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAJD;AAKD;;AAEDC,EAAAA,WAAW,CAACH,QAAD,EAAW;AACpB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMG,IAAI,GAAG,KAAK7B,MAAL,CAAY8B,WAAZ,CAAwB,KAAK3B,QAA7B,CAAb;AACA,WAAKA,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAJD;AAKD;;AAEDE,EAAAA,WAAW,CAACJ,QAAD,EAAW;AACpB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMG,IAAI,GAAG,KAAK7B,MAAL,CAAY+B,WAAZ,CAAwB,KAAK5B,QAA7B,CAAb;AACA,WAAKA,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAJD;AAKD;;AAEDG,EAAAA,YAAY,CAACL,QAAD,EAAW;AACrB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMG,IAAI,GAAG,KAAK7B,MAAL,CAAYgC,YAAZ,CAAyB,KAAK7B,QAA9B,CAAb;AACA,WAAKA,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAJD;AAKD;;AAEDI,EAAAA,YAAY,CAACN,QAAD,EAAW;AACrB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMG,IAAI,GAAG,KAAK7B,MAAL,CAAYiC,YAAZ,CAAyB,KAAK9B,QAA9B,CAAb;AACA,WAAKA,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAJD;AAKD;;AAEDK,EAAAA,WAAW,CAACP,QAAD,EAAW;AACpB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMG,IAAI,GAAG,KAAK7B,MAAL,CAAYkC,WAAZ,CAAwB,KAAK/B,QAA7B,CAAb;AACA,WAAKA,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAJD;AAKD;;AAEDM,EAAAA,WAAW,CAACR,QAAD,EAAW;AACpB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMG,IAAI,GAAG,KAAK7B,MAAL,CAAYmC,WAAZ,CAAwB,KAAKhC,QAA7B,CAAb;AACA,WAAKA,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAJD;AAKD;;AAEDO,EAAAA,YAAY,CAACT,QAAD,EAAW;AACrB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMG,IAAI,GAAG,KAAK7B,MAAL,CAAYoC,YAAZ,CAAyB,KAAKjC,QAA9B,CAAb;AACA,WAAKA,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAJD;AAKD;;AAEDQ,EAAAA,YAAY,CAACV,QAAD,EAAW;AACrB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMG,IAAI,GAAG,KAAK7B,MAAL,CAAYqC,YAAZ,CAAyB,KAAKlC,QAA9B,CAAb;AACA,WAAKA,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAJD;AAKD;;AAEDS,EAAAA,cAAc,CAACX,QAAD,EAAW;AACvB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMa,MAAM,GAAG3F,KAAK,CAACD,OAAN,CAAc6F,GAAd,CAAkB5F,KAAK,CAACD,OAAN,CAAc8F,SAAd,CAAwB7F,KAAK,CAACD,OAAN,CAAc+F,MAAd,CAAqB,KAAK1C,MAAL,CAAY,KAAKG,QAAL,GAAgB,CAA5B,IAAiC,KAAKH,MAAL,CAAY,KAAKG,QAAL,GAAgB,CAA5B,IAAiCwC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,CAAZ,CAAlE,GAAmF,KAAK5C,MAAL,CAAY,KAAKG,QAAL,GAAgB,CAA5B,IAAiCwC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,CAApH,IAAuI,KAAK5C,MAAL,CAAY,KAAKG,QAAL,GAAgB,CAA5B,KAAkC,EAAzK,CAArB,CAAkM;AAAlM,OAAxB,EAC9BvD,KAAK,CAACD,OAAN,CAAc+F,MAAd,CAAqB,EAArB,CAD8B,CAAlB,EACe9F,KAAK,CAACD,OAAN,CAAc+F,MAAd,CAAqB,KAAK1C,MAAL,CAAY,KAAKG,QAAjB,IAA6B,KAAKH,MAAL,CAAY,KAAKG,QAAL,GAAgB,CAA5B,IAAiCwC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,CAAZ,CAA9D,GAA+E,KAAK5C,MAAL,CAAY,KAAKG,QAAL,GAAgB,CAA5B,IAAiCwC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,CAAhH,GAAkI,KAAK5C,MAAL,CAAY,KAAKG,QAAL,GAAgB,CAA5B,IAAiCwC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,CAAxL,CADf,CAAf;;AAGA,WAAKzC,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAACY,MAAD,CAAR;AACD,KAND;AAOD;;AAEDM,EAAAA,WAAW,CAAClB,QAAD,EAAW;AACpB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMG,IAAI,GAAGc,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,IAAkB,KAAK5C,MAAL,CAAYkC,WAAZ,CAAwB,KAAK/B,QAAL,GAAgB,CAAxC,CAAlB,GAA+D,CAAC,CAAC,KAAKH,MAAL,CAAY,KAAKG,QAAL,GAAgB,CAA5B,IAAiC,IAAlC,MAA4C,IAA5C,GAAmD,CAAnD,GAAuD,CAAC,CAAzD,IAA8D,KAAKH,MAAL,CAAYoC,YAAZ,CAAyB,KAAKjC,QAA9B,CAA1I;AACA,WAAKA,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAJD;AAKD;;AAEDiB,EAAAA,WAAW,CAACnB,QAAD,EAAW;AACpB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMG,IAAI,GAAGc,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,IAAkB,KAAK5C,MAAL,CAAYmC,WAAZ,CAAwB,KAAKhC,QAA7B,CAAlB,GAA2D,CAAC,CAAC,KAAKH,MAAL,CAAY,KAAKG,QAAjB,IAA6B,IAA9B,MAAwC,IAAxC,GAA+C,CAA/C,GAAmD,CAAC,CAArD,IAA0D,KAAKH,MAAL,CAAYqC,YAAZ,CAAyB,KAAKlC,QAAL,GAAgB,CAAzC,CAAlI;AACA,WAAKA,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAJD;AAKD;;AAEDkB,EAAAA,eAAe,CAACpB,QAAD,EAAW;AACxB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMsB,GAAG,GAAGpG,KAAK,CAACD,OAAN,CAAc+F,MAAd,CAAqB,KAAK1C,MAAL,CAAYoC,YAAZ,CAAyB,KAAKjC,QAA9B,CAArB,CAAZ;;AAEA,YAAM8C,IAAI,GAAGrG,KAAK,CAACD,OAAN,CAAc+F,MAAd,CAAqB,KAAK1C,MAAL,CAAYoC,YAAZ,CAAyB,KAAKjC,QAAL,GAAgB,CAAzC,CAArB,CAAb;;AAEA,WAAKA,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAAC/E,KAAK,CAACD,OAAN,CAAc6F,GAAd,CAAkBQ,GAAlB,EAAuBpG,KAAK,CAACD,OAAN,CAAc8F,SAAd,CAAwBQ,IAAxB,EAA8BrG,KAAK,CAACD,OAAN,CAAc+F,MAAd,CAAqB,EAArB,CAA9B,CAAvB,CAAD,CAAR;AACD,KAPD;AAQD;;AAEDQ,EAAAA,YAAY,CAACvB,QAAD,EAAW;AACrB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMG,IAAI,GAAGc,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,IAAkB,KAAK5C,MAAL,CAAYoC,YAAZ,CAAyB,KAAKjC,QAAL,GAAgB,CAAzC,CAAlB,GAAgE,KAAKH,MAAL,CAAYoC,YAAZ,CAAyB,KAAKjC,QAA9B,CAA7E;AACA,WAAKA,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAJD;AAKD;;AAEDsB,EAAAA,YAAY,CAACxB,QAAD,EAAW;AACrB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMG,IAAI,GAAGc,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,EAAZ,IAAkB,KAAK5C,MAAL,CAAYqC,YAAZ,CAAyB,KAAKlC,QAA9B,CAAlB,GAA4D,KAAKH,MAAL,CAAYqC,YAAZ,CAAyB,KAAKlC,QAAL,GAAgB,CAAzC,CAAzE;AACA,WAAKA,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAJD;AAKD;;AAEDuB,EAAAA,WAAW,CAACzB,QAAD,EAAW;AACpB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMG,IAAI,GAAG,KAAK7B,MAAL,CAAYoD,WAAZ,CAAwB,KAAKjD,QAA7B,CAAb;AACA,WAAKA,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAJD;AAKD;;AAEDwB,EAAAA,WAAW,CAAC1B,QAAD,EAAW;AACpB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMG,IAAI,GAAG,KAAK7B,MAAL,CAAYqD,WAAZ,CAAwB,KAAKlD,QAA7B,CAAb;AACA,WAAKA,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAJD;AAKD;;AAEDyB,EAAAA,YAAY,CAAC3B,QAAD,EAAW;AACrB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMG,IAAI,GAAG,KAAK7B,MAAL,CAAYsD,YAAZ,CAAyB,KAAKnD,QAA9B,CAAb;AACA,WAAKA,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAJD;AAKD;;AAED0B,EAAAA,YAAY,CAAC5B,QAAD,EAAW;AACrB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMG,IAAI,GAAG,KAAK7B,MAAL,CAAYuD,YAAZ,CAAyB,KAAKpD,QAA9B,CAAb;AACA,WAAKA,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAJD;AAKD;;AAED2B,EAAAA,YAAY,CAAC7B,QAAD,EAAW;AACrB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMsB,GAAG,GAAG,KAAKhD,MAAL,CAAYgC,YAAZ,CAAyB,KAAK7B,QAA9B,CAAZ;AACA,YAAM8C,IAAI,GAAG,KAAKjD,MAAL,CAAYsB,SAAZ,CAAsB,KAAKnB,QAAL,GAAgB,CAAtC,CAAb;AACA,WAAKA,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAACqB,GAAG,GAAGC,IAAI,IAAI,EAAf,CAAR;AACD,KALD;AAMD;;AAEDQ,EAAAA,YAAY,CAAC9B,QAAD,EAAW;AACrB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMsB,GAAG,GAAG,KAAKhD,MAAL,CAAYoC,YAAZ,CAAyB,KAAKjC,QAA9B,CAAZ;AACA,YAAM8C,IAAI,GAAG,KAAKjD,MAAL,CAAYsB,SAAZ,CAAsB,KAAKnB,QAAL,GAAgB,CAAtC,CAAb;AACA,WAAKA,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAAC,cAAcsB,IAAd,GAAqBD,GAAtB,CAAR;AACD,KALD;AAMD;;AAEDU,EAAAA,gBAAgB,CAAC/B,QAAD,EAAW;AACzB,SAAKD,SAAL,CAAe,CAAf,EAAkB,MAAM;AACtB,YAAMsB,GAAG,GAAG,KAAKhD,MAAL,CAAYoC,YAAZ,CAAyB,KAAKjC,QAA9B,CAAZ;AACA,YAAM8C,IAAI,GAAG,KAAKjD,MAAL,CAAYoC,YAAZ,CAAyB,KAAKjC,QAAL,GAAgB,CAAzC,CAAb;AACA,WAAKA,QAAL,IAAiB,CAAjB;AACAwB,MAAAA,QAAQ,CAAC,cAAcsB,IAAd,GAAqBD,GAAtB,CAAR;AACD,KALD;AAMD;;AAEDW,EAAAA,gBAAgB,CAAChC,QAAD,EAAW;AACzB,SAAKD,SAAL,CAAe,EAAf,EAAmB,MAAM;AACvB,YAAMkC,MAAM,GAAG,KAAK5D,MAAL,CAAYoC,YAAZ,CAAyB,KAAKjC,QAA9B,CAAf;AACA,YAAM0D,MAAM,GAAG,KAAK7D,MAAL,CAAYoC,YAAZ,CAAyB,KAAKjC,QAAL,GAAgB,CAAzC,CAAf;AACA,YAAM2D,MAAM,GAAG,KAAK9D,MAAL,CAAYoC,YAAZ,CAAyB,KAAKjC,QAAL,GAAgB,CAAzC,CAAf;AACA,WAAKA,QAAL,IAAiB,EAAjB;AACAwB,MAAAA,QAAQ,CAACiC,MAAM,GAAG,cAAcC,MAAvB,GAAgC,cAAc,WAAd,GAA4BC,MAA7D,CAAR;AACD,KAND;AAOD;;AAEDC,EAAAA,iBAAiB,CAACpC,QAAD,EAAW;AAC1B,SAAKD,SAAL,CAAe,EAAf,EAAmB,MAAM;AACvB,YAAMkC,MAAM,GAAG,KAAK5D,MAAL,CAAYoC,YAAZ,CAAyB,KAAKjC,QAA9B,CAAf;AACA,YAAM0D,MAAM,GAAG,KAAK7D,MAAL,CAAYoC,YAAZ,CAAyB,KAAKjC,QAAL,GAAgB,CAAzC,CAAf;AACA,YAAM2D,MAAM,GAAG,KAAK9D,MAAL,CAAYoC,YAAZ,CAAyB,KAAKjC,QAAL,GAAgB,CAAzC,CAAf;AACA,YAAM6D,MAAM,GAAG,KAAKhE,MAAL,CAAYoC,YAAZ,CAAyB,KAAKjC,QAAL,GAAgB,EAAzC,CAAf;AACA,WAAKA,QAAL,IAAiB,EAAjB;AACAwB,MAAAA,QAAQ,CAACiC,MAAM,GAAG,cAAcC,MAAvB,GAAgC,cAAc,WAAd,GAA4BC,MAA5D,GAAqE,cAAc,WAAd,GAA4B,WAA5B,GAA0CE,MAAhH,CAAR;AACD,KAPD;AAQD,GArS4C,CAqS3C;;;AAGFC,EAAAA,UAAU,CAACrD,MAAD,EAASe,QAAT,EAAmB;AAC3B,SAAKD,SAAL,CAAed,MAAf,EAAuB,MAAM;AAC3B,YAAMiB,IAAI,GAAG,KAAK7B,MAAL,CAAYc,KAAZ,CAAkB,KAAKX,QAAvB,EAAiC,KAAKA,QAAL,GAAgBS,MAAjD,CAAb;AACA,WAAKT,QAAL,IAAiBS,MAAjB;AACAe,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAJD;AAKD,GA9S4C,CA8S3C;;;AAGFqC,EAAAA,YAAY,CAACvC,QAAD,EAAW;AACrB,SAAKL,SAAL,CAAeV,MAAM,IAAI;AACvB,WAAKqD,UAAL,CAAgBrD,MAAM,GAAG,CAAzB,EAA4BiB,IAAI,IAAI;AAClCF,QAAAA,QAAQ,CAACE,IAAI,CAACsC,QAAL,CAAc,MAAd,CAAD,CAAR;AACD,OAFD;AAGD,KAJD;AAKD,GAvT4C,CAuT3C;;;AAGFC,EAAAA,aAAa,CAACzC,QAAD,EAAW;AACtB,SAAKK,YAAL,CAAkBpB,MAAM,IAAI;AAC1B,WAAKqD,UAAL,CAAgBrD,MAAM,GAAG,CAAzB,EAA4BiB,IAAI,IAAI;AAClCF,QAAAA,QAAQ,CAACE,IAAI,CAACsC,QAAL,CAAc,MAAd,CAAD,CAAR;AACD,OAFD;AAGD,KAJD;AAKD,GAhU4C,CAgU3C;;;AAGFE,EAAAA,YAAY,CAAC1C,QAAD,EAAW;AACrB,SAAKL,SAAL,CAAeV,MAAM,IAAI;AACvB,WAAKqD,UAAL,CAAgBrD,MAAhB,EAAwBe,QAAxB;AACD,KAFD;AAGD,GAvU4C,CAuU3C;;;AAGF2C,EAAAA,aAAa,CAAC3C,QAAD,EAAW;AACtB,SAAKK,YAAL,CAAkBpB,MAAM,IAAI;AAC1B,WAAKqD,UAAL,CAAgBrD,MAAhB,EAAwBe,QAAxB;AACD,KAFD;AAGD;;AA9U4C;;AAkV/C,IAAI4C,QAAQ,GAAG/E,MAAf;AACA/C,OAAO,CAACE,OAAR,GAAkB4H,QAAlB;AACAC,MAAM,CAAC/H,OAAP,GAAiB+C,MAAjB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _jsbi = _interopRequireDefault(require(\"jsbi\"));\n\nvar _readableStream = require(\"readable-stream\");\n\nvar _token = require(\"./token\");\n\nvar _colmetadataTokenParser = _interopRequireDefault(require(\"./colmetadata-token-parser\"));\n\nvar _doneTokenParser = require(\"./done-token-parser\");\n\nvar _envChangeTokenParser = _interopRequireDefault(require(\"./env-change-token-parser\"));\n\nvar _infoerrorTokenParser = require(\"./infoerror-token-parser\");\n\nvar _fedauthInfoParser = _interopRequireDefault(require(\"./fedauth-info-parser\"));\n\nvar _featureExtAckParser = _interopRequireDefault(require(\"./feature-ext-ack-parser\"));\n\nvar _loginackTokenParser = _interopRequireDefault(require(\"./loginack-token-parser\"));\n\nvar _orderTokenParser = _interopRequireDefault(require(\"./order-token-parser\"));\n\nvar _returnstatusTokenParser = _interopRequireDefault(require(\"./returnstatus-token-parser\"));\n\nvar _returnvalueTokenParser = _interopRequireDefault(require(\"./returnvalue-token-parser\"));\n\nvar _rowTokenParser = _interopRequireDefault(require(\"./row-token-parser\"));\n\nvar _nbcrowTokenParser = _interopRequireDefault(require(\"./nbcrow-token-parser\"));\n\nvar _sspiTokenParser = _interopRequireDefault(require(\"./sspi-token-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst tokenParsers = {\n  [_token.TYPE.COLMETADATA]: _colmetadataTokenParser.default,\n  [_token.TYPE.DONE]: _doneTokenParser.doneParser,\n  [_token.TYPE.DONEINPROC]: _doneTokenParser.doneInProcParser,\n  [_token.TYPE.DONEPROC]: _doneTokenParser.doneProcParser,\n  [_token.TYPE.ENVCHANGE]: _envChangeTokenParser.default,\n  [_token.TYPE.ERROR]: _infoerrorTokenParser.errorParser,\n  [_token.TYPE.FEDAUTHINFO]: _fedauthInfoParser.default,\n  [_token.TYPE.FEATUREEXTACK]: _featureExtAckParser.default,\n  [_token.TYPE.INFO]: _infoerrorTokenParser.infoParser,\n  [_token.TYPE.LOGINACK]: _loginackTokenParser.default,\n  [_token.TYPE.ORDER]: _orderTokenParser.default,\n  [_token.TYPE.RETURNSTATUS]: _returnstatusTokenParser.default,\n  [_token.TYPE.RETURNVALUE]: _returnvalueTokenParser.default,\n  [_token.TYPE.ROW]: _rowTokenParser.default,\n  [_token.TYPE.NBCROW]: _nbcrowTokenParser.default,\n  [_token.TYPE.SSPI]: _sspiTokenParser.default\n};\n\nclass EndOfMessageMarker {}\n\nclass Parser extends _readableStream.Transform {\n  constructor(debug, colMetadata, options) {\n    super({\n      objectMode: true\n    });\n    this.debug = debug;\n    this.colMetadata = colMetadata;\n    this.options = options;\n    this.endOfMessageMarker = new EndOfMessageMarker();\n    this.buffer = Buffer.alloc(0);\n    this.position = 0;\n    this.suspended = false;\n    this.next = undefined;\n  }\n\n  _transform(input, _encoding, done) {\n    if (input instanceof EndOfMessageMarker) {\n      return done(undefined, new _token.EndOfMessageToken());\n    }\n\n    if (this.position === this.buffer.length) {\n      this.buffer = input;\n    } else {\n      this.buffer = Buffer.concat([this.buffer.slice(this.position), input]);\n    }\n\n    this.position = 0;\n\n    if (this.suspended) {\n      // Unsuspend and continue from where ever we left off.\n      this.suspended = false;\n      const next = this.next;\n      next();\n    } // If we're no longer suspended, parse new tokens\n\n\n    if (!this.suspended) {\n      // Start the parser\n      this.parseTokens();\n    }\n\n    done();\n  }\n\n  parseTokens() {\n    const doneParsing = token => {\n      if (token) {\n        if (token instanceof _token.ColMetadataToken) {\n          this.colMetadata = token.columns;\n        }\n\n        this.push(token);\n      }\n    };\n\n    while (!this.suspended && this.position + 1 <= this.buffer.length) {\n      const type = this.buffer.readUInt8(this.position);\n      this.position += 1;\n\n      if (tokenParsers[type]) {\n        tokenParsers[type](this, this.colMetadata, this.options, doneParsing);\n      } else {\n        this.emit('error', new Error('Unknown type: ' + type));\n      }\n    }\n  }\n\n  suspend(next) {\n    this.suspended = true;\n    this.next = next;\n  }\n\n  awaitData(length, callback) {\n    if (this.position + length <= this.buffer.length) {\n      callback();\n    } else {\n      this.suspend(() => {\n        this.awaitData(length, callback);\n      });\n    }\n  }\n\n  readInt8(callback) {\n    this.awaitData(1, () => {\n      const data = this.buffer.readInt8(this.position);\n      this.position += 1;\n      callback(data);\n    });\n  }\n\n  readUInt8(callback) {\n    this.awaitData(1, () => {\n      const data = this.buffer.readUInt8(this.position);\n      this.position += 1;\n      callback(data);\n    });\n  }\n\n  readInt16LE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readInt16LE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n\n  readInt16BE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readInt16BE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n\n  readUInt16LE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readUInt16LE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n\n  readUInt16BE(callback) {\n    this.awaitData(2, () => {\n      const data = this.buffer.readUInt16BE(this.position);\n      this.position += 2;\n      callback(data);\n    });\n  }\n\n  readInt32LE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readInt32LE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readInt32BE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readInt32BE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readUInt32LE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readUInt32LE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readUInt32BE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readUInt32BE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readBigInt64LE(callback) {\n    this.awaitData(8, () => {\n      const result = _jsbi.default.add(_jsbi.default.leftShift(_jsbi.default.BigInt(this.buffer[this.position + 4] + this.buffer[this.position + 5] * Math.pow(2, 8) + this.buffer[this.position + 6] * Math.pow(2, 16) + (this.buffer[this.position + 7] << 24) // Overflow\n      ), _jsbi.default.BigInt(32)), _jsbi.default.BigInt(this.buffer[this.position] + this.buffer[this.position + 1] * Math.pow(2, 8) + this.buffer[this.position + 2] * Math.pow(2, 16) + this.buffer[this.position + 3] * Math.pow(2, 24)));\n\n      this.position += 8;\n      callback(result);\n    });\n  }\n\n  readInt64LE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readInt32LE(this.position + 4) + ((this.buffer[this.position + 4] & 0x80) === 0x80 ? 1 : -1) * this.buffer.readUInt32LE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readInt64BE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readInt32BE(this.position) + ((this.buffer[this.position] & 0x80) === 0x80 ? 1 : -1) * this.buffer.readUInt32BE(this.position + 4);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readBigUInt64LE(callback) {\n    this.awaitData(8, () => {\n      const low = _jsbi.default.BigInt(this.buffer.readUInt32LE(this.position));\n\n      const high = _jsbi.default.BigInt(this.buffer.readUInt32LE(this.position + 4));\n\n      this.position += 8;\n      callback(_jsbi.default.add(low, _jsbi.default.leftShift(high, _jsbi.default.BigInt(32))));\n    });\n  }\n\n  readUInt64LE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readUInt32LE(this.position + 4) + this.buffer.readUInt32LE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readUInt64BE(callback) {\n    this.awaitData(8, () => {\n      const data = Math.pow(2, 32) * this.buffer.readUInt32BE(this.position) + this.buffer.readUInt32BE(this.position + 4);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readFloatLE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readFloatLE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readFloatBE(callback) {\n    this.awaitData(4, () => {\n      const data = this.buffer.readFloatBE(this.position);\n      this.position += 4;\n      callback(data);\n    });\n  }\n\n  readDoubleLE(callback) {\n    this.awaitData(8, () => {\n      const data = this.buffer.readDoubleLE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readDoubleBE(callback) {\n    this.awaitData(8, () => {\n      const data = this.buffer.readDoubleBE(this.position);\n      this.position += 8;\n      callback(data);\n    });\n  }\n\n  readUInt24LE(callback) {\n    this.awaitData(3, () => {\n      const low = this.buffer.readUInt16LE(this.position);\n      const high = this.buffer.readUInt8(this.position + 2);\n      this.position += 3;\n      callback(low | high << 16);\n    });\n  }\n\n  readUInt40LE(callback) {\n    this.awaitData(5, () => {\n      const low = this.buffer.readUInt32LE(this.position);\n      const high = this.buffer.readUInt8(this.position + 4);\n      this.position += 5;\n      callback(0x100000000 * high + low);\n    });\n  }\n\n  readUNumeric64LE(callback) {\n    this.awaitData(8, () => {\n      const low = this.buffer.readUInt32LE(this.position);\n      const high = this.buffer.readUInt32LE(this.position + 4);\n      this.position += 8;\n      callback(0x100000000 * high + low);\n    });\n  }\n\n  readUNumeric96LE(callback) {\n    this.awaitData(12, () => {\n      const dword1 = this.buffer.readUInt32LE(this.position);\n      const dword2 = this.buffer.readUInt32LE(this.position + 4);\n      const dword3 = this.buffer.readUInt32LE(this.position + 8);\n      this.position += 12;\n      callback(dword1 + 0x100000000 * dword2 + 0x100000000 * 0x100000000 * dword3);\n    });\n  }\n\n  readUNumeric128LE(callback) {\n    this.awaitData(16, () => {\n      const dword1 = this.buffer.readUInt32LE(this.position);\n      const dword2 = this.buffer.readUInt32LE(this.position + 4);\n      const dword3 = this.buffer.readUInt32LE(this.position + 8);\n      const dword4 = this.buffer.readUInt32LE(this.position + 12);\n      this.position += 16;\n      callback(dword1 + 0x100000000 * dword2 + 0x100000000 * 0x100000000 * dword3 + 0x100000000 * 0x100000000 * 0x100000000 * dword4);\n    });\n  } // Variable length data\n\n\n  readBuffer(length, callback) {\n    this.awaitData(length, () => {\n      const data = this.buffer.slice(this.position, this.position + length);\n      this.position += length;\n      callback(data);\n    });\n  } // Read a Unicode String (BVARCHAR)\n\n\n  readBVarChar(callback) {\n    this.readUInt8(length => {\n      this.readBuffer(length * 2, data => {\n        callback(data.toString('ucs2'));\n      });\n    });\n  } // Read a Unicode String (USVARCHAR)\n\n\n  readUsVarChar(callback) {\n    this.readUInt16LE(length => {\n      this.readBuffer(length * 2, data => {\n        callback(data.toString('ucs2'));\n      });\n    });\n  } // Read binary data (BVARBYTE)\n\n\n  readBVarByte(callback) {\n    this.readUInt8(length => {\n      this.readBuffer(length, callback);\n    });\n  } // Read binary data (USVARBYTE)\n\n\n  readUsVarByte(callback) {\n    this.readUInt16LE(length => {\n      this.readBuffer(length, callback);\n    });\n  }\n\n}\n\nvar _default = Parser;\nexports.default = _default;\nmodule.exports = Parser;"]},"metadata":{},"sourceType":"script"}