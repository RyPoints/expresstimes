{"ast":null,"code":"'use strict';\n\nconst core = require('./index.js');\n\nconst EventEmitter = require('events').EventEmitter;\n\nfunction makeDoneCb(resolve, reject, localErr) {\n  return function (err, rows, fields) {\n    if (err) {\n      localErr.message = err.message;\n      localErr.code = err.code;\n      localErr.errno = err.errno;\n      localErr.sqlState = err.sqlState;\n      localErr.sqlMessage = err.sqlMessage;\n      reject(localErr);\n    } else {\n      resolve([rows, fields]);\n    }\n  };\n}\n\nfunction inheritEvents(source, target, events) {\n  const listeners = {};\n  target.on('newListener', eventName => {\n    if (events.indexOf(eventName) >= 0 && !target.listenerCount(eventName)) {\n      source.on(eventName, listeners[eventName] = function () {\n        const args = [].slice.call(arguments);\n        args.unshift(eventName);\n        target.emit.apply(target, args);\n      });\n    }\n  }).on('removeListener', eventName => {\n    if (events.indexOf(eventName) >= 0 && !target.listenerCount(eventName)) {\n      source.removeListener(eventName, listeners[eventName]);\n      delete listeners[eventName];\n    }\n  });\n}\n\nclass PromisePreparedStatementInfo {\n  constructor(statement, promiseImpl) {\n    this.statement = statement;\n    this.Promise = promiseImpl;\n  }\n\n  execute(parameters) {\n    const s = this.statement;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n\n      if (parameters) {\n        s.execute(parameters, done);\n      } else {\n        s.execute(done);\n      }\n    });\n  }\n\n  close() {\n    return new this.Promise(resolve => {\n      this.statement.close();\n      resolve();\n    });\n  }\n\n}\n\nclass PromiseConnection extends EventEmitter {\n  constructor(connection, promiseImpl) {\n    super();\n    this.connection = connection;\n    this.Promise = promiseImpl || global.Promise;\n    inheritEvents(connection, this, ['error', 'drain', 'connect', 'end', 'enqueue']);\n  }\n\n  release() {\n    this.connection.release();\n  }\n\n  query(query, params) {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n\n      if (params) {\n        c.query(query, params, done);\n      } else {\n        c.query(query, done);\n      }\n    });\n  }\n\n  execute(query, params) {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n\n      if (params) {\n        c.execute(query, params, done);\n      } else {\n        c.execute(query, done);\n      }\n    });\n  }\n\n  end() {\n    return new this.Promise(resolve => {\n      this.connection.end(resolve);\n    });\n  }\n\n  beginTransaction() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      c.beginTransaction(done);\n    });\n  }\n\n  commit() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      c.commit(done);\n    });\n  }\n\n  rollback() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      c.rollback(done);\n    });\n  }\n\n  ping() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      c.ping(done);\n    });\n  }\n\n  connect() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      c.connect((err, param) => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve(param);\n        }\n      });\n    });\n  }\n\n  prepare(options) {\n    const c = this.connection;\n    const promiseImpl = this.Promise;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      c.prepare(options, (err, statement) => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          const wrappedStatement = new PromisePreparedStatementInfo(statement, promiseImpl);\n          resolve(wrappedStatement);\n        }\n      });\n    });\n  }\n\n  changeUser(options) {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      c.changeUser(options, err => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n  get config() {\n    return this.connection.config;\n  }\n\n  get threadId() {\n    return this.connection.threadId;\n  }\n\n}\n\nfunction createConnection(opts) {\n  const coreConnection = core.createConnection(opts);\n  const createConnectionErr = new Error();\n  const Promise = opts.Promise || global.Promise;\n\n  if (!Promise) {\n    throw new Error('no Promise implementation available.' + 'Use promise-enabled node version or pass userland Promise' + \" implementation as parameter, for example: { Promise: require('bluebird') }\");\n  }\n\n  return new Promise((resolve, reject) => {\n    coreConnection.once('connect', () => {\n      resolve(new PromiseConnection(coreConnection, Promise));\n    });\n    coreConnection.once('error', err => {\n      createConnectionErr.message = err.message;\n      createConnectionErr.code = err.code;\n      createConnectionErr.errno = err.errno;\n      createConnectionErr.sqlState = err.sqlState;\n      reject(createConnectionErr);\n    });\n  });\n} // note: the callback of \"changeUser\" is not called on success\n// hence there is no possibility to call \"resolve\"\n// patching PromiseConnection\n// create facade functions for prototype functions on \"Connection\" that are not yet\n// implemented with PromiseConnection\n// proxy synchronous functions only\n\n\n(function (functionsToWrap) {\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\n    const func = functionsToWrap[i];\n\n    if (typeof core.Connection.prototype[func] === 'function' && PromiseConnection.prototype[func] === undefined) {\n      PromiseConnection.prototype[func] = function factory(funcName) {\n        return function () {\n          return core.Connection.prototype[funcName].apply(this.connection, arguments);\n        };\n      }(func);\n    }\n  }\n})([// synchronous functions\n'close', 'createBinlogStream', 'destroy', 'escape', 'escapeId', 'format', 'pause', 'pipe', 'resume', 'unprepare']);\n\nclass PromisePoolConnection extends PromiseConnection {\n  constructor(connection, promiseImpl) {\n    super(connection, promiseImpl);\n  }\n\n  destroy() {\n    return core.PoolConnection.prototype.destroy.apply(this.connection, arguments);\n  }\n\n}\n\nclass PromisePool extends EventEmitter {\n  constructor(pool, Promise) {\n    super();\n    this.pool = pool;\n    this.Promise = Promise || global.Promise;\n    inheritEvents(pool, this, ['acquire', 'connection', 'enqueue', 'release']);\n  }\n\n  getConnection() {\n    const corePool = this.pool;\n    return new this.Promise((resolve, reject) => {\n      corePool.getConnection((err, coreConnection) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(new PromisePoolConnection(coreConnection, this.Promise));\n        }\n      });\n    });\n  }\n\n  query(sql, args) {\n    const corePool = this.pool;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n\n      if (args) {\n        corePool.query(sql, args, done);\n      } else {\n        corePool.query(sql, done);\n      }\n    });\n  }\n\n  execute(sql, values) {\n    const corePool = this.pool;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      corePool.execute(sql, values, makeDoneCb(resolve, reject, localErr));\n    });\n  }\n\n  end() {\n    const corePool = this.pool;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      corePool.end(err => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n}\n\nfunction createPool(opts) {\n  const corePool = core.createPool(opts);\n  const Promise = opts.Promise || global.Promise;\n\n  if (!Promise) {\n    throw new Error('no Promise implementation available.' + 'Use promise-enabled node version or pass userland Promise' + \" implementation as parameter, for example: { Promise: require('bluebird') }\");\n  }\n\n  return new PromisePool(corePool, Promise);\n}\n\n(function (functionsToWrap) {\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\n    const func = functionsToWrap[i];\n\n    if (typeof core.Pool.prototype[func] === 'function' && PromisePool.prototype[func] === undefined) {\n      PromisePool.prototype[func] = function factory(funcName) {\n        return function () {\n          return core.Pool.prototype[funcName].apply(this.pool, arguments);\n        };\n      }(func);\n    }\n  }\n})([// synchronous functions\n'escape', 'escapeId', 'format']);\n\nexports.createConnection = createConnection;\nexports.createPool = createPool;\nexports.escape = core.escape;\nexports.escapeId = core.escapeId;\nexports.format = core.format;\nexports.raw = core.raw;\nexports.PromisePool = PromisePool;\nexports.PromiseConnection = PromiseConnection;\nexports.PromisePoolConnection = PromisePoolConnection;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp5/expresstimes/node_modules/mysql2/promise.js"],"names":["core","require","EventEmitter","makeDoneCb","resolve","reject","localErr","err","rows","fields","message","code","errno","sqlState","sqlMessage","inheritEvents","source","target","events","listeners","on","eventName","indexOf","listenerCount","args","slice","call","arguments","unshift","emit","apply","removeListener","PromisePreparedStatementInfo","constructor","statement","promiseImpl","Promise","execute","parameters","s","Error","done","close","PromiseConnection","connection","global","release","query","params","c","end","beginTransaction","commit","rollback","ping","connect","param","prepare","options","wrappedStatement","changeUser","config","threadId","createConnection","opts","coreConnection","createConnectionErr","once","functionsToWrap","i","length","func","Connection","prototype","undefined","factory","funcName","PromisePoolConnection","destroy","PoolConnection","PromisePool","pool","getConnection","corePool","sql","values","createPool","Pool","exports","escape","escapeId","format","raw"],"mappings":"AAAA;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAAC,YAAD,CAApB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,QAAD,CAAP,CAAkBC,YAAvC;;AAEA,SAASC,UAAT,CAAoBC,OAApB,EAA6BC,MAA7B,EAAqCC,QAArC,EAA+C;AAC7C,SAAO,UAASC,GAAT,EAAcC,IAAd,EAAoBC,MAApB,EAA4B;AACjC,QAAIF,GAAJ,EAAS;AACPD,MAAAA,QAAQ,CAACI,OAAT,GAAmBH,GAAG,CAACG,OAAvB;AACAJ,MAAAA,QAAQ,CAACK,IAAT,GAAgBJ,GAAG,CAACI,IAApB;AACAL,MAAAA,QAAQ,CAACM,KAAT,GAAiBL,GAAG,CAACK,KAArB;AACAN,MAAAA,QAAQ,CAACO,QAAT,GAAoBN,GAAG,CAACM,QAAxB;AACAP,MAAAA,QAAQ,CAACQ,UAAT,GAAsBP,GAAG,CAACO,UAA1B;AACAT,MAAAA,MAAM,CAACC,QAAD,CAAN;AACD,KAPD,MAOO;AACLF,MAAAA,OAAO,CAAC,CAACI,IAAD,EAAOC,MAAP,CAAD,CAAP;AACD;AACF,GAXD;AAYD;;AAED,SAASM,aAAT,CAAuBC,MAAvB,EAA+BC,MAA/B,EAAuCC,MAAvC,EAA+C;AAC7C,QAAMC,SAAS,GAAG,EAAlB;AACAF,EAAAA,MAAM,CACHG,EADH,CACM,aADN,EACqBC,SAAS,IAAI;AAC9B,QAAIH,MAAM,CAACI,OAAP,CAAeD,SAAf,KAA6B,CAA7B,IAAkC,CAACJ,MAAM,CAACM,aAAP,CAAqBF,SAArB,CAAvC,EAAwE;AACtEL,MAAAA,MAAM,CAACI,EAAP,CACEC,SADF,EAEGF,SAAS,CAACE,SAAD,CAAT,GAAuB,YAAW;AACjC,cAAMG,IAAI,GAAG,GAAGC,KAAH,CAASC,IAAT,CAAcC,SAAd,CAAb;AACAH,QAAAA,IAAI,CAACI,OAAL,CAAaP,SAAb;AAEAJ,QAAAA,MAAM,CAACY,IAAP,CAAYC,KAAZ,CAAkBb,MAAlB,EAA0BO,IAA1B;AACD,OAPH;AASD;AACF,GAbH,EAcGJ,EAdH,CAcM,gBAdN,EAcwBC,SAAS,IAAI;AACjC,QAAIH,MAAM,CAACI,OAAP,CAAeD,SAAf,KAA6B,CAA7B,IAAkC,CAACJ,MAAM,CAACM,aAAP,CAAqBF,SAArB,CAAvC,EAAwE;AACtEL,MAAAA,MAAM,CAACe,cAAP,CAAsBV,SAAtB,EAAiCF,SAAS,CAACE,SAAD,CAA1C;AACA,aAAOF,SAAS,CAACE,SAAD,CAAhB;AACD;AACF,GAnBH;AAoBD;;AAED,MAAMW,4BAAN,CAAmC;AACjCC,EAAAA,WAAW,CAACC,SAAD,EAAYC,WAAZ,EAAyB;AAClC,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKE,OAAL,GAAeD,WAAf;AACD;;AAEDE,EAAAA,OAAO,CAACC,UAAD,EAAa;AAClB,UAAMC,CAAC,GAAG,KAAKL,SAAf;AACA,UAAM5B,QAAQ,GAAG,IAAIkC,KAAJ,EAAjB;AACA,WAAO,IAAI,KAAKJ,OAAT,CAAiB,CAAChC,OAAD,EAAUC,MAAV,KAAqB;AAC3C,YAAMoC,IAAI,GAAGtC,UAAU,CAACC,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,CAAvB;;AACA,UAAIgC,UAAJ,EAAgB;AACdC,QAAAA,CAAC,CAACF,OAAF,CAAUC,UAAV,EAAsBG,IAAtB;AACD,OAFD,MAEO;AACLF,QAAAA,CAAC,CAACF,OAAF,CAAUI,IAAV;AACD;AACF,KAPM,CAAP;AAQD;;AAEDC,EAAAA,KAAK,GAAG;AACN,WAAO,IAAI,KAAKN,OAAT,CAAiBhC,OAAO,IAAI;AACjC,WAAK8B,SAAL,CAAeQ,KAAf;AACAtC,MAAAA,OAAO;AACR,KAHM,CAAP;AAID;;AAxBgC;;AA2BnC,MAAMuC,iBAAN,SAAgCzC,YAAhC,CAA6C;AAC3C+B,EAAAA,WAAW,CAACW,UAAD,EAAaT,WAAb,EAA0B;AACnC;AACA,SAAKS,UAAL,GAAkBA,UAAlB;AACA,SAAKR,OAAL,GAAeD,WAAW,IAAIU,MAAM,CAACT,OAArC;AACArB,IAAAA,aAAa,CAAC6B,UAAD,EAAa,IAAb,EAAmB,CAC9B,OAD8B,EAE9B,OAF8B,EAG9B,SAH8B,EAI9B,KAJ8B,EAK9B,SAL8B,CAAnB,CAAb;AAOD;;AAEDE,EAAAA,OAAO,GAAG;AACR,SAAKF,UAAL,CAAgBE,OAAhB;AACD;;AAEDC,EAAAA,KAAK,CAACA,KAAD,EAAQC,MAAR,EAAgB;AACnB,UAAMC,CAAC,GAAG,KAAKL,UAAf;AACA,UAAMtC,QAAQ,GAAG,IAAIkC,KAAJ,EAAjB;AACA,WAAO,IAAI,KAAKJ,OAAT,CAAiB,CAAChC,OAAD,EAAUC,MAAV,KAAqB;AAC3C,YAAMoC,IAAI,GAAGtC,UAAU,CAACC,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,CAAvB;;AACA,UAAI0C,MAAJ,EAAY;AACVC,QAAAA,CAAC,CAACF,KAAF,CAAQA,KAAR,EAAeC,MAAf,EAAuBP,IAAvB;AACD,OAFD,MAEO;AACLQ,QAAAA,CAAC,CAACF,KAAF,CAAQA,KAAR,EAAeN,IAAf;AACD;AACF,KAPM,CAAP;AAQD;;AAEDJ,EAAAA,OAAO,CAACU,KAAD,EAAQC,MAAR,EAAgB;AACrB,UAAMC,CAAC,GAAG,KAAKL,UAAf;AACA,UAAMtC,QAAQ,GAAG,IAAIkC,KAAJ,EAAjB;AACA,WAAO,IAAI,KAAKJ,OAAT,CAAiB,CAAChC,OAAD,EAAUC,MAAV,KAAqB;AAC3C,YAAMoC,IAAI,GAAGtC,UAAU,CAACC,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,CAAvB;;AACA,UAAI0C,MAAJ,EAAY;AACVC,QAAAA,CAAC,CAACZ,OAAF,CAAUU,KAAV,EAAiBC,MAAjB,EAAyBP,IAAzB;AACD,OAFD,MAEO;AACLQ,QAAAA,CAAC,CAACZ,OAAF,CAAUU,KAAV,EAAiBN,IAAjB;AACD;AACF,KAPM,CAAP;AAQD;;AAEDS,EAAAA,GAAG,GAAG;AACJ,WAAO,IAAI,KAAKd,OAAT,CAAiBhC,OAAO,IAAI;AACjC,WAAKwC,UAAL,CAAgBM,GAAhB,CAAoB9C,OAApB;AACD,KAFM,CAAP;AAGD;;AAED+C,EAAAA,gBAAgB,GAAG;AACjB,UAAMF,CAAC,GAAG,KAAKL,UAAf;AACA,UAAMtC,QAAQ,GAAG,IAAIkC,KAAJ,EAAjB;AACA,WAAO,IAAI,KAAKJ,OAAT,CAAiB,CAAChC,OAAD,EAAUC,MAAV,KAAqB;AAC3C,YAAMoC,IAAI,GAAGtC,UAAU,CAACC,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,CAAvB;AACA2C,MAAAA,CAAC,CAACE,gBAAF,CAAmBV,IAAnB;AACD,KAHM,CAAP;AAID;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAMH,CAAC,GAAG,KAAKL,UAAf;AACA,UAAMtC,QAAQ,GAAG,IAAIkC,KAAJ,EAAjB;AACA,WAAO,IAAI,KAAKJ,OAAT,CAAiB,CAAChC,OAAD,EAAUC,MAAV,KAAqB;AAC3C,YAAMoC,IAAI,GAAGtC,UAAU,CAACC,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,CAAvB;AACA2C,MAAAA,CAAC,CAACG,MAAF,CAASX,IAAT;AACD,KAHM,CAAP;AAID;;AAEDY,EAAAA,QAAQ,GAAG;AACT,UAAMJ,CAAC,GAAG,KAAKL,UAAf;AACA,UAAMtC,QAAQ,GAAG,IAAIkC,KAAJ,EAAjB;AACA,WAAO,IAAI,KAAKJ,OAAT,CAAiB,CAAChC,OAAD,EAAUC,MAAV,KAAqB;AAC3C,YAAMoC,IAAI,GAAGtC,UAAU,CAACC,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,CAAvB;AACA2C,MAAAA,CAAC,CAACI,QAAF,CAAWZ,IAAX;AACD,KAHM,CAAP;AAID;;AAEDa,EAAAA,IAAI,GAAG;AACL,UAAML,CAAC,GAAG,KAAKL,UAAf;AACA,UAAMtC,QAAQ,GAAG,IAAIkC,KAAJ,EAAjB;AACA,WAAO,IAAI,KAAKJ,OAAT,CAAiB,CAAChC,OAAD,EAAUC,MAAV,KAAqB;AAC3C,YAAMoC,IAAI,GAAGtC,UAAU,CAACC,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,CAAvB;AACA2C,MAAAA,CAAC,CAACK,IAAF,CAAOb,IAAP;AACD,KAHM,CAAP;AAID;;AAEDc,EAAAA,OAAO,GAAG;AACR,UAAMN,CAAC,GAAG,KAAKL,UAAf;AACA,UAAMtC,QAAQ,GAAG,IAAIkC,KAAJ,EAAjB;AACA,WAAO,IAAI,KAAKJ,OAAT,CAAiB,CAAChC,OAAD,EAAUC,MAAV,KAAqB;AAC3C4C,MAAAA,CAAC,CAACM,OAAF,CAAU,CAAChD,GAAD,EAAMiD,KAAN,KAAgB;AACxB,YAAIjD,GAAJ,EAAS;AACPD,UAAAA,QAAQ,CAACI,OAAT,GAAmBH,GAAG,CAACG,OAAvB;AACAJ,UAAAA,QAAQ,CAACK,IAAT,GAAgBJ,GAAG,CAACI,IAApB;AACAL,UAAAA,QAAQ,CAACM,KAAT,GAAiBL,GAAG,CAACK,KAArB;AACAN,UAAAA,QAAQ,CAACO,QAAT,GAAoBN,GAAG,CAACM,QAAxB;AACAP,UAAAA,QAAQ,CAACQ,UAAT,GAAsBP,GAAG,CAACO,UAA1B;AACAT,UAAAA,MAAM,CAACC,QAAD,CAAN;AACD,SAPD,MAOO;AACLF,UAAAA,OAAO,CAACoD,KAAD,CAAP;AACD;AACF,OAXD;AAYD,KAbM,CAAP;AAcD;;AAEDC,EAAAA,OAAO,CAACC,OAAD,EAAU;AACf,UAAMT,CAAC,GAAG,KAAKL,UAAf;AACA,UAAMT,WAAW,GAAG,KAAKC,OAAzB;AACA,UAAM9B,QAAQ,GAAG,IAAIkC,KAAJ,EAAjB;AACA,WAAO,IAAI,KAAKJ,OAAT,CAAiB,CAAChC,OAAD,EAAUC,MAAV,KAAqB;AAC3C4C,MAAAA,CAAC,CAACQ,OAAF,CAAUC,OAAV,EAAmB,CAACnD,GAAD,EAAM2B,SAAN,KAAoB;AACrC,YAAI3B,GAAJ,EAAS;AACPD,UAAAA,QAAQ,CAACI,OAAT,GAAmBH,GAAG,CAACG,OAAvB;AACAJ,UAAAA,QAAQ,CAACK,IAAT,GAAgBJ,GAAG,CAACI,IAApB;AACAL,UAAAA,QAAQ,CAACM,KAAT,GAAiBL,GAAG,CAACK,KAArB;AACAN,UAAAA,QAAQ,CAACO,QAAT,GAAoBN,GAAG,CAACM,QAAxB;AACAP,UAAAA,QAAQ,CAACQ,UAAT,GAAsBP,GAAG,CAACO,UAA1B;AACAT,UAAAA,MAAM,CAACC,QAAD,CAAN;AACD,SAPD,MAOO;AACL,gBAAMqD,gBAAgB,GAAG,IAAI3B,4BAAJ,CACvBE,SADuB,EAEvBC,WAFuB,CAAzB;AAIA/B,UAAAA,OAAO,CAACuD,gBAAD,CAAP;AACD;AACF,OAfD;AAgBD,KAjBM,CAAP;AAkBD;;AAEDC,EAAAA,UAAU,CAACF,OAAD,EAAU;AAClB,UAAMT,CAAC,GAAG,KAAKL,UAAf;AACA,UAAMtC,QAAQ,GAAG,IAAIkC,KAAJ,EAAjB;AACA,WAAO,IAAI,KAAKJ,OAAT,CAAiB,CAAChC,OAAD,EAAUC,MAAV,KAAqB;AAC3C4C,MAAAA,CAAC,CAACW,UAAF,CAAaF,OAAb,EAAsBnD,GAAG,IAAI;AAC3B,YAAIA,GAAJ,EAAS;AACPD,UAAAA,QAAQ,CAACI,OAAT,GAAmBH,GAAG,CAACG,OAAvB;AACAJ,UAAAA,QAAQ,CAACK,IAAT,GAAgBJ,GAAG,CAACI,IAApB;AACAL,UAAAA,QAAQ,CAACM,KAAT,GAAiBL,GAAG,CAACK,KAArB;AACAN,UAAAA,QAAQ,CAACO,QAAT,GAAoBN,GAAG,CAACM,QAAxB;AACAP,UAAAA,QAAQ,CAACQ,UAAT,GAAsBP,GAAG,CAACO,UAA1B;AACAT,UAAAA,MAAM,CAACC,QAAD,CAAN;AACD,SAPD,MAOO;AACLF,UAAAA,OAAO;AACR;AACF,OAXD;AAYD,KAbM,CAAP;AAcD;;AAED,MAAIyD,MAAJ,GAAa;AACX,WAAO,KAAKjB,UAAL,CAAgBiB,MAAvB;AACD;;AAED,MAAIC,QAAJ,GAAe;AACb,WAAO,KAAKlB,UAAL,CAAgBkB,QAAvB;AACD;;AA1J0C;;AA6J7C,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AAC9B,QAAMC,cAAc,GAAGjE,IAAI,CAAC+D,gBAAL,CAAsBC,IAAtB,CAAvB;AACA,QAAME,mBAAmB,GAAG,IAAI1B,KAAJ,EAA5B;AACA,QAAMJ,OAAO,GAAG4B,IAAI,CAAC5B,OAAL,IAAgBS,MAAM,CAACT,OAAvC;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,UAAM,IAAII,KAAJ,CACJ,yCACE,2DADF,GAEE,6EAHE,CAAN;AAKD;;AACD,SAAO,IAAIJ,OAAJ,CAAY,CAAChC,OAAD,EAAUC,MAAV,KAAqB;AACtC4D,IAAAA,cAAc,CAACE,IAAf,CAAoB,SAApB,EAA+B,MAAM;AACnC/D,MAAAA,OAAO,CAAC,IAAIuC,iBAAJ,CAAsBsB,cAAtB,EAAsC7B,OAAtC,CAAD,CAAP;AACD,KAFD;AAGA6B,IAAAA,cAAc,CAACE,IAAf,CAAoB,OAApB,EAA6B5D,GAAG,IAAI;AAClC2D,MAAAA,mBAAmB,CAACxD,OAApB,GAA8BH,GAAG,CAACG,OAAlC;AACAwD,MAAAA,mBAAmB,CAACvD,IAApB,GAA2BJ,GAAG,CAACI,IAA/B;AACAuD,MAAAA,mBAAmB,CAACtD,KAApB,GAA4BL,GAAG,CAACK,KAAhC;AACAsD,MAAAA,mBAAmB,CAACrD,QAApB,GAA+BN,GAAG,CAACM,QAAnC;AACAR,MAAAA,MAAM,CAAC6D,mBAAD,CAAN;AACD,KAND;AAOD,GAXM,CAAP;AAYD,C,CAED;AACA;AAEA;AACA;AACA;AAEA;;;AACA,CAAC,UAASE,eAAT,EAA0B;AACzB,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBD,eAAe,IAAIC,CAAC,GAAGD,eAAe,CAACE,MAAvD,EAA+DD,CAAC,EAAhE,EAAoE;AAClE,UAAME,IAAI,GAAGH,eAAe,CAACC,CAAD,CAA5B;;AAEA,QACE,OAAOrE,IAAI,CAACwE,UAAL,CAAgBC,SAAhB,CAA0BF,IAA1B,CAAP,KAA2C,UAA3C,IACA5B,iBAAiB,CAAC8B,SAAlB,CAA4BF,IAA5B,MAAsCG,SAFxC,EAGE;AACA/B,MAAAA,iBAAiB,CAAC8B,SAAlB,CAA4BF,IAA5B,IAAqC,SAASI,OAAT,CAAiBC,QAAjB,EAA2B;AAC9D,eAAO,YAAW;AAChB,iBAAO5E,IAAI,CAACwE,UAAL,CAAgBC,SAAhB,CAA0BG,QAA1B,EAAoC9C,KAApC,CACL,KAAKc,UADA,EAELjB,SAFK,CAAP;AAID,SALD;AAMD,OAPmC,CAOjC4C,IAPiC,CAApC;AAQD;AACF;AACF,CAlBD,EAkBG,CACD;AACA,OAFC,EAGD,oBAHC,EAID,SAJC,EAKD,QALC,EAMD,UANC,EAOD,QAPC,EAQD,OARC,EASD,MATC,EAUD,QAVC,EAWD,WAXC,CAlBH;;AAgCA,MAAMM,qBAAN,SAAoClC,iBAApC,CAAsD;AACpDV,EAAAA,WAAW,CAACW,UAAD,EAAaT,WAAb,EAA0B;AACnC,UAAMS,UAAN,EAAkBT,WAAlB;AACD;;AAED2C,EAAAA,OAAO,GAAG;AACR,WAAO9E,IAAI,CAAC+E,cAAL,CAAoBN,SAApB,CAA8BK,OAA9B,CAAsChD,KAAtC,CACL,KAAKc,UADA,EAELjB,SAFK,CAAP;AAID;;AAVmD;;AAatD,MAAMqD,WAAN,SAA0B9E,YAA1B,CAAuC;AACrC+B,EAAAA,WAAW,CAACgD,IAAD,EAAO7C,OAAP,EAAgB;AACzB;AACA,SAAK6C,IAAL,GAAYA,IAAZ;AACA,SAAK7C,OAAL,GAAeA,OAAO,IAAIS,MAAM,CAACT,OAAjC;AACArB,IAAAA,aAAa,CAACkE,IAAD,EAAO,IAAP,EAAa,CAAC,SAAD,EAAY,YAAZ,EAA0B,SAA1B,EAAqC,SAArC,CAAb,CAAb;AACD;;AAEDC,EAAAA,aAAa,GAAG;AACd,UAAMC,QAAQ,GAAG,KAAKF,IAAtB;AACA,WAAO,IAAI,KAAK7C,OAAT,CAAiB,CAAChC,OAAD,EAAUC,MAAV,KAAqB;AAC3C8E,MAAAA,QAAQ,CAACD,aAAT,CAAuB,CAAC3E,GAAD,EAAM0D,cAAN,KAAyB;AAC9C,YAAI1D,GAAJ,EAAS;AACPF,UAAAA,MAAM,CAACE,GAAD,CAAN;AACD,SAFD,MAEO;AACLH,UAAAA,OAAO,CAAC,IAAIyE,qBAAJ,CAA0BZ,cAA1B,EAA0C,KAAK7B,OAA/C,CAAD,CAAP;AACD;AACF,OAND;AAOD,KARM,CAAP;AASD;;AAEDW,EAAAA,KAAK,CAACqC,GAAD,EAAM5D,IAAN,EAAY;AACf,UAAM2D,QAAQ,GAAG,KAAKF,IAAtB;AACA,UAAM3E,QAAQ,GAAG,IAAIkC,KAAJ,EAAjB;AACA,WAAO,IAAI,KAAKJ,OAAT,CAAiB,CAAChC,OAAD,EAAUC,MAAV,KAAqB;AAC3C,YAAMoC,IAAI,GAAGtC,UAAU,CAACC,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,CAAvB;;AACA,UAAIkB,IAAJ,EAAU;AACR2D,QAAAA,QAAQ,CAACpC,KAAT,CAAeqC,GAAf,EAAoB5D,IAApB,EAA0BiB,IAA1B;AACD,OAFD,MAEO;AACL0C,QAAAA,QAAQ,CAACpC,KAAT,CAAeqC,GAAf,EAAoB3C,IAApB;AACD;AACF,KAPM,CAAP;AAQD;;AAEDJ,EAAAA,OAAO,CAAC+C,GAAD,EAAMC,MAAN,EAAc;AACnB,UAAMF,QAAQ,GAAG,KAAKF,IAAtB;AACA,UAAM3E,QAAQ,GAAG,IAAIkC,KAAJ,EAAjB;AACA,WAAO,IAAI,KAAKJ,OAAT,CAAiB,CAAChC,OAAD,EAAUC,MAAV,KAAqB;AAC3C8E,MAAAA,QAAQ,CAAC9C,OAAT,CAAiB+C,GAAjB,EAAsBC,MAAtB,EAA8BlF,UAAU,CAACC,OAAD,EAAUC,MAAV,EAAkBC,QAAlB,CAAxC;AACD,KAFM,CAAP;AAGD;;AAED4C,EAAAA,GAAG,GAAG;AACJ,UAAMiC,QAAQ,GAAG,KAAKF,IAAtB;AACA,UAAM3E,QAAQ,GAAG,IAAIkC,KAAJ,EAAjB;AACA,WAAO,IAAI,KAAKJ,OAAT,CAAiB,CAAChC,OAAD,EAAUC,MAAV,KAAqB;AAC3C8E,MAAAA,QAAQ,CAACjC,GAAT,CAAa3C,GAAG,IAAI;AAClB,YAAIA,GAAJ,EAAS;AACPD,UAAAA,QAAQ,CAACI,OAAT,GAAmBH,GAAG,CAACG,OAAvB;AACAJ,UAAAA,QAAQ,CAACK,IAAT,GAAgBJ,GAAG,CAACI,IAApB;AACAL,UAAAA,QAAQ,CAACM,KAAT,GAAiBL,GAAG,CAACK,KAArB;AACAN,UAAAA,QAAQ,CAACO,QAAT,GAAoBN,GAAG,CAACM,QAAxB;AACAP,UAAAA,QAAQ,CAACQ,UAAT,GAAsBP,GAAG,CAACO,UAA1B;AACAT,UAAAA,MAAM,CAACC,QAAD,CAAN;AACD,SAPD,MAOO;AACLF,UAAAA,OAAO;AACR;AACF,OAXD;AAYD,KAbM,CAAP;AAcD;;AA3DoC;;AA8DvC,SAASkF,UAAT,CAAoBtB,IAApB,EAA0B;AACxB,QAAMmB,QAAQ,GAAGnF,IAAI,CAACsF,UAAL,CAAgBtB,IAAhB,CAAjB;AACA,QAAM5B,OAAO,GAAG4B,IAAI,CAAC5B,OAAL,IAAgBS,MAAM,CAACT,OAAvC;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,UAAM,IAAII,KAAJ,CACJ,yCACE,2DADF,GAEE,6EAHE,CAAN;AAKD;;AAED,SAAO,IAAIwC,WAAJ,CAAgBG,QAAhB,EAA0B/C,OAA1B,CAAP;AACD;;AAED,CAAC,UAASgC,eAAT,EAA0B;AACzB,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBD,eAAe,IAAIC,CAAC,GAAGD,eAAe,CAACE,MAAvD,EAA+DD,CAAC,EAAhE,EAAoE;AAClE,UAAME,IAAI,GAAGH,eAAe,CAACC,CAAD,CAA5B;;AAEA,QACE,OAAOrE,IAAI,CAACuF,IAAL,CAAUd,SAAV,CAAoBF,IAApB,CAAP,KAAqC,UAArC,IACAS,WAAW,CAACP,SAAZ,CAAsBF,IAAtB,MAAgCG,SAFlC,EAGE;AACAM,MAAAA,WAAW,CAACP,SAAZ,CAAsBF,IAAtB,IAA+B,SAASI,OAAT,CAAiBC,QAAjB,EAA2B;AACxD,eAAO,YAAW;AAChB,iBAAO5E,IAAI,CAACuF,IAAL,CAAUd,SAAV,CAAoBG,QAApB,EAA8B9C,KAA9B,CAAoC,KAAKmD,IAAzC,EAA+CtD,SAA/C,CAAP;AACD,SAFD;AAGD,OAJ6B,CAI3B4C,IAJ2B,CAA9B;AAKD;AACF;AACF,CAfD,EAeG,CACD;AACA,QAFC,EAGD,UAHC,EAID,QAJC,CAfH;;AAsBAiB,OAAO,CAACzB,gBAAR,GAA2BA,gBAA3B;AACAyB,OAAO,CAACF,UAAR,GAAqBA,UAArB;AACAE,OAAO,CAACC,MAAR,GAAiBzF,IAAI,CAACyF,MAAtB;AACAD,OAAO,CAACE,QAAR,GAAmB1F,IAAI,CAAC0F,QAAxB;AACAF,OAAO,CAACG,MAAR,GAAiB3F,IAAI,CAAC2F,MAAtB;AACAH,OAAO,CAACI,GAAR,GAAc5F,IAAI,CAAC4F,GAAnB;AACAJ,OAAO,CAACR,WAAR,GAAsBA,WAAtB;AACAQ,OAAO,CAAC7C,iBAAR,GAA4BA,iBAA5B;AACA6C,OAAO,CAACX,qBAAR,GAAgCA,qBAAhC","sourcesContent":["'use strict';\n\nconst core = require('./index.js');\nconst EventEmitter = require('events').EventEmitter;\n\nfunction makeDoneCb(resolve, reject, localErr) {\n  return function(err, rows, fields) {\n    if (err) {\n      localErr.message = err.message;\n      localErr.code = err.code;\n      localErr.errno = err.errno;\n      localErr.sqlState = err.sqlState;\n      localErr.sqlMessage = err.sqlMessage;\n      reject(localErr);\n    } else {\n      resolve([rows, fields]);\n    }\n  };\n}\n\nfunction inheritEvents(source, target, events) {\n  const listeners = {};\n  target\n    .on('newListener', eventName => {\n      if (events.indexOf(eventName) >= 0 && !target.listenerCount(eventName)) {\n        source.on(\n          eventName,\n          (listeners[eventName] = function() {\n            const args = [].slice.call(arguments);\n            args.unshift(eventName);\n\n            target.emit.apply(target, args);\n          })\n        );\n      }\n    })\n    .on('removeListener', eventName => {\n      if (events.indexOf(eventName) >= 0 && !target.listenerCount(eventName)) {\n        source.removeListener(eventName, listeners[eventName]);\n        delete listeners[eventName];\n      }\n    });\n}\n\nclass PromisePreparedStatementInfo {\n  constructor(statement, promiseImpl) {\n    this.statement = statement;\n    this.Promise = promiseImpl;\n  }\n\n  execute(parameters) {\n    const s = this.statement;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (parameters) {\n        s.execute(parameters, done);\n      } else {\n        s.execute(done);\n      }\n    });\n  }\n\n  close() {\n    return new this.Promise(resolve => {\n      this.statement.close();\n      resolve();\n    });\n  }\n}\n\nclass PromiseConnection extends EventEmitter {\n  constructor(connection, promiseImpl) {\n    super();\n    this.connection = connection;\n    this.Promise = promiseImpl || global.Promise;\n    inheritEvents(connection, this, [\n      'error',\n      'drain',\n      'connect',\n      'end',\n      'enqueue'\n    ]);\n  }\n\n  release() {\n    this.connection.release();\n  }\n\n  query(query, params) {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (params) {\n        c.query(query, params, done);\n      } else {\n        c.query(query, done);\n      }\n    });\n  }\n\n  execute(query, params) {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (params) {\n        c.execute(query, params, done);\n      } else {\n        c.execute(query, done);\n      }\n    });\n  }\n\n  end() {\n    return new this.Promise(resolve => {\n      this.connection.end(resolve);\n    });\n  }\n\n  beginTransaction() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      c.beginTransaction(done);\n    });\n  }\n\n  commit() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      c.commit(done);\n    });\n  }\n\n  rollback() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      c.rollback(done);\n    });\n  }\n\n  ping() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      c.ping(done);\n    });\n  }\n\n  connect() {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      c.connect((err, param) => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve(param);\n        }\n      });\n    });\n  }\n\n  prepare(options) {\n    const c = this.connection;\n    const promiseImpl = this.Promise;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      c.prepare(options, (err, statement) => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          const wrappedStatement = new PromisePreparedStatementInfo(\n            statement,\n            promiseImpl\n          );\n          resolve(wrappedStatement);\n        }\n      });\n    });\n  }\n\n  changeUser(options) {\n    const c = this.connection;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      c.changeUser(options, err => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n  get config() {\n    return this.connection.config;\n  }\n\n  get threadId() {\n    return this.connection.threadId;\n  }\n}\n\nfunction createConnection(opts) {\n  const coreConnection = core.createConnection(opts);\n  const createConnectionErr = new Error();\n  const Promise = opts.Promise || global.Promise;\n  if (!Promise) {\n    throw new Error(\n      'no Promise implementation available.' +\n        'Use promise-enabled node version or pass userland Promise' +\n        \" implementation as parameter, for example: { Promise: require('bluebird') }\"\n    );\n  }\n  return new Promise((resolve, reject) => {\n    coreConnection.once('connect', () => {\n      resolve(new PromiseConnection(coreConnection, Promise));\n    });\n    coreConnection.once('error', err => {\n      createConnectionErr.message = err.message;\n      createConnectionErr.code = err.code;\n      createConnectionErr.errno = err.errno;\n      createConnectionErr.sqlState = err.sqlState;\n      reject(createConnectionErr);\n    });\n  });\n}\n\n// note: the callback of \"changeUser\" is not called on success\n// hence there is no possibility to call \"resolve\"\n\n// patching PromiseConnection\n// create facade functions for prototype functions on \"Connection\" that are not yet\n// implemented with PromiseConnection\n\n// proxy synchronous functions only\n(function(functionsToWrap) {\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\n    const func = functionsToWrap[i];\n\n    if (\n      typeof core.Connection.prototype[func] === 'function' &&\n      PromiseConnection.prototype[func] === undefined\n    ) {\n      PromiseConnection.prototype[func] = (function factory(funcName) {\n        return function() {\n          return core.Connection.prototype[funcName].apply(\n            this.connection,\n            arguments\n          );\n        };\n      })(func);\n    }\n  }\n})([\n  // synchronous functions\n  'close',\n  'createBinlogStream',\n  'destroy',\n  'escape',\n  'escapeId',\n  'format',\n  'pause',\n  'pipe',\n  'resume',\n  'unprepare'\n]);\n\nclass PromisePoolConnection extends PromiseConnection {\n  constructor(connection, promiseImpl) {\n    super(connection, promiseImpl);\n  }\n\n  destroy() {\n    return core.PoolConnection.prototype.destroy.apply(\n      this.connection,\n      arguments\n    );\n  }\n}\n\nclass PromisePool extends EventEmitter {\n  constructor(pool, Promise) {\n    super();\n    this.pool = pool;\n    this.Promise = Promise || global.Promise;\n    inheritEvents(pool, this, ['acquire', 'connection', 'enqueue', 'release']);\n  }\n\n  getConnection() {\n    const corePool = this.pool;\n    return new this.Promise((resolve, reject) => {\n      corePool.getConnection((err, coreConnection) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(new PromisePoolConnection(coreConnection, this.Promise));\n        }\n      });\n    });\n  }\n\n  query(sql, args) {\n    const corePool = this.pool;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      const done = makeDoneCb(resolve, reject, localErr);\n      if (args) {\n        corePool.query(sql, args, done);\n      } else {\n        corePool.query(sql, done);\n      }\n    });\n  }\n\n  execute(sql, values) {\n    const corePool = this.pool;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      corePool.execute(sql, values, makeDoneCb(resolve, reject, localErr));\n    });\n  }\n\n  end() {\n    const corePool = this.pool;\n    const localErr = new Error();\n    return new this.Promise((resolve, reject) => {\n      corePool.end(err => {\n        if (err) {\n          localErr.message = err.message;\n          localErr.code = err.code;\n          localErr.errno = err.errno;\n          localErr.sqlState = err.sqlState;\n          localErr.sqlMessage = err.sqlMessage;\n          reject(localErr);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n}\n\nfunction createPool(opts) {\n  const corePool = core.createPool(opts);\n  const Promise = opts.Promise || global.Promise;\n  if (!Promise) {\n    throw new Error(\n      'no Promise implementation available.' +\n        'Use promise-enabled node version or pass userland Promise' +\n        \" implementation as parameter, for example: { Promise: require('bluebird') }\"\n    );\n  }\n\n  return new PromisePool(corePool, Promise);\n}\n\n(function(functionsToWrap) {\n  for (let i = 0; functionsToWrap && i < functionsToWrap.length; i++) {\n    const func = functionsToWrap[i];\n\n    if (\n      typeof core.Pool.prototype[func] === 'function' &&\n      PromisePool.prototype[func] === undefined\n    ) {\n      PromisePool.prototype[func] = (function factory(funcName) {\n        return function() {\n          return core.Pool.prototype[funcName].apply(this.pool, arguments);\n        };\n      })(func);\n    }\n  }\n})([\n  // synchronous functions\n  'escape',\n  'escapeId',\n  'format'\n]);\n\nexports.createConnection = createConnection;\nexports.createPool = createPool;\nexports.escape = core.escape;\nexports.escapeId = core.escapeId;\nexports.format = core.format;\nexports.raw = core.raw;\nexports.PromisePool = PromisePool;\nexports.PromiseConnection = PromiseConnection;\nexports.PromisePoolConnection = PromisePoolConnection;\n"]},"metadata":{},"sourceType":"script"}