{"ast":null,"code":"module.exports = MultiPolygon;\n\nvar util = require('util');\n\nvar Types = require('./types');\n\nvar Geometry = require('./geometry');\n\nvar Point = require('./point');\n\nvar Polygon = require('./polygon');\n\nvar BinaryWriter = require('./binarywriter');\n\nfunction MultiPolygon(polygons, srid) {\n  Geometry.call(this);\n  this.polygons = polygons || [];\n  this.srid = srid;\n\n  if (this.polygons.length > 0) {\n    this.hasZ = this.polygons[0].hasZ;\n    this.hasM = this.polygons[0].hasM;\n  }\n}\n\nutil.inherits(MultiPolygon, Geometry);\n\nMultiPolygon.Z = function (polygons, srid) {\n  var multiPolygon = new MultiPolygon(polygons, srid);\n  multiPolygon.hasZ = true;\n  return multiPolygon;\n};\n\nMultiPolygon.M = function (polygons, srid) {\n  var multiPolygon = new MultiPolygon(polygons, srid);\n  multiPolygon.hasM = true;\n  return multiPolygon;\n};\n\nMultiPolygon.ZM = function (polygons, srid) {\n  var multiPolygon = new MultiPolygon(polygons, srid);\n  multiPolygon.hasZ = true;\n  multiPolygon.hasM = true;\n  return multiPolygon;\n};\n\nMultiPolygon._parseWkt = function (value, options) {\n  var multiPolygon = new MultiPolygon();\n  multiPolygon.srid = options.srid;\n  multiPolygon.hasZ = options.hasZ;\n  multiPolygon.hasM = options.hasM;\n  if (value.isMatch(['EMPTY'])) return multiPolygon;\n  value.expectGroupStart();\n\n  do {\n    value.expectGroupStart();\n    var exteriorRing = [];\n    var interiorRings = [];\n    value.expectGroupStart();\n    exteriorRing.push.apply(exteriorRing, value.matchCoordinates(options));\n    value.expectGroupEnd();\n\n    while (value.isMatch([','])) {\n      value.expectGroupStart();\n      interiorRings.push(value.matchCoordinates(options));\n      value.expectGroupEnd();\n    }\n\n    multiPolygon.polygons.push(new Polygon(exteriorRing, interiorRings));\n    value.expectGroupEnd();\n  } while (value.isMatch([',']));\n\n  value.expectGroupEnd();\n  return multiPolygon;\n};\n\nMultiPolygon._parseWkb = function (value, options) {\n  var multiPolygon = new MultiPolygon();\n  multiPolygon.srid = options.srid;\n  multiPolygon.hasZ = options.hasZ;\n  multiPolygon.hasM = options.hasM;\n  var polygonCount = value.readUInt32();\n\n  for (var i = 0; i < polygonCount; i++) multiPolygon.polygons.push(Geometry.parse(value, options));\n\n  return multiPolygon;\n};\n\nMultiPolygon._parseTwkb = function (value, options) {\n  var multiPolygon = new MultiPolygon();\n  multiPolygon.hasZ = options.hasZ;\n  multiPolygon.hasM = options.hasM;\n  if (options.isEmpty) return multiPolygon;\n  var previousPoint = new Point(0, 0, options.hasZ ? 0 : undefined, options.hasM ? 0 : undefined);\n  var polygonCount = value.readVarInt();\n\n  for (var i = 0; i < polygonCount; i++) {\n    var polygon = new Polygon();\n    polygon.hasZ = options.hasZ;\n    polygon.hasM = options.hasM;\n    var ringCount = value.readVarInt();\n    var exteriorRingCount = value.readVarInt();\n\n    for (var j = 0; j < exteriorRingCount; j++) polygon.exteriorRing.push(Point._readTwkbPoint(value, options, previousPoint));\n\n    for (j = 1; j < ringCount; j++) {\n      var interiorRing = [];\n      var interiorRingCount = value.readVarInt();\n\n      for (var k = 0; k < interiorRingCount; k++) interiorRing.push(Point._readTwkbPoint(value, options, previousPoint));\n\n      polygon.interiorRings.push(interiorRing);\n    }\n\n    multiPolygon.polygons.push(polygon);\n  }\n\n  return multiPolygon;\n};\n\nMultiPolygon._parseGeoJSON = function (value) {\n  var multiPolygon = new MultiPolygon();\n  if (value.coordinates.length > 0 && value.coordinates[0].length > 0 && value.coordinates[0][0].length > 0) multiPolygon.hasZ = value.coordinates[0][0][0].length > 2;\n\n  for (var i = 0; i < value.coordinates.length; i++) multiPolygon.polygons.push(Polygon._parseGeoJSON({\n    coordinates: value.coordinates[i]\n  }));\n\n  return multiPolygon;\n};\n\nMultiPolygon.prototype.toWkt = function () {\n  if (this.polygons.length === 0) return this._getWktType(Types.wkt.MultiPolygon, true);\n  var wkt = this._getWktType(Types.wkt.MultiPolygon, false) + '(';\n\n  for (var i = 0; i < this.polygons.length; i++) wkt += this.polygons[i]._toInnerWkt() + ',';\n\n  wkt = wkt.slice(0, -1);\n  wkt += ')';\n  return wkt;\n};\n\nMultiPolygon.prototype.toWkb = function () {\n  var wkb = new BinaryWriter(this._getWkbSize());\n  wkb.writeInt8(1);\n\n  this._writeWkbType(wkb, Types.wkb.MultiPolygon);\n\n  wkb.writeUInt32LE(this.polygons.length);\n\n  for (var i = 0; i < this.polygons.length; i++) wkb.writeBuffer(this.polygons[i].toWkb({\n    srid: this.srid\n  }));\n\n  return wkb.buffer;\n};\n\nMultiPolygon.prototype.toTwkb = function () {\n  var twkb = new BinaryWriter(0, true);\n  var precision = Geometry.getTwkbPrecision(5, 0, 0);\n  var isEmpty = this.polygons.length === 0;\n\n  this._writeTwkbHeader(twkb, Types.wkb.MultiPolygon, precision, isEmpty);\n\n  if (this.polygons.length > 0) {\n    twkb.writeVarInt(this.polygons.length);\n    var previousPoint = new Point(0, 0, 0, 0);\n\n    for (var i = 0; i < this.polygons.length; i++) {\n      twkb.writeVarInt(1 + this.polygons[i].interiorRings.length);\n      twkb.writeVarInt(this.polygons[i].exteriorRing.length);\n\n      for (var j = 0; j < this.polygons[i].exteriorRing.length; j++) this.polygons[i].exteriorRing[j]._writeTwkbPoint(twkb, precision, previousPoint);\n\n      for (j = 0; j < this.polygons[i].interiorRings.length; j++) {\n        twkb.writeVarInt(this.polygons[i].interiorRings[j].length);\n\n        for (var k = 0; k < this.polygons[i].interiorRings[j].length; k++) this.polygons[i].interiorRings[j][k]._writeTwkbPoint(twkb, precision, previousPoint);\n      }\n    }\n  }\n\n  return twkb.buffer;\n};\n\nMultiPolygon.prototype._getWkbSize = function () {\n  var size = 1 + 4 + 4;\n\n  for (var i = 0; i < this.polygons.length; i++) size += this.polygons[i]._getWkbSize();\n\n  return size;\n};\n\nMultiPolygon.prototype.toGeoJSON = function (options) {\n  var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\n  geoJSON.type = Types.geoJSON.MultiPolygon;\n  geoJSON.coordinates = [];\n\n  for (var i = 0; i < this.polygons.length; i++) geoJSON.coordinates.push(this.polygons[i].toGeoJSON().coordinates);\n\n  return geoJSON;\n};","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp5/expresstimes/node_modules/wkx/lib/multipolygon.js"],"names":["module","exports","MultiPolygon","util","require","Types","Geometry","Point","Polygon","BinaryWriter","polygons","srid","call","length","hasZ","hasM","inherits","Z","multiPolygon","M","ZM","_parseWkt","value","options","isMatch","expectGroupStart","exteriorRing","interiorRings","push","apply","matchCoordinates","expectGroupEnd","_parseWkb","polygonCount","readUInt32","i","parse","_parseTwkb","isEmpty","previousPoint","undefined","readVarInt","polygon","ringCount","exteriorRingCount","j","_readTwkbPoint","interiorRing","interiorRingCount","k","_parseGeoJSON","coordinates","prototype","toWkt","_getWktType","wkt","_toInnerWkt","slice","toWkb","wkb","_getWkbSize","writeInt8","_writeWkbType","writeUInt32LE","writeBuffer","buffer","toTwkb","twkb","precision","getTwkbPrecision","_writeTwkbHeader","writeVarInt","_writeTwkbPoint","size","toGeoJSON","geoJSON","type"],"mappings":"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","sourcesContent":["module.exports = MultiPolygon;\r\n\r\nvar util = require('util');\r\n\r\nvar Types = require('./types');\r\nvar Geometry = require('./geometry');\r\nvar Point = require('./point');\r\nvar Polygon = require('./polygon');\r\nvar BinaryWriter = require('./binarywriter');\r\n\r\nfunction MultiPolygon(polygons, srid) {\r\n    Geometry.call(this);\r\n\r\n    this.polygons = polygons || [];\r\n\tthis.srid = srid;\r\n\r\n    if (this.polygons.length > 0) {\r\n        this.hasZ = this.polygons[0].hasZ;\r\n        this.hasM = this.polygons[0].hasM;\r\n    }\r\n}\r\n\r\nutil.inherits(MultiPolygon, Geometry);\r\n\r\nMultiPolygon.Z = function (polygons, srid) {\r\n    var multiPolygon = new MultiPolygon(polygons, srid);\r\n    multiPolygon.hasZ = true;\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon.M = function (polygons, srid) {\r\n    var multiPolygon = new MultiPolygon(polygons, srid);\r\n    multiPolygon.hasM = true;\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon.ZM = function (polygons, srid) {\r\n    var multiPolygon = new MultiPolygon(polygons, srid);\r\n    multiPolygon.hasZ = true;\r\n    multiPolygon.hasM = true;\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon._parseWkt = function (value, options) {\r\n    var multiPolygon = new MultiPolygon();\r\n    multiPolygon.srid = options.srid;\r\n    multiPolygon.hasZ = options.hasZ;\r\n    multiPolygon.hasM = options.hasM;\r\n\r\n    if (value.isMatch(['EMPTY']))\r\n        return multiPolygon;\r\n\r\n    value.expectGroupStart();\r\n\r\n    do {\r\n        value.expectGroupStart();\r\n\r\n        var exteriorRing = [];\r\n        var interiorRings = [];\r\n\r\n        value.expectGroupStart();\r\n        exteriorRing.push.apply(exteriorRing, value.matchCoordinates(options));\r\n        value.expectGroupEnd();\r\n\r\n        while (value.isMatch([','])) {\r\n            value.expectGroupStart();\r\n            interiorRings.push(value.matchCoordinates(options));\r\n            value.expectGroupEnd();\r\n        }\r\n\r\n        multiPolygon.polygons.push(new Polygon(exteriorRing, interiorRings));\r\n\r\n        value.expectGroupEnd();\r\n\r\n    } while (value.isMatch([',']));\r\n\r\n    value.expectGroupEnd();\r\n\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon._parseWkb = function (value, options) {\r\n    var multiPolygon = new MultiPolygon();\r\n    multiPolygon.srid = options.srid;\r\n    multiPolygon.hasZ = options.hasZ;\r\n    multiPolygon.hasM = options.hasM;\r\n\r\n    var polygonCount = value.readUInt32();\r\n\r\n    for (var i = 0; i < polygonCount; i++)\r\n        multiPolygon.polygons.push(Geometry.parse(value, options));\r\n\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon._parseTwkb = function (value, options) {\r\n    var multiPolygon = new MultiPolygon();\r\n    multiPolygon.hasZ = options.hasZ;\r\n    multiPolygon.hasM = options.hasM;\r\n\r\n    if (options.isEmpty)\r\n        return multiPolygon;\r\n\r\n    var previousPoint = new Point(0, 0, options.hasZ ? 0 : undefined, options.hasM ? 0 : undefined);\r\n    var polygonCount = value.readVarInt();\r\n\r\n    for (var i = 0; i < polygonCount; i++) {\r\n        var polygon = new Polygon();\r\n        polygon.hasZ = options.hasZ;\r\n        polygon.hasM = options.hasM;\r\n\r\n        var ringCount = value.readVarInt();\r\n        var exteriorRingCount = value.readVarInt();\r\n\r\n        for (var j = 0; j < exteriorRingCount; j++)\r\n            polygon.exteriorRing.push(Point._readTwkbPoint(value, options, previousPoint));\r\n\r\n        for (j = 1; j < ringCount; j++) {\r\n            var interiorRing = [];\r\n\r\n            var interiorRingCount = value.readVarInt();\r\n\r\n            for (var k = 0; k < interiorRingCount; k++)\r\n                interiorRing.push(Point._readTwkbPoint(value, options, previousPoint));\r\n\r\n            polygon.interiorRings.push(interiorRing);\r\n        }\r\n\r\n        multiPolygon.polygons.push(polygon);\r\n    }\r\n\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon._parseGeoJSON = function (value) {\r\n    var multiPolygon = new MultiPolygon();\r\n\r\n    if (value.coordinates.length > 0 && value.coordinates[0].length > 0 && value.coordinates[0][0].length > 0)\r\n        multiPolygon.hasZ = value.coordinates[0][0][0].length > 2;\r\n\r\n    for (var i = 0; i < value.coordinates.length; i++)\r\n        multiPolygon.polygons.push(Polygon._parseGeoJSON({ coordinates: value.coordinates[i] }));\r\n\r\n    return multiPolygon;\r\n};\r\n\r\nMultiPolygon.prototype.toWkt = function () {\r\n    if (this.polygons.length === 0)\r\n        return this._getWktType(Types.wkt.MultiPolygon, true);\r\n\r\n    var wkt = this._getWktType(Types.wkt.MultiPolygon, false) + '(';\r\n\r\n    for (var i = 0; i < this.polygons.length; i++)\r\n        wkt += this.polygons[i]._toInnerWkt() + ',';\r\n\r\n    wkt = wkt.slice(0, -1);\r\n    wkt += ')';\r\n\r\n    return wkt;\r\n};\r\n\r\nMultiPolygon.prototype.toWkb = function () {\r\n    var wkb = new BinaryWriter(this._getWkbSize());\r\n\r\n    wkb.writeInt8(1);\r\n\r\n    this._writeWkbType(wkb, Types.wkb.MultiPolygon);\r\n    wkb.writeUInt32LE(this.polygons.length);\r\n\r\n    for (var i = 0; i < this.polygons.length; i++)\r\n        wkb.writeBuffer(this.polygons[i].toWkb({ srid: this.srid }));\r\n\r\n    return wkb.buffer;\r\n};\r\n\r\nMultiPolygon.prototype.toTwkb = function () {\r\n    var twkb = new BinaryWriter(0, true);\r\n\r\n    var precision = Geometry.getTwkbPrecision(5, 0, 0);\r\n    var isEmpty = this.polygons.length === 0;\r\n\r\n    this._writeTwkbHeader(twkb, Types.wkb.MultiPolygon, precision, isEmpty);\r\n\r\n    if (this.polygons.length > 0) {\r\n        twkb.writeVarInt(this.polygons.length);\r\n\r\n        var previousPoint = new Point(0, 0, 0, 0);\r\n        for (var i = 0; i < this.polygons.length; i++) {\r\n            twkb.writeVarInt(1 + this.polygons[i].interiorRings.length);\r\n\r\n            twkb.writeVarInt(this.polygons[i].exteriorRing.length);\r\n\r\n            for (var j = 0; j < this.polygons[i].exteriorRing.length; j++)\r\n                this.polygons[i].exteriorRing[j]._writeTwkbPoint(twkb, precision, previousPoint);\r\n\r\n            for (j = 0; j < this.polygons[i].interiorRings.length; j++) {\r\n                twkb.writeVarInt(this.polygons[i].interiorRings[j].length);\r\n\r\n                for (var k = 0; k < this.polygons[i].interiorRings[j].length; k++)\r\n                    this.polygons[i].interiorRings[j][k]._writeTwkbPoint(twkb, precision, previousPoint);\r\n            }\r\n        }\r\n    }\r\n\r\n    return twkb.buffer;\r\n};\r\n\r\nMultiPolygon.prototype._getWkbSize = function () {\r\n    var size = 1 + 4 + 4;\r\n\r\n    for (var i = 0; i < this.polygons.length; i++)\r\n        size += this.polygons[i]._getWkbSize();\r\n\r\n    return size;\r\n};\r\n\r\nMultiPolygon.prototype.toGeoJSON = function (options) {\r\n    var geoJSON = Geometry.prototype.toGeoJSON.call(this, options);\r\n    geoJSON.type = Types.geoJSON.MultiPolygon;\r\n    geoJSON.coordinates = [];\r\n\r\n    for (var i = 0; i < this.polygons.length; i++)\r\n        geoJSON.coordinates.push(this.polygons[i].toGeoJSON().coordinates);\r\n\r\n    return geoJSON;\r\n};\r\n"]},"metadata":{},"sourceType":"script"}