{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\n\nvar crypto = _interopRequireWildcard(require(\"crypto\"));\n\nvar _jsbi = _interopRequireDefault(require(\"jsbi\"));\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n\n  if (obj != null) {\n    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n        if (desc && (desc.get || desc.set)) {\n          Object.defineProperty(newObj, key, desc);\n        } else {\n          newObj[key] = obj[key];\n        }\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nclass NTLMResponsePayload {\n  constructor(loginData) {\n    this.data = this.createResponse(loginData);\n  }\n\n  toString(indent = '') {\n    return indent + 'NTLM Auth';\n  }\n\n  createResponse(challenge) {\n    const client_nonce = this.createClientNonce();\n    const lmv2len = 24;\n    const ntlmv2len = 16;\n    const domain = challenge.domain;\n    const username = challenge.userName;\n    const password = challenge.password;\n    const ntlmData = challenge.ntlmpacket;\n    const server_data = ntlmData.target;\n    const server_nonce = ntlmData.nonce;\n    const bufferLength = 64 + domain.length * 2 + username.length * 2 + lmv2len + ntlmv2len + 8 + 8 + 8 + 4 + server_data.length + 4;\n    const data = new _writableTrackingBuffer.default(bufferLength);\n    data.position = 0;\n    data.writeString('NTLMSSP\\u0000', 'utf8');\n    data.writeUInt32LE(0x03);\n    const baseIdx = 64;\n    const dnIdx = baseIdx;\n    const unIdx = dnIdx + domain.length * 2;\n    const l2Idx = unIdx + username.length * 2;\n    const ntIdx = l2Idx + lmv2len;\n    data.writeUInt16LE(lmv2len);\n    data.writeUInt16LE(lmv2len);\n    data.writeUInt32LE(l2Idx);\n    data.writeUInt16LE(ntlmv2len);\n    data.writeUInt16LE(ntlmv2len);\n    data.writeUInt32LE(ntIdx);\n    data.writeUInt16LE(domain.length * 2);\n    data.writeUInt16LE(domain.length * 2);\n    data.writeUInt32LE(dnIdx);\n    data.writeUInt16LE(username.length * 2);\n    data.writeUInt16LE(username.length * 2);\n    data.writeUInt32LE(unIdx);\n    data.writeUInt16LE(0);\n    data.writeUInt16LE(0);\n    data.writeUInt32LE(baseIdx);\n    data.writeUInt16LE(0);\n    data.writeUInt16LE(0);\n    data.writeUInt32LE(baseIdx);\n    data.writeUInt16LE(0x8201);\n    data.writeUInt16LE(0x08);\n    data.writeString(domain, 'ucs2');\n    data.writeString(username, 'ucs2');\n    const lmv2Data = this.lmv2Response(domain, username, password, server_nonce, client_nonce);\n    data.copyFrom(lmv2Data);\n    const genTime = new Date().getTime();\n    const ntlmDataBuffer = this.ntlmv2Response(domain, username, password, server_nonce, server_data, client_nonce, genTime);\n    data.copyFrom(ntlmDataBuffer);\n    data.writeUInt32LE(0x0101);\n    data.writeUInt32LE(0x0000);\n    const timestamp = this.createTimestamp(genTime);\n    data.copyFrom(timestamp);\n    data.copyFrom(client_nonce);\n    data.writeUInt32LE(0x0000);\n    data.copyFrom(server_data);\n    data.writeUInt32LE(0x0000);\n    return data.data;\n  }\n\n  createClientNonce() {\n    const client_nonce = Buffer.alloc(8, 0);\n    let nidx = 0;\n\n    while (nidx < 8) {\n      client_nonce.writeUInt8(Math.ceil(Math.random() * 255), nidx);\n      nidx++;\n    }\n\n    return client_nonce;\n  }\n\n  ntlmv2Response(domain, user, password, serverNonce, targetInfo, clientNonce, mytime) {\n    const timestamp = this.createTimestamp(mytime);\n    const hash = this.ntv2Hash(domain, user, password);\n    const dataLength = 40 + targetInfo.length;\n    const data = Buffer.alloc(dataLength, 0);\n    serverNonce.copy(data, 0, 0, 8);\n    data.writeUInt32LE(0x101, 8);\n    data.writeUInt32LE(0x0, 12);\n    timestamp.copy(data, 16, 0, 8);\n    clientNonce.copy(data, 24, 0, 8);\n    data.writeUInt32LE(0x0, 32);\n    targetInfo.copy(data, 36, 0, targetInfo.length);\n    data.writeUInt32LE(0x0, 36 + targetInfo.length);\n    return this.hmacMD5(data, hash);\n  }\n\n  createTimestamp(time) {\n    const tenthsOfAMicrosecond = _jsbi.default.multiply(_jsbi.default.add(_jsbi.default.BigInt(time), _jsbi.default.BigInt(11644473600)), _jsbi.default.BigInt(10000000));\n\n    const lo = _jsbi.default.toNumber(_jsbi.default.bitwiseAnd(tenthsOfAMicrosecond, _jsbi.default.BigInt(0xffffffff)));\n\n    const hi = _jsbi.default.toNumber(_jsbi.default.bitwiseAnd(_jsbi.default.signedRightShift(tenthsOfAMicrosecond, _jsbi.default.BigInt(32)), _jsbi.default.BigInt(0xffffffff)));\n\n    const result = Buffer.alloc(8);\n    result.writeUInt32LE(lo, 0);\n    result.writeUInt32LE(hi, 4);\n    return result;\n  }\n\n  lmv2Response(domain, user, password, serverNonce, clientNonce) {\n    const hash = this.ntv2Hash(domain, user, password);\n    const data = Buffer.alloc(serverNonce.length + clientNonce.length, 0);\n    serverNonce.copy(data);\n    clientNonce.copy(data, serverNonce.length, 0, clientNonce.length);\n    const newhash = this.hmacMD5(data, hash);\n    const response = Buffer.alloc(newhash.length + clientNonce.length, 0);\n    newhash.copy(response);\n    clientNonce.copy(response, newhash.length, 0, clientNonce.length);\n    return response;\n  }\n\n  ntv2Hash(domain, user, password) {\n    const hash = this.ntHash(password);\n    const identity = Buffer.from(user.toUpperCase() + domain.toUpperCase(), 'ucs2');\n    return this.hmacMD5(identity, hash);\n  }\n\n  ntHash(text) {\n    const hash = Buffer.alloc(21, 0);\n    const unicodeString = Buffer.from(text, 'ucs2');\n    const md4 = crypto.createHash('md4').update(unicodeString).digest();\n\n    if (md4.copy) {\n      md4.copy(hash);\n    } else {\n      Buffer.from(md4).copy(hash);\n    }\n\n    return hash;\n  }\n\n  hmacMD5(data, key) {\n    const hmac = crypto.createHmac('MD5', key);\n    hmac.update(data);\n    const result = hmac.digest();\n\n    if (result.copy) {\n      return result;\n    } else {\n      return Buffer.from(result).slice(0, 16);\n    }\n  }\n\n}\n\nvar _default = NTLMResponsePayload;\nexports.default = _default;\nmodule.exports = NTLMResponsePayload;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp5/expresstimes/node_modules/tedious/lib/ntlm-payload.js"],"names":["Object","defineProperty","exports","value","default","_writableTrackingBuffer","_interopRequireDefault","require","crypto","_interopRequireWildcard","_jsbi","_getRequireWildcardCache","WeakMap","cache","obj","__esModule","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","NTLMResponsePayload","constructor","loginData","data","createResponse","toString","indent","challenge","client_nonce","createClientNonce","lmv2len","ntlmv2len","domain","username","userName","password","ntlmData","ntlmpacket","server_data","target","server_nonce","nonce","bufferLength","length","position","writeString","writeUInt32LE","baseIdx","dnIdx","unIdx","l2Idx","ntIdx","writeUInt16LE","lmv2Data","lmv2Response","copyFrom","genTime","Date","getTime","ntlmDataBuffer","ntlmv2Response","timestamp","createTimestamp","Buffer","alloc","nidx","writeUInt8","Math","ceil","random","user","serverNonce","targetInfo","clientNonce","mytime","hash","ntv2Hash","dataLength","copy","hmacMD5","time","tenthsOfAMicrosecond","multiply","add","BigInt","lo","toNumber","bitwiseAnd","hi","signedRightShift","result","newhash","response","ntHash","identity","from","toUpperCase","text","unicodeString","md4","createHash","update","digest","hmac","createHmac","slice","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\n\nvar crypto = _interopRequireWildcard(require(\"crypto\"));\n\nvar _jsbi = _interopRequireDefault(require(\"jsbi\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; if (obj != null) { var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass NTLMResponsePayload {\n  constructor(loginData) {\n    this.data = this.createResponse(loginData);\n  }\n\n  toString(indent = '') {\n    return indent + 'NTLM Auth';\n  }\n\n  createResponse(challenge) {\n    const client_nonce = this.createClientNonce();\n    const lmv2len = 24;\n    const ntlmv2len = 16;\n    const domain = challenge.domain;\n    const username = challenge.userName;\n    const password = challenge.password;\n    const ntlmData = challenge.ntlmpacket;\n    const server_data = ntlmData.target;\n    const server_nonce = ntlmData.nonce;\n    const bufferLength = 64 + domain.length * 2 + username.length * 2 + lmv2len + ntlmv2len + 8 + 8 + 8 + 4 + server_data.length + 4;\n    const data = new _writableTrackingBuffer.default(bufferLength);\n    data.position = 0;\n    data.writeString('NTLMSSP\\u0000', 'utf8');\n    data.writeUInt32LE(0x03);\n    const baseIdx = 64;\n    const dnIdx = baseIdx;\n    const unIdx = dnIdx + domain.length * 2;\n    const l2Idx = unIdx + username.length * 2;\n    const ntIdx = l2Idx + lmv2len;\n    data.writeUInt16LE(lmv2len);\n    data.writeUInt16LE(lmv2len);\n    data.writeUInt32LE(l2Idx);\n    data.writeUInt16LE(ntlmv2len);\n    data.writeUInt16LE(ntlmv2len);\n    data.writeUInt32LE(ntIdx);\n    data.writeUInt16LE(domain.length * 2);\n    data.writeUInt16LE(domain.length * 2);\n    data.writeUInt32LE(dnIdx);\n    data.writeUInt16LE(username.length * 2);\n    data.writeUInt16LE(username.length * 2);\n    data.writeUInt32LE(unIdx);\n    data.writeUInt16LE(0);\n    data.writeUInt16LE(0);\n    data.writeUInt32LE(baseIdx);\n    data.writeUInt16LE(0);\n    data.writeUInt16LE(0);\n    data.writeUInt32LE(baseIdx);\n    data.writeUInt16LE(0x8201);\n    data.writeUInt16LE(0x08);\n    data.writeString(domain, 'ucs2');\n    data.writeString(username, 'ucs2');\n    const lmv2Data = this.lmv2Response(domain, username, password, server_nonce, client_nonce);\n    data.copyFrom(lmv2Data);\n    const genTime = new Date().getTime();\n    const ntlmDataBuffer = this.ntlmv2Response(domain, username, password, server_nonce, server_data, client_nonce, genTime);\n    data.copyFrom(ntlmDataBuffer);\n    data.writeUInt32LE(0x0101);\n    data.writeUInt32LE(0x0000);\n    const timestamp = this.createTimestamp(genTime);\n    data.copyFrom(timestamp);\n    data.copyFrom(client_nonce);\n    data.writeUInt32LE(0x0000);\n    data.copyFrom(server_data);\n    data.writeUInt32LE(0x0000);\n    return data.data;\n  }\n\n  createClientNonce() {\n    const client_nonce = Buffer.alloc(8, 0);\n    let nidx = 0;\n\n    while (nidx < 8) {\n      client_nonce.writeUInt8(Math.ceil(Math.random() * 255), nidx);\n      nidx++;\n    }\n\n    return client_nonce;\n  }\n\n  ntlmv2Response(domain, user, password, serverNonce, targetInfo, clientNonce, mytime) {\n    const timestamp = this.createTimestamp(mytime);\n    const hash = this.ntv2Hash(domain, user, password);\n    const dataLength = 40 + targetInfo.length;\n    const data = Buffer.alloc(dataLength, 0);\n    serverNonce.copy(data, 0, 0, 8);\n    data.writeUInt32LE(0x101, 8);\n    data.writeUInt32LE(0x0, 12);\n    timestamp.copy(data, 16, 0, 8);\n    clientNonce.copy(data, 24, 0, 8);\n    data.writeUInt32LE(0x0, 32);\n    targetInfo.copy(data, 36, 0, targetInfo.length);\n    data.writeUInt32LE(0x0, 36 + targetInfo.length);\n    return this.hmacMD5(data, hash);\n  }\n\n  createTimestamp(time) {\n    const tenthsOfAMicrosecond = _jsbi.default.multiply(_jsbi.default.add(_jsbi.default.BigInt(time), _jsbi.default.BigInt(11644473600)), _jsbi.default.BigInt(10000000));\n\n    const lo = _jsbi.default.toNumber(_jsbi.default.bitwiseAnd(tenthsOfAMicrosecond, _jsbi.default.BigInt(0xffffffff)));\n\n    const hi = _jsbi.default.toNumber(_jsbi.default.bitwiseAnd(_jsbi.default.signedRightShift(tenthsOfAMicrosecond, _jsbi.default.BigInt(32)), _jsbi.default.BigInt(0xffffffff)));\n\n    const result = Buffer.alloc(8);\n    result.writeUInt32LE(lo, 0);\n    result.writeUInt32LE(hi, 4);\n    return result;\n  }\n\n  lmv2Response(domain, user, password, serverNonce, clientNonce) {\n    const hash = this.ntv2Hash(domain, user, password);\n    const data = Buffer.alloc(serverNonce.length + clientNonce.length, 0);\n    serverNonce.copy(data);\n    clientNonce.copy(data, serverNonce.length, 0, clientNonce.length);\n    const newhash = this.hmacMD5(data, hash);\n    const response = Buffer.alloc(newhash.length + clientNonce.length, 0);\n    newhash.copy(response);\n    clientNonce.copy(response, newhash.length, 0, clientNonce.length);\n    return response;\n  }\n\n  ntv2Hash(domain, user, password) {\n    const hash = this.ntHash(password);\n    const identity = Buffer.from(user.toUpperCase() + domain.toUpperCase(), 'ucs2');\n    return this.hmacMD5(identity, hash);\n  }\n\n  ntHash(text) {\n    const hash = Buffer.alloc(21, 0);\n    const unicodeString = Buffer.from(text, 'ucs2');\n    const md4 = crypto.createHash('md4').update(unicodeString).digest();\n\n    if (md4.copy) {\n      md4.copy(hash);\n    } else {\n      Buffer.from(md4).copy(hash);\n    }\n\n    return hash;\n  }\n\n  hmacMD5(data, key) {\n    const hmac = crypto.createHmac('MD5', key);\n    hmac.update(data);\n    const result = hmac.digest();\n\n    if (result.copy) {\n      return result;\n    } else {\n      return Buffer.from(result).slice(0, 16);\n    }\n  }\n\n}\n\nvar _default = NTLMResponsePayload;\nexports.default = _default;\nmodule.exports = NTLMResponsePayload;"]},"metadata":{},"sourceType":"script"}