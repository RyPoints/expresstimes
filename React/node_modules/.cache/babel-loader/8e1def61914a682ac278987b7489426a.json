{"ast":null,"code":"import _slicedToArray from \"/Users/ryandavis/Development/reactapp/expresstimes/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ryandavis/Development/reactapp/expresstimes/src/post.js\";\nimport './styles.css';\nimport olddata from './olddata';\nimport lodash from 'lodash';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Icon } from 'antd';\nimport 'antd/dist/antd.css';\nimport HomeHeader from './HomeHeader';\nimport PostHeader from './PostHeader';\nimport { render } from 'react-dom';\nimport { Grid, Slug, Fade } from 'mauerwerk';\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter, Router, Route, Switch, Link } from 'react-router-dom';\n\nfunction readKey(file) {\n  var fs = require('fs');\n\n  try {\n    var string = fs.readFileSync(file, 'utf8');\n    return string;\n  } catch (e) {\n    console.log('Error:', e.stack);\n  }\n}\n\nconst inputParsers = {\n  date(input) {\n    const _input$split = input.split('/'),\n          _input$split2 = _slicedToArray(_input$split, 3),\n          month = _input$split2[0],\n          day = _input$split2[1],\n          year = _input$split2[2];\n\n    return `${year}-${month}-${day}`;\n  },\n\n  uppercase(input) {\n    return input.toUpperCase();\n  },\n\n  number(input) {\n    return parseFloat(input);\n  }\n\n};\n\nclass PostScreen extends Component {\n  constructor() {\n    super();\n\n    this.handleTitleChange = e => {\n      this.setState({\n        title: e.target.value\n      });\n    };\n\n    this.handleArticleChange = e => {\n      this.setState({\n        article: e.target.value\n      });\n    };\n\n    this.state = {\n      title: \"\",\n      article: \"\"\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTitleChange = this.handleTitleChange.bind(this);\n    this.handleArticleChange = this.handleArticleChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const form = event.target;\n    const data = new FormData(form);\n\n    for (let name of data.keys()) {\n      const input = form.elements[name];\n      const parserName = input.dataset.parse;\n\n      if (parserName) {\n        const parser = inputParsers[parserName];\n        const parsedValue = parser(data.get(name));\n        data.set(name, parsedValue);\n      }\n    } // fetch('https://lhk56kti7b.execute-api.us-east-1.amazonaws.com/latest/post', {\n    //   method: 'POST',\n    //   body: data\n    // });\n\n\n    fetch('https://lhk56kti7b.execute-api.us-east-1.amazonaws.com/latest/post', {\n      method: 'POST',\n      body: JSON.stringify({\n        \"title\": this.state.title,\n        \"article\": this.state.article\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      id: \"paper\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Article title\", React.createElement(\"input\", {\n      name: \"title\",\n      type: \"text\",\n      \"data-parse\": \"uppercase\",\n      onChange: this.handleTitleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      placeholder: \"Enter your article text.\",\n      id: \"text\",\n      name: \"article\",\n      rows: \"4\",\n      onChange: this.handleArticleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Add Article\"));\n  }\n\n}\n\nexport default PostScreen;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/src/post.js"],"names":["olddata","lodash","ReactHtmlParser","Icon","HomeHeader","PostHeader","render","Grid","Slug","Fade","React","Component","Fragment","BrowserRouter","Router","Route","Switch","Link","readKey","file","fs","require","string","readFileSync","e","console","log","stack","inputParsers","date","input","split","month","day","year","uppercase","toUpperCase","number","parseFloat","PostScreen","constructor","handleTitleChange","setState","title","target","value","handleArticleChange","article","state","handleSubmit","bind","event","preventDefault","form","data","FormData","name","keys","elements","parserName","dataset","parse","parser","parsedValue","get","set","fetch","method","body","JSON","stringify","headers"],"mappings":"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","sourcesContent":["import './styles.css'\nimport olddata from './olddata'\nimport lodash from 'lodash'\nimport ReactHtmlParser from 'react-html-parser'; \nimport { Icon } from 'antd'\nimport 'antd/dist/antd.css'\nimport HomeHeader from './HomeHeader'\nimport PostHeader from './PostHeader'\nimport { render } from 'react-dom'\nimport { Grid, Slug, Fade } from 'mauerwerk'\nimport React, { Component, Fragment } from 'react'\nimport { BrowserRouter, Router, Route, Switch, Link } from 'react-router-dom';\n\nfunction readKey(file) {\n\tvar fs = require('fs');\n\ttry {\n\t\tvar string = fs.readFileSync(file, 'utf8');\n\t\treturn string;\n\t} catch(e) {\n\tconsole.log('Error:', e.stack);\n\t}\n}\n\nconst inputParsers = {\n  date(input) {\n    const [month, day, year] = input.split('/');\n    return `${year}-${month}-${day}`;\n  },\n  uppercase(input) {\n    return input.toUpperCase();\n  },\n  number(input) {\n    return parseFloat(input);\n  },\n};\n\nclass PostScreen extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: \"\",\n      article: \"\"\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleTitleChange = this.handleTitleChange.bind(this)\n    this.handleArticleChange = this.handleArticleChange.bind(this)\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const form = event.target;\n    const data = new FormData(form);\n\n    for (let name of data.keys()) {\n      const input = form.elements[name];\n      const parserName = input.dataset.parse;\n\n      if (parserName) {\n        const parser = inputParsers[parserName];\n        const parsedValue = parser(data.get(name));\n        data.set(name, parsedValue);\n      }\n    }\n    \n    // fetch('https://lhk56kti7b.execute-api.us-east-1.amazonaws.com/latest/post', {\n    //   method: 'POST',\n    //   body: data\n    // });\n\n    fetch('https://lhk56kti7b.execute-api.us-east-1.amazonaws.com/latest/post', {\n      method: 'POST',\n      body: JSON.stringify({\"title\": this.state.title, \"article\": this.state.article}),\n      headers: {'Content-Type': 'application/json'}\n  });\n  }\n\n  handleTitleChange = (e) => {\n    this.setState({title: e.target.value});\n}\n\nhandleArticleChange = (e) => {\n    this.setState({article: e.target.value});\n}\n\n  render() {\n    return (\n      <form id=\"paper\" onSubmit={this.handleSubmit}>\n        <p>\n        Article title\n        <input\n          name=\"title\"\n          type=\"text\"\n          data-parse=\"uppercase\"\n          onChange={this.handleTitleChange}\n        />\n        </p>\n        <p>\n      \n        <textarea placeholder=\"Enter your article text.\" id=\"text\" name=\"article\" rows=\"4\" onChange={this.handleArticleChange}></textarea> \n        </p>\n\n\n        <Button type=\"primary\">\n        Add Article\n      </Button>\n      </form>\n    );\n  }\n\n}\n\nexport default PostScreen"]},"metadata":{},"sourceType":"module"}