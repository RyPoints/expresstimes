{"ast":null,"code":"// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport * as tslib_1 from \"tslib\";\nimport { ApiKeyCredentials } from \"./apiKeyCredentials\";\n\nvar DomainCredentials =\n/** @class */\nfunction (_super) {\n  tslib_1.__extends(DomainCredentials, _super);\n  /**\n   * Creates a new EventGrid DomainCredentials object.\n   *\n   * @constructor\n   * @param {string} domainKey   The EventGrid domain key\n   */\n\n\n  function DomainCredentials(domainKey) {\n    var _this = this;\n\n    if (!domainKey || domainKey && typeof domainKey !== \"string\") {\n      throw new Error(\"domainKey cannot be null or undefined and must be of type string.\");\n    }\n\n    var options = {\n      inHeader: {\n        \"aeg-sas-key\": domainKey\n      }\n    };\n    _this = _super.call(this, options) || this;\n    return _this;\n  }\n\n  return DomainCredentials;\n}(ApiKeyCredentials);\n\nexport { DomainCredentials };","map":{"version":3,"sources":["../../../lib/credentials/domainCredentials.ts"],"names":[],"mappings":"AAAA;AACA;;AAEA,SAAS,iBAAT,QAA2D,qBAA3D;;AAEA,IAAA,iBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAuC,EAAA,OAAA,CAAA,SAAA,CAAA,iBAAA,EAAA,MAAA;AACnC;;;;;;;;AAMF,WAAA,iBAAA,CAAY,SAAZ,EAA6B;AAA7B,QAAA,KAAA,GAAA,IAAA;;AACE,QAAI,CAAC,SAAD,IAAe,SAAS,IAAI,OAAO,SAAP,KAAqB,QAArD,EAAgE;AAC9D,YAAM,IAAI,KAAJ,CAAU,mEAAV,CAAN;AACD;;AACD,QAAM,OAAO,GAA4B;AACvC,MAAA,QAAQ,EAAE;AACR,uBAAe;AADP;AAD6B,KAAzC;AAKA,IAAA,KAAA,GAAA,MAAA,CAAA,IAAA,CAAA,IAAA,EAAM,OAAN,KAAc,IAAd;;AACD;;AACH,SAAA,iBAAA;AAAC,CAlBD,CAAuC,iBAAvC,CAAA","sourceRoot":"","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\nimport * as tslib_1 from \"tslib\";\nimport { ApiKeyCredentials } from \"./apiKeyCredentials\";\nvar DomainCredentials = /** @class */ (function (_super) {\n    tslib_1.__extends(DomainCredentials, _super);\n    /**\n     * Creates a new EventGrid DomainCredentials object.\n     *\n     * @constructor\n     * @param {string} domainKey   The EventGrid domain key\n     */\n    function DomainCredentials(domainKey) {\n        var _this = this;\n        if (!domainKey || (domainKey && typeof domainKey !== \"string\")) {\n            throw new Error(\"domainKey cannot be null or undefined and must be of type string.\");\n        }\n        var options = {\n            inHeader: {\n                \"aeg-sas-key\": domainKey\n            }\n        };\n        _this = _super.call(this, options) || this;\n        return _this;\n    }\n    return DomainCredentials;\n}(ApiKeyCredentials));\nexport { DomainCredentials };\n//# sourceMappingURL=domainCredentials.js.map"]},"metadata":{},"sourceType":"module"}