{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n/* eslint-env browser */\n\n\nexports.default = createBrowserApp;\n\nvar _history = require('history');\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('@react-navigation/core');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/* eslint-disable import/no-commonjs */\n\n\nconst queryString = require('query-string');\n\nconst getPathAndParamsFromLocation = location => {\n  const path = encodeURI(location.pathname.substr(1));\n  const params = queryString.parse(location.search);\n  return {\n    path,\n    params\n  };\n};\n\nconst matchPathAndParams = (a, b) => {\n  if (a.path !== b.path) {\n    return false;\n  }\n\n  if (queryString.stringify(a.params) !== queryString.stringify(b.params)) {\n    return false;\n  }\n\n  return true;\n};\n\nfunction getHistory(history) {\n  if (typeof history === 'string') {\n    switch (history) {\n      case 'browser':\n        return (0, _history.createBrowserHistory)();\n\n      case 'hash':\n        return (0, _history.createHashHistory)();\n\n      case 'memory':\n        return (0, _history.createMemoryHistory)();\n\n      default:\n        throw new Error('@react-navigation/web: createBrowserApp() Invalid value for options.history ' + history);\n    }\n  }\n\n  return history || (0, _history.createBrowserHistory)();\n}\n\nfunction createBrowserApp(App, {\n  history: historyOption\n} = {}) {\n  const history = getHistory(historyOption);\n  let currentPathAndParams = getPathAndParamsFromLocation(history.location);\n\n  const initAction = App.router.getActionForPathAndParams(currentPathAndParams.path, currentPathAndParams.params) || _core.NavigationActions.init();\n\n  const setHistoryListener = dispatch => {\n    history.listen(location => {\n      const pathAndParams = getPathAndParamsFromLocation(location);\n\n      if (matchPathAndParams(pathAndParams, currentPathAndParams)) {\n        return;\n      }\n\n      currentPathAndParams = pathAndParams;\n      const action = App.router.getActionForPathAndParams(pathAndParams.path, pathAndParams.params);\n\n      if (action) {\n        dispatch(action);\n      } else {\n        dispatch(initAction);\n      }\n    });\n  };\n\n  class WebApp extends _react2.default.Component {\n    constructor(...args) {\n      var _temp;\n\n      return _temp = super(...args), this.state = {\n        nav: App.router.getStateForAction(initAction)\n      }, this._title = document.title, this._actionEventSubscribers = new Set(), this.dispatch = action => {\n        const lastState = this.state.nav;\n        const newState = App.router.getStateForAction(action, lastState);\n\n        const dispatchEvents = () => this._actionEventSubscribers.forEach(subscriber => subscriber({\n          type: 'action',\n          action,\n          state: newState,\n          lastState\n        }));\n\n        if (newState && newState !== lastState) {\n          this.setState({\n            nav: newState\n          }, () => {\n            this._onNavigationStateChange(lastState, newState, action);\n\n            dispatchEvents();\n          });\n          const pathAndParams = App.router.getPathAndParamsForState && App.router.getPathAndParamsForState(newState);\n\n          if (pathAndParams && !matchPathAndParams(pathAndParams, currentPathAndParams)) {\n            currentPathAndParams = pathAndParams;\n            history.push(`/${pathAndParams.path}?${queryString.stringify(pathAndParams.params)}`);\n          }\n        } else {\n          dispatchEvents();\n        }\n      }, _temp;\n    }\n\n    componentDidMount() {\n      setHistoryListener(this.dispatch);\n      this.updateTitle();\n\n      this._actionEventSubscribers.forEach(subscriber => subscriber({\n        type: 'action',\n        action: initAction,\n        state: this.state.nav,\n        lastState: null\n      }));\n    }\n\n    componentDidUpdate() {\n      this.updateTitle();\n    }\n\n    updateTitle() {\n      const state = this._navigation.state;\n      const childKey = state.routes[state.index].key;\n\n      const activeNav = this._navigation.getChildNavigation(childKey);\n\n      const opts = App.router.getScreenOptions(activeNav);\n      this._title = opts.title || opts.headerTitle;\n\n      if (this._title) {\n        document.title = this._title;\n      }\n    }\n\n    _onNavigationStateChange(prevNav, nav, action) {\n      if (typeof this.props.onNavigationStateChange === 'function') {\n        this.props.onNavigationStateChange(prevNav, nav, action);\n      }\n    }\n\n    render() {\n      this._navigation = (0, _core.getNavigation)(App.router, this.state.nav, this.dispatch, this._actionEventSubscribers, () => this.props.screenProps, () => this._navigation);\n      return _react2.default.createElement(_core.NavigationProvider, {\n        value: this._navigation\n      }, _react2.default.createElement(App, _extends({}, this.props, {\n        navigation: this._navigation\n      })));\n    }\n\n  }\n\n  return WebApp;\n}","map":{"version":3,"sources":["/Users/ryandavis/Development/expresstimes/React/node_modules/@react-navigation/web/dist/createBrowserApp.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","default","createBrowserApp","_history","require","_react","_react2","_interopRequireDefault","_core","obj","__esModule","queryString","getPathAndParamsFromLocation","location","path","encodeURI","pathname","substr","params","parse","search","matchPathAndParams","a","b","stringify","getHistory","history","createBrowserHistory","createHashHistory","createMemoryHistory","Error","App","historyOption","currentPathAndParams","initAction","router","getActionForPathAndParams","NavigationActions","init","setHistoryListener","dispatch","listen","pathAndParams","action","WebApp","Component","constructor","args","_temp","state","nav","getStateForAction","_title","document","title","_actionEventSubscribers","Set","lastState","newState","dispatchEvents","forEach","subscriber","type","setState","_onNavigationStateChange","getPathAndParamsForState","push","componentDidMount","updateTitle","componentDidUpdate","_navigation","childKey","routes","index","activeNav","getChildNavigation","opts","getScreenOptions","headerTitle","prevNav","props","onNavigationStateChange","render","getNavigation","screenProps","createElement","NavigationProvider","navigation"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAIA,IAAIC,QAAQ,GAAGJ,MAAM,CAACK,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIV,MAAM,CAACY,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ;AAAkQ;;;AAElQJ,OAAO,CAACa,OAAR,GAAkBC,gBAAlB;;AAEA,IAAIC,QAAQ,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AAEA,IAAIC,MAAM,GAAGD,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIE,OAAO,GAAGC,sBAAsB,CAACF,MAAD,CAApC;;AAEA,IAAIG,KAAK,GAAGJ,OAAO,CAAC,wBAAD,CAAnB;;AAEA,SAASG,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAER,IAAAA,OAAO,EAAEQ;AAAX,GAArC;AAAwD;AAE/F;;;AACA,MAAME,WAAW,GAAGP,OAAO,CAAC,cAAD,CAA3B;;AAEA,MAAMQ,4BAA4B,GAAGC,QAAQ,IAAI;AAC/C,QAAMC,IAAI,GAAGC,SAAS,CAACF,QAAQ,CAACG,QAAT,CAAkBC,MAAlB,CAAyB,CAAzB,CAAD,CAAtB;AACA,QAAMC,MAAM,GAAGP,WAAW,CAACQ,KAAZ,CAAkBN,QAAQ,CAACO,MAA3B,CAAf;AACA,SAAO;AAAEN,IAAAA,IAAF;AAAQI,IAAAA;AAAR,GAAP;AACD,CAJD;;AAMA,MAAMG,kBAAkB,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACnC,MAAID,CAAC,CAACR,IAAF,KAAWS,CAAC,CAACT,IAAjB,EAAuB;AACrB,WAAO,KAAP;AACD;;AACD,MAAIH,WAAW,CAACa,SAAZ,CAAsBF,CAAC,CAACJ,MAAxB,MAAoCP,WAAW,CAACa,SAAZ,CAAsBD,CAAC,CAACL,MAAxB,CAAxC,EAAyE;AACvE,WAAO,KAAP;AACD;;AACD,SAAO,IAAP;AACD,CARD;;AAUA,SAASO,UAAT,CAAoBC,OAApB,EAA6B;AAC3B,MAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,YAAQA,OAAR;AACE,WAAK,SAAL;AACE,eAAO,CAAC,GAAGvB,QAAQ,CAACwB,oBAAb,GAAP;;AACF,WAAK,MAAL;AACE,eAAO,CAAC,GAAGxB,QAAQ,CAACyB,iBAAb,GAAP;;AACF,WAAK,QAAL;AACE,eAAO,CAAC,GAAGzB,QAAQ,CAAC0B,mBAAb,GAAP;;AACF;AACE,cAAM,IAAIC,KAAJ,CAAU,iFAAiFJ,OAA3F,CAAN;AARJ;AAUD;;AACD,SAAOA,OAAO,IAAI,CAAC,GAAGvB,QAAQ,CAACwB,oBAAb,GAAlB;AACD;;AAED,SAASzB,gBAAT,CAA0B6B,GAA1B,EAA+B;AAAEL,EAAAA,OAAO,EAAEM;AAAX,IAA6B,EAA5D,EAAgE;AAC9D,QAAMN,OAAO,GAAGD,UAAU,CAACO,aAAD,CAA1B;AACA,MAAIC,oBAAoB,GAAGrB,4BAA4B,CAACc,OAAO,CAACb,QAAT,CAAvD;;AACA,QAAMqB,UAAU,GAAGH,GAAG,CAACI,MAAJ,CAAWC,yBAAX,CAAqCH,oBAAoB,CAACnB,IAA1D,EAAgEmB,oBAAoB,CAACf,MAArF,KAAgGV,KAAK,CAAC6B,iBAAN,CAAwBC,IAAxB,EAAnH;;AAEA,QAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrCd,IAAAA,OAAO,CAACe,MAAR,CAAe5B,QAAQ,IAAI;AACzB,YAAM6B,aAAa,GAAG9B,4BAA4B,CAACC,QAAD,CAAlD;;AACA,UAAIQ,kBAAkB,CAACqB,aAAD,EAAgBT,oBAAhB,CAAtB,EAA6D;AAC3D;AACD;;AACDA,MAAAA,oBAAoB,GAAGS,aAAvB;AACA,YAAMC,MAAM,GAAGZ,GAAG,CAACI,MAAJ,CAAWC,yBAAX,CAAqCM,aAAa,CAAC5B,IAAnD,EAAyD4B,aAAa,CAACxB,MAAvE,CAAf;;AACA,UAAIyB,MAAJ,EAAY;AACVH,QAAAA,QAAQ,CAACG,MAAD,CAAR;AACD,OAFD,MAEO;AACLH,QAAAA,QAAQ,CAACN,UAAD,CAAR;AACD;AACF,KAZD;AAaD,GAdD;;AAgBA,QAAMU,MAAN,SAAqBtC,OAAO,CAACL,OAAR,CAAgB4C,SAArC,CAA+C;AAC7CC,IAAAA,WAAW,CAAC,GAAGC,IAAJ,EAAU;AACnB,UAAIC,KAAJ;;AAEA,aAAOA,KAAK,GAAG,MAAM,GAAGD,IAAT,CAAR,EAAwB,KAAKE,KAAL,GAAa;AAAEC,QAAAA,GAAG,EAAEnB,GAAG,CAACI,MAAJ,CAAWgB,iBAAX,CAA6BjB,UAA7B;AAAP,OAArC,EAAwF,KAAKkB,MAAL,GAAcC,QAAQ,CAACC,KAA/G,EAAsH,KAAKC,uBAAL,GAA+B,IAAIC,GAAJ,EAArJ,EAAgK,KAAKhB,QAAL,GAAgBG,MAAM,IAAI;AAC/L,cAAMc,SAAS,GAAG,KAAKR,KAAL,CAAWC,GAA7B;AACA,cAAMQ,QAAQ,GAAG3B,GAAG,CAACI,MAAJ,CAAWgB,iBAAX,CAA6BR,MAA7B,EAAqCc,SAArC,CAAjB;;AACA,cAAME,cAAc,GAAG,MAAM,KAAKJ,uBAAL,CAA6BK,OAA7B,CAAqCC,UAAU,IAAIA,UAAU,CAAC;AACzFC,UAAAA,IAAI,EAAE,QADmF;AAEzFnB,UAAAA,MAFyF;AAGzFM,UAAAA,KAAK,EAAES,QAHkF;AAIzFD,UAAAA;AAJyF,SAAD,CAA7D,CAA7B;;AAMA,YAAIC,QAAQ,IAAIA,QAAQ,KAAKD,SAA7B,EAAwC;AACtC,eAAKM,QAAL,CAAc;AAAEb,YAAAA,GAAG,EAAEQ;AAAP,WAAd,EAAiC,MAAM;AACrC,iBAAKM,wBAAL,CAA8BP,SAA9B,EAAyCC,QAAzC,EAAmDf,MAAnD;;AACAgB,YAAAA,cAAc;AACf,WAHD;AAIA,gBAAMjB,aAAa,GAAGX,GAAG,CAACI,MAAJ,CAAW8B,wBAAX,IAAuClC,GAAG,CAACI,MAAJ,CAAW8B,wBAAX,CAAoCP,QAApC,CAA7D;;AACA,cAAIhB,aAAa,IAAI,CAACrB,kBAAkB,CAACqB,aAAD,EAAgBT,oBAAhB,CAAxC,EAA+E;AAC7EA,YAAAA,oBAAoB,GAAGS,aAAvB;AACAhB,YAAAA,OAAO,CAACwC,IAAR,CAAc,IAAGxB,aAAa,CAAC5B,IAAK,IAAGH,WAAW,CAACa,SAAZ,CAAsBkB,aAAa,CAACxB,MAApC,CAA4C,EAAnF;AACD;AACF,SAVD,MAUO;AACLyC,UAAAA,cAAc;AACf;AACF,OAtBM,EAsBJX,KAtBH;AAuBD;;AAEDmB,IAAAA,iBAAiB,GAAG;AAClB5B,MAAAA,kBAAkB,CAAC,KAAKC,QAAN,CAAlB;AACA,WAAK4B,WAAL;;AACA,WAAKb,uBAAL,CAA6BK,OAA7B,CAAqCC,UAAU,IAAIA,UAAU,CAAC;AAC5DC,QAAAA,IAAI,EAAE,QADsD;AAE5DnB,QAAAA,MAAM,EAAET,UAFoD;AAG5De,QAAAA,KAAK,EAAE,KAAKA,KAAL,CAAWC,GAH0C;AAI5DO,QAAAA,SAAS,EAAE;AAJiD,OAAD,CAA7D;AAMD;;AACDY,IAAAA,kBAAkB,GAAG;AACnB,WAAKD,WAAL;AACD;;AACDA,IAAAA,WAAW,GAAG;AAAA,YACJnB,KADI,GACM,KAAKqB,WADX,CACJrB,KADI;AAEZ,YAAMsB,QAAQ,GAAGtB,KAAK,CAACuB,MAAN,CAAavB,KAAK,CAACwB,KAAnB,EAA0B5E,GAA3C;;AACA,YAAM6E,SAAS,GAAG,KAAKJ,WAAL,CAAiBK,kBAAjB,CAAoCJ,QAApC,CAAlB;;AACA,YAAMK,IAAI,GAAG7C,GAAG,CAACI,MAAJ,CAAW0C,gBAAX,CAA4BH,SAA5B,CAAb;AACA,WAAKtB,MAAL,GAAcwB,IAAI,CAACtB,KAAL,IAAcsB,IAAI,CAACE,WAAjC;;AACA,UAAI,KAAK1B,MAAT,EAAiB;AACfC,QAAAA,QAAQ,CAACC,KAAT,GAAiB,KAAKF,MAAtB;AACD;AACF;;AAEDY,IAAAA,wBAAwB,CAACe,OAAD,EAAU7B,GAAV,EAAeP,MAAf,EAAuB;AAC7C,UAAI,OAAO,KAAKqC,KAAL,CAAWC,uBAAlB,KAA8C,UAAlD,EAA8D;AAC5D,aAAKD,KAAL,CAAWC,uBAAX,CAAmCF,OAAnC,EAA4C7B,GAA5C,EAAiDP,MAAjD;AACD;AACF;;AAEDuC,IAAAA,MAAM,GAAG;AACP,WAAKZ,WAAL,GAAmB,CAAC,GAAG9D,KAAK,CAAC2E,aAAV,EAAyBpD,GAAG,CAACI,MAA7B,EAAqC,KAAKc,KAAL,CAAWC,GAAhD,EAAqD,KAAKV,QAA1D,EAAoE,KAAKe,uBAAzE,EAAkG,MAAM,KAAKyB,KAAL,CAAWI,WAAnH,EAAgI,MAAM,KAAKd,WAA3I,CAAnB;AACA,aAAOhE,OAAO,CAACL,OAAR,CAAgBoF,aAAhB,CACL7E,KAAK,CAAC8E,kBADD,EAEL;AAAEjG,QAAAA,KAAK,EAAE,KAAKiF;AAAd,OAFK,EAGLhE,OAAO,CAACL,OAAR,CAAgBoF,aAAhB,CAA8BtD,GAA9B,EAAmCzC,QAAQ,CAAC,EAAD,EAAK,KAAK0F,KAAV,EAAiB;AAAEO,QAAAA,UAAU,EAAE,KAAKjB;AAAnB,OAAjB,CAA3C,CAHK,CAAP;AAKD;;AAlE4C;;AAoE/C,SAAO1B,MAAP;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; /* eslint-env browser */\n\nexports.default = createBrowserApp;\n\nvar _history = require('history');\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('@react-navigation/core');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable import/no-commonjs */\nconst queryString = require('query-string');\n\nconst getPathAndParamsFromLocation = location => {\n  const path = encodeURI(location.pathname.substr(1));\n  const params = queryString.parse(location.search);\n  return { path, params };\n};\n\nconst matchPathAndParams = (a, b) => {\n  if (a.path !== b.path) {\n    return false;\n  }\n  if (queryString.stringify(a.params) !== queryString.stringify(b.params)) {\n    return false;\n  }\n  return true;\n};\n\nfunction getHistory(history) {\n  if (typeof history === 'string') {\n    switch (history) {\n      case 'browser':\n        return (0, _history.createBrowserHistory)();\n      case 'hash':\n        return (0, _history.createHashHistory)();\n      case 'memory':\n        return (0, _history.createMemoryHistory)();\n      default:\n        throw new Error('@react-navigation/web: createBrowserApp() Invalid value for options.history ' + history);\n    }\n  }\n  return history || (0, _history.createBrowserHistory)();\n}\n\nfunction createBrowserApp(App, { history: historyOption } = {}) {\n  const history = getHistory(historyOption);\n  let currentPathAndParams = getPathAndParamsFromLocation(history.location);\n  const initAction = App.router.getActionForPathAndParams(currentPathAndParams.path, currentPathAndParams.params) || _core.NavigationActions.init();\n\n  const setHistoryListener = dispatch => {\n    history.listen(location => {\n      const pathAndParams = getPathAndParamsFromLocation(location);\n      if (matchPathAndParams(pathAndParams, currentPathAndParams)) {\n        return;\n      }\n      currentPathAndParams = pathAndParams;\n      const action = App.router.getActionForPathAndParams(pathAndParams.path, pathAndParams.params);\n      if (action) {\n        dispatch(action);\n      } else {\n        dispatch(initAction);\n      }\n    });\n  };\n\n  class WebApp extends _react2.default.Component {\n    constructor(...args) {\n      var _temp;\n\n      return _temp = super(...args), this.state = { nav: App.router.getStateForAction(initAction) }, this._title = document.title, this._actionEventSubscribers = new Set(), this.dispatch = action => {\n        const lastState = this.state.nav;\n        const newState = App.router.getStateForAction(action, lastState);\n        const dispatchEvents = () => this._actionEventSubscribers.forEach(subscriber => subscriber({\n          type: 'action',\n          action,\n          state: newState,\n          lastState\n        }));\n        if (newState && newState !== lastState) {\n          this.setState({ nav: newState }, () => {\n            this._onNavigationStateChange(lastState, newState, action);\n            dispatchEvents();\n          });\n          const pathAndParams = App.router.getPathAndParamsForState && App.router.getPathAndParamsForState(newState);\n          if (pathAndParams && !matchPathAndParams(pathAndParams, currentPathAndParams)) {\n            currentPathAndParams = pathAndParams;\n            history.push(`/${pathAndParams.path}?${queryString.stringify(pathAndParams.params)}`);\n          }\n        } else {\n          dispatchEvents();\n        }\n      }, _temp;\n    }\n\n    componentDidMount() {\n      setHistoryListener(this.dispatch);\n      this.updateTitle();\n      this._actionEventSubscribers.forEach(subscriber => subscriber({\n        type: 'action',\n        action: initAction,\n        state: this.state.nav,\n        lastState: null\n      }));\n    }\n    componentDidUpdate() {\n      this.updateTitle();\n    }\n    updateTitle() {\n      const { state } = this._navigation;\n      const childKey = state.routes[state.index].key;\n      const activeNav = this._navigation.getChildNavigation(childKey);\n      const opts = App.router.getScreenOptions(activeNav);\n      this._title = opts.title || opts.headerTitle;\n      if (this._title) {\n        document.title = this._title;\n      }\n    }\n\n    _onNavigationStateChange(prevNav, nav, action) {\n      if (typeof this.props.onNavigationStateChange === 'function') {\n        this.props.onNavigationStateChange(prevNav, nav, action);\n      }\n    }\n\n    render() {\n      this._navigation = (0, _core.getNavigation)(App.router, this.state.nav, this.dispatch, this._actionEventSubscribers, () => this.props.screenProps, () => this._navigation);\n      return _react2.default.createElement(\n        _core.NavigationProvider,\n        { value: this._navigation },\n        _react2.default.createElement(App, _extends({}, this.props, { navigation: this._navigation }))\n      );\n    }\n  }\n  return WebApp;\n}"]},"metadata":{},"sourceType":"script"}