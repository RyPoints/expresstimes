{"ast":null,"code":"'use strict';\n/**\n * Sequelize module for debug and deprecation messages.\n * It require a `context` for which messages will be printed.\n *\n * @module logging\n * @private\n */\n\nconst debug = require('debug');\n\nconst util = require('util');\n\nclass Logger {\n  constructor(config) {\n    this.config = Object.assign({\n      context: 'sequelize',\n      debug: true\n    }, config);\n  }\n\n  warn(message) {\n    // eslint-disable-next-line no-console\n    console.warn(`(${this.config.context}) Warning: ${message}`);\n  }\n\n  inspect(value) {\n    return util.inspect(value, false, 3);\n  }\n\n  debugContext(name) {\n    return debug(`${this.config.context}:${name}`);\n  }\n\n}\n\nexports.logger = new Logger();\nexports.Logger = Logger;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/node_modules/sequelize/lib/utils/logger.js"],"names":["debug","require","util","Logger","constructor","config","Object","assign","context","warn","message","console","inspect","value","debugContext","name","exports","logger"],"mappings":"AAAA;AAEA;;;;;;;;AAQA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AAEA,MAAME,MAAN,CAAa;AACXC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAElB,SAAKA,MAAL,GAAcC,MAAM,CAACC,MAAP,CAAc;AAC1BC,MAAAA,OAAO,EAAE,WADiB;AAE1BR,MAAAA,KAAK,EAAE;AAFmB,KAAd,EAGXK,MAHW,CAAd;AAID;;AAEDI,EAAAA,IAAI,CAACC,OAAD,EAAU;AACZ;AACAC,IAAAA,OAAO,CAACF,IAAR,CAAc,IAAG,KAAKJ,MAAL,CAAYG,OAAQ,cAAaE,OAAQ,EAA1D;AACD;;AAEDE,EAAAA,OAAO,CAACC,KAAD,EAAQ;AACb,WAAOX,IAAI,CAACU,OAAL,CAAaC,KAAb,EAAoB,KAApB,EAA2B,CAA3B,CAAP;AACD;;AAEDC,EAAAA,YAAY,CAACC,IAAD,EAAO;AACjB,WAAOf,KAAK,CAAE,GAAE,KAAKK,MAAL,CAAYG,OAAQ,IAAGO,IAAK,EAAhC,CAAZ;AACD;;AApBU;;AAuBbC,OAAO,CAACC,MAAR,GAAiB,IAAId,MAAJ,EAAjB;AAEAa,OAAO,CAACb,MAAR,GAAiBA,MAAjB","sourcesContent":["'use strict';\n\n/**\n * Sequelize module for debug and deprecation messages.\n * It require a `context` for which messages will be printed.\n *\n * @module logging\n * @private\n */\n\nconst debug = require('debug');\nconst util = require('util');\n\nclass Logger {\n  constructor(config) {\n\n    this.config = Object.assign({\n      context: 'sequelize',\n      debug: true\n    }, config);\n  }\n\n  warn(message) {\n    // eslint-disable-next-line no-console\n    console.warn(`(${this.config.context}) Warning: ${message}`);\n  }\n\n  inspect(value) {\n    return util.inspect(value, false, 3);\n  }\n\n  debugContext(name) {\n    return debug(`${this.config.context}:${name}`);\n  }\n}\n\nexports.logger = new Logger();\n\nexports.Logger = Logger;\n"]},"metadata":{},"sourceType":"script"}