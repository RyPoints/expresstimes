{"ast":null,"code":"var _jsxFileName = \"/Users/ryandavis/Development/expresstimes/React/src/articles.js\";\nimport './styles.css';\nimport defaultdata from './defaultdata';\nimport lodash from 'lodash';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Icon } from 'antd';\nimport 'antd/dist/antd.css';\nimport HomeHeader from './HomeHeader';\nimport PostHeader from './PostHeader';\nimport { render, Button } from 'react-dom';\nimport { Grid, Slug, Fade } from 'mauerwerk';\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nfunction readKey(file) {\n  var fs = require('fs');\n\n  try {\n    var string = fs.readFileSync(file, 'utf8');\n    return string;\n  } catch (e) {\n    console.log('Error:', e.stack);\n  }\n}\n\nconst Cell = ({\n  toggle,\n  title,\n  article,\n  maximized\n}) => React.createElement(\"div\", {\n  className: \"cell\",\n  style: {\n    backgroundImage: 'linear-gradient(-225deg, #FFFEFF 0%, #E5F0FF 100%)',\n    cursor: !maximized ? 'pointer' : 'auto'\n  },\n  onClick: !maximized ? toggle : undefined,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, React.createElement(Fade, {\n  show: maximized,\n  delay: maximized ? 400 : 0,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"details\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, React.createElement(Slug, {\n  delay: 600,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"close\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32\n  },\n  __self: this\n}, React.createElement(Icon, {\n  type: \"close\",\n  style: {\n    cursor: 'pointer'\n  },\n  onClick: toggle,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33\n  },\n  __self: this\n})), React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, title), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, ReactHtmlParser(article))))), React.createElement(Fade, {\n  show: !maximized,\n  from: {\n    opacity: 0,\n    transform: 'translate3d(0,140px,0)'\n  },\n  enter: {\n    opacity: 1,\n    transform: 'translate3d(0,0px,0)'\n  },\n  leave: {\n    opacity: 0,\n    transform: 'translate3d(0,-50px,0)'\n  },\n  delay: maximized ? 0 : 400,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}, title), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"content\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, ReactHtmlParser(article)))));\n\nclass HomeScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      defaultdata,\n      columns: 2,\n      margin: 70,\n      filter: '',\n      height: true\n    };\n\n    this.search = e => this.setState({\n      filter: e.target.value\n    });\n\n    this.shuffle = () => this.setState(state => ({\n      data: lodash.shuffle(state.data)\n    }));\n\n    this.setColumns = e => this.setState({\n      columns: parseInt(e.key)\n    });\n\n    this.setMargin = e => this.setState({\n      margin: parseInt(e.key)\n    });\n\n    this.setHeight = e => this.setState({\n      height: e\n    });\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://r8btapgiw9.execute-api.us-east-1.amazonaws.com/latest/get').then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        articles: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          articles = _this$state.articles;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"loading.gif\",\n        class: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        className: \"grid\" // Arbitrary data, should contain keys, possibly heights, etc.\n        ,\n        data: articles // Key accessor, instructs grid on how to get individual keys from the data set\n        ,\n        keys: d => d.id // Can be a fixed value or an individual data accessor\n        ,\n        heights: this.state.height ? d => d.height : 400 // Number of columns\n        ,\n        columns: this.state.columns // Space between elements\n        ,\n        margin: 20 // Removes the possibility to scroll away from a maximized element\n        ,\n        lockScroll: true // Delay when active elements (blown up) are minimized again\n        ,\n        closeDelay: 400,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, (data, maximized, toggle) => React.createElement(Cell, Object.assign({}, data, {\n        maximized: maximized,\n        toggle: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }))));\n    }\n  }\n\n}\n\nexport default HomeScreen;","map":{"version":3,"sources":["/Users/ryandavis/Development/expresstimes/React/src/articles.js"],"names":["defaultdata","lodash","ReactHtmlParser","Icon","HomeHeader","PostHeader","render","Button","Grid","Slug","Fade","React","Component","Fragment","BrowserRouter","Route","Switch","readKey","file","fs","require","string","readFileSync","e","console","log","stack","Cell","toggle","title","article","maximized","backgroundImage","cursor","undefined","opacity","transform","HomeScreen","constructor","props","state","columns","margin","filter","height","search","setState","target","value","shuffle","data","setColumns","parseInt","key","setMargin","setHeight","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","articles","message","d","id"],"mappings":"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","sourcesContent":["import './styles.css'\nimport defaultdata from './defaultdata'\nimport lodash from 'lodash'\nimport ReactHtmlParser from 'react-html-parser';\nimport { Icon } from 'antd'\nimport 'antd/dist/antd.css'\nimport HomeHeader from './HomeHeader'\nimport PostHeader from './PostHeader'\nimport { render, Button } from 'react-dom'\nimport { Grid, Slug, Fade } from 'mauerwerk'\nimport React, { Component, Fragment } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\n\nfunction readKey(file) {\n  var fs = require('fs');\n  try {\n    var string = fs.readFileSync(file, 'utf8');\n    return string;\n  } catch (e) {\n    console.log('Error:', e.stack);\n  }\n}\n\nconst Cell = ({ toggle, title, article, maximized }) => (\n  <div\n    className=\"cell\"\n    style={{ backgroundImage: 'linear-gradient(-225deg, #FFFEFF 0%, #E5F0FF 100%)', cursor: !maximized ? 'pointer' : 'auto' }}\n    onClick={!maximized ? toggle : undefined}>\n    <Fade show={maximized} delay={maximized ? 400 : 0}>\n      <div className=\"details\">\n        <Slug delay={600}>\n          <div className=\"close\">\n            <Icon type=\"close\" style={{ cursor: 'pointer' }} onClick={toggle} />\n          </div>\n          <h1>{title}</h1>\n          <p>{ReactHtmlParser(article)}</p>\n        </Slug>\n      </div>\n    </Fade>\n    <Fade\n      show={!maximized}\n      from={{ opacity: 0, transform: 'translate3d(0,140px,0)' }}\n      enter={{ opacity: 1, transform: 'translate3d(0,0px,0)' }}\n      leave={{ opacity: 0, transform: 'translate3d(0,-50px,0)' }}\n      delay={maximized ? 0 : 400}>\n      <div className=\"title\">{title}</div>\n      <p>\n        <div className=\"content\">{ReactHtmlParser(article)}</div>\n      </p>\n    </Fade>\n  </div>\n)\n\nclass HomeScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://r8btapgiw9.execute-api.us-east-1.amazonaws.com/latest/get')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            articles: result\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  state = { defaultdata, columns: 2, margin: 70, filter: '', height: true }\n  search = e => this.setState({ filter: e.target.value })\n  shuffle = () => this.setState(state => ({ data: lodash.shuffle(state.data) }))\n  setColumns = e => this.setState({ columns: parseInt(e.key) })\n  setMargin = e => this.setState({ margin: parseInt(e.key) })\n  setHeight = e => this.setState({ height: e })\n\n  render() {\n    const { error, isLoaded, articles } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div className='center'><img src=\"loading.gif\" class=\"center\"></img></div>;\n    } else {\n      return (\n        <div className=\"main\">\n          <Grid\n            className=\"grid\"\n            // Arbitrary data, should contain keys, possibly heights, etc.\n            data={articles}\n            // Key accessor, instructs grid on how to get individual keys from the data set\n            keys={d => d.id}\n            // Can be a fixed value or an individual data accessor\n            heights={this.state.height ? d => d.height : 400}\n            // Number of columns\n            columns={this.state.columns}\n            // Space between elements\n            margin={20}\n            // Removes the possibility to scroll away from a maximized element\n            lockScroll={true}\n            // Delay when active elements (blown up) are minimized again\n            closeDelay={400}>\n            {(data, maximized, toggle) => (\n              <Cell {...data} maximized={maximized} toggle={toggle} />\n            )}\n          </Grid>\n        </div>\n      )\n    }\n  }\n}\n\nexport default HomeScreen\n"]},"metadata":{},"sourceType":"module"}