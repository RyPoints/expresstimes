{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _decimaln = _interopRequireDefault(require(\"./decimaln\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst Decimal = {\n  id: 0x37,\n  type: 'DECIMAL',\n  name: 'Decimal',\n  declaration: function declaration(parameter) {\n    return 'decimal(' + this.resolvePrecision(parameter) + ', ' + this.resolveScale(parameter) + ')';\n  },\n  resolvePrecision: function resolvePrecision(parameter) {\n    if (parameter.precision != null) {\n      return parameter.precision;\n    } else if (parameter.value === null) {\n      return 1;\n    } else {\n      return 18;\n    }\n  },\n  resolveScale: function resolveScale(parameter) {\n    if (parameter.scale != null) {\n      return parameter.scale;\n    } else {\n      return 0;\n    }\n  },\n  writeTypeInfo: function writeTypeInfo(buffer, parameter) {\n    buffer.writeUInt8(_decimaln.default.id);\n\n    if (parameter.precision <= 9) {\n      buffer.writeUInt8(5);\n    } else if (parameter.precision <= 19) {\n      buffer.writeUInt8(9);\n    } else if (parameter.precision <= 28) {\n      buffer.writeUInt8(13);\n    } else {\n      buffer.writeUInt8(17);\n    }\n\n    buffer.writeUInt8(parameter.precision);\n    buffer.writeUInt8(parameter.scale);\n  },\n  writeParameterData: function writeParameterData(buffer, parameter, options, cb) {\n    if (parameter.value != null) {\n      const sign = parameter.value < 0 ? 0 : 1;\n      const value = Math.round(Math.abs(parameter.value * Math.pow(10, parameter.scale)));\n\n      if (parameter.precision <= 9) {\n        buffer.writeUInt8(5);\n        buffer.writeUInt8(sign);\n        buffer.writeUInt32LE(value);\n      } else if (parameter.precision <= 19) {\n        buffer.writeUInt8(9);\n        buffer.writeUInt8(sign);\n        buffer.writeUInt64LE(value);\n      } else if (parameter.precision <= 28) {\n        buffer.writeUInt8(13);\n        buffer.writeUInt8(sign);\n        buffer.writeUInt64LE(value);\n        buffer.writeUInt32LE(0x00000000);\n      } else {\n        buffer.writeUInt8(17);\n        buffer.writeUInt8(sign);\n        buffer.writeUInt64LE(value);\n        buffer.writeUInt32LE(0x00000000);\n        buffer.writeUInt32LE(0x00000000);\n      }\n    } else {\n      buffer.writeUInt8(0);\n    }\n\n    cb();\n  },\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    value = parseFloat(value);\n\n    if (isNaN(value)) {\n      return new TypeError('Invalid number.');\n    }\n\n    return value;\n  }\n};\nvar _default = Decimal;\nexports.default = _default;\nmodule.exports = Decimal;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/node_modules/tedious/lib/data-types/decimal.js"],"names":["Object","defineProperty","exports","value","default","_decimaln","_interopRequireDefault","require","obj","__esModule","Decimal","id","type","name","declaration","parameter","resolvePrecision","resolveScale","precision","scale","writeTypeInfo","buffer","writeUInt8","writeParameterData","options","cb","sign","Math","round","abs","pow","writeUInt32LE","writeUInt64LE","validate","parseFloat","isNaN","TypeError","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _decimaln = _interopRequireDefault(require(\"./decimaln\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst Decimal = {\n  id: 0x37,\n  type: 'DECIMAL',\n  name: 'Decimal',\n  declaration: function declaration(parameter) {\n    return 'decimal(' + this.resolvePrecision(parameter) + ', ' + this.resolveScale(parameter) + ')';\n  },\n  resolvePrecision: function resolvePrecision(parameter) {\n    if (parameter.precision != null) {\n      return parameter.precision;\n    } else if (parameter.value === null) {\n      return 1;\n    } else {\n      return 18;\n    }\n  },\n  resolveScale: function resolveScale(parameter) {\n    if (parameter.scale != null) {\n      return parameter.scale;\n    } else {\n      return 0;\n    }\n  },\n  writeTypeInfo: function writeTypeInfo(buffer, parameter) {\n    buffer.writeUInt8(_decimaln.default.id);\n\n    if (parameter.precision <= 9) {\n      buffer.writeUInt8(5);\n    } else if (parameter.precision <= 19) {\n      buffer.writeUInt8(9);\n    } else if (parameter.precision <= 28) {\n      buffer.writeUInt8(13);\n    } else {\n      buffer.writeUInt8(17);\n    }\n\n    buffer.writeUInt8(parameter.precision);\n    buffer.writeUInt8(parameter.scale);\n  },\n  writeParameterData: function writeParameterData(buffer, parameter, options, cb) {\n    if (parameter.value != null) {\n      const sign = parameter.value < 0 ? 0 : 1;\n      const value = Math.round(Math.abs(parameter.value * Math.pow(10, parameter.scale)));\n\n      if (parameter.precision <= 9) {\n        buffer.writeUInt8(5);\n        buffer.writeUInt8(sign);\n        buffer.writeUInt32LE(value);\n      } else if (parameter.precision <= 19) {\n        buffer.writeUInt8(9);\n        buffer.writeUInt8(sign);\n        buffer.writeUInt64LE(value);\n      } else if (parameter.precision <= 28) {\n        buffer.writeUInt8(13);\n        buffer.writeUInt8(sign);\n        buffer.writeUInt64LE(value);\n        buffer.writeUInt32LE(0x00000000);\n      } else {\n        buffer.writeUInt8(17);\n        buffer.writeUInt8(sign);\n        buffer.writeUInt64LE(value);\n        buffer.writeUInt32LE(0x00000000);\n        buffer.writeUInt32LE(0x00000000);\n      }\n    } else {\n      buffer.writeUInt8(0);\n    }\n\n    cb();\n  },\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    value = parseFloat(value);\n\n    if (isNaN(value)) {\n      return new TypeError('Invalid number.');\n    }\n\n    return value;\n  }\n};\nvar _default = Decimal;\nexports.default = _default;\nmodule.exports = Decimal;"]},"metadata":{},"sourceType":"script"}