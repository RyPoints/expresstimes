{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _sprintfJs = require(\"sprintf-js\");\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst optionBufferSize = 20;\nconst VERSION = 0x000000001;\nconst SUBBUILD = 0x0001;\nconst TOKEN = {\n  VERSION: 0x00,\n  ENCRYPTION: 0x01,\n  INSTOPT: 0x02,\n  THREADID: 0x03,\n  MARS: 0x04,\n  FEDAUTHREQUIRED: 0x06,\n  TERMINATOR: 0xFF\n};\nconst ENCRYPT = {\n  OFF: 0x00,\n  ON: 0x01,\n  NOT_SUP: 0x02,\n  REQ: 0x03\n};\nconst encryptByValue = {};\n\nfor (const name in ENCRYPT) {\n  const value = ENCRYPT[name];\n  encryptByValue[value] = name;\n}\n\nconst MARS = {\n  OFF: 0x00,\n  ON: 0x01\n};\nconst marsByValue = {};\n\nfor (const name in MARS) {\n  const value = MARS[name];\n  marsByValue[value] = name;\n}\n/*\n  s2.2.6.4\n */\n\n\nclass PreloginPayload {\n  constructor(bufferOrOptions = {\n    encrypt: false\n  }) {\n    if (bufferOrOptions instanceof Buffer) {\n      this.data = bufferOrOptions;\n      this.options = {\n        encrypt: false\n      };\n    } else {\n      this.options = bufferOrOptions;\n      this.createOptions();\n    }\n\n    this.extractOptions();\n  }\n\n  createOptions() {\n    const options = [this.createVersionOption(), this.createEncryptionOption(), this.createInstanceOption(), this.createThreadIdOption(), this.createMarsOption(), this.createFedAuthOption()];\n    let length = 0;\n\n    for (let i = 0, len = options.length; i < len; i++) {\n      const option = options[i];\n      length += 5 + option.data.length;\n    }\n\n    length++; // terminator\n\n    this.data = Buffer.alloc(length, 0);\n    let optionOffset = 0;\n    let optionDataOffset = 5 * options.length + 1;\n\n    for (let j = 0, len = options.length; j < len; j++) {\n      const option = options[j];\n      this.data.writeUInt8(option.token, optionOffset + 0);\n      this.data.writeUInt16BE(optionDataOffset, optionOffset + 1);\n      this.data.writeUInt16BE(option.data.length, optionOffset + 3);\n      optionOffset += 5;\n      option.data.copy(this.data, optionDataOffset);\n      optionDataOffset += option.data.length;\n    }\n\n    this.data.writeUInt8(TOKEN.TERMINATOR, optionOffset);\n  }\n\n  createVersionOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt32BE(VERSION);\n    buffer.writeUInt16BE(SUBBUILD);\n    return {\n      token: TOKEN.VERSION,\n      data: buffer.data\n    };\n  }\n\n  createEncryptionOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n\n    if (this.options.encrypt) {\n      buffer.writeUInt8(ENCRYPT.ON);\n    } else {\n      buffer.writeUInt8(ENCRYPT.NOT_SUP);\n    }\n\n    return {\n      token: TOKEN.ENCRYPTION,\n      data: buffer.data\n    };\n  }\n\n  createInstanceOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt8(0x00);\n    return {\n      token: TOKEN.INSTOPT,\n      data: buffer.data\n    };\n  }\n\n  createThreadIdOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt32BE(0x00);\n    return {\n      token: TOKEN.THREADID,\n      data: buffer.data\n    };\n  }\n\n  createMarsOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt8(MARS.OFF);\n    return {\n      token: TOKEN.MARS,\n      data: buffer.data\n    };\n  }\n\n  createFedAuthOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt8(0x01);\n    return {\n      token: TOKEN.FEDAUTHREQUIRED,\n      data: buffer.data\n    };\n  }\n\n  extractOptions() {\n    let offset = 0;\n\n    while (this.data[offset] !== TOKEN.TERMINATOR) {\n      let dataOffset = this.data.readUInt16BE(offset + 1);\n      const dataLength = this.data.readUInt16BE(offset + 3);\n\n      switch (this.data[offset]) {\n        case TOKEN.VERSION:\n          this.extractVersion(dataOffset);\n          break;\n\n        case TOKEN.ENCRYPTION:\n          this.extractEncryption(dataOffset);\n          break;\n\n        case TOKEN.INSTOPT:\n          this.extractInstance(dataOffset);\n          break;\n\n        case TOKEN.THREADID:\n          if (dataLength > 0) {\n            this.extractThreadId(dataOffset);\n          }\n\n          break;\n\n        case TOKEN.MARS:\n          this.extractMars(dataOffset);\n          break;\n\n        case TOKEN.FEDAUTHREQUIRED:\n          this.extractFedAuth(dataOffset);\n          break;\n      }\n\n      offset += 5;\n      dataOffset += dataLength;\n    }\n  }\n\n  extractVersion(offset) {\n    this.version = {\n      major: this.data.readUInt8(offset + 0),\n      minor: this.data.readUInt8(offset + 1),\n      patch: this.data.readUInt8(offset + 2),\n      trivial: this.data.readUInt8(offset + 3),\n      subbuild: this.data.readUInt16BE(offset + 4)\n    };\n  }\n\n  extractEncryption(offset) {\n    this.encryption = this.data.readUInt8(offset);\n    this.encryptionString = encryptByValue[this.encryption];\n  }\n\n  extractInstance(offset) {\n    this.instance = this.data.readUInt8(offset);\n  }\n\n  extractThreadId(offset) {\n    this.threadId = this.data.readUInt32BE(offset);\n  }\n\n  extractMars(offset) {\n    this.mars = this.data.readUInt8(offset);\n    this.marsString = marsByValue[this.mars];\n  }\n\n  extractFedAuth(offset) {\n    this.fedAuthRequired = this.data.readUInt8(offset);\n  }\n\n  toString(indent = '') {\n    return indent + 'PreLogin - ' + (0, _sprintfJs.sprintf)('version:%d.%d.%d.%d %d, encryption:0x%02X(%s), instopt:0x%02X, threadId:0x%08X, mars:0x%02X(%s)', this.version.major, this.version.minor, this.version.patch, this.version.trivial, this.version.subbuild, this.encryption ? this.encryption : 0, this.encryptionString ? this.encryptionString : '', this.instance ? this.instance : 0, this.threadId ? this.threadId : 0, this.mars ? this.mars : 0, this.marsString ? this.marsString : '');\n  }\n\n}\n\nvar _default = PreloginPayload;\nexports.default = _default;\nmodule.exports = PreloginPayload;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/node_modules/tedious/lib/prelogin-payload.js"],"names":["Object","defineProperty","exports","value","default","_sprintfJs","require","_writableTrackingBuffer","_interopRequireDefault","obj","__esModule","optionBufferSize","VERSION","SUBBUILD","TOKEN","ENCRYPTION","INSTOPT","THREADID","MARS","FEDAUTHREQUIRED","TERMINATOR","ENCRYPT","OFF","ON","NOT_SUP","REQ","encryptByValue","name","marsByValue","PreloginPayload","constructor","bufferOrOptions","encrypt","Buffer","data","options","createOptions","extractOptions","createVersionOption","createEncryptionOption","createInstanceOption","createThreadIdOption","createMarsOption","createFedAuthOption","length","i","len","option","alloc","optionOffset","optionDataOffset","j","writeUInt8","token","writeUInt16BE","copy","buffer","writeUInt32BE","offset","dataOffset","readUInt16BE","dataLength","extractVersion","extractEncryption","extractInstance","extractThreadId","extractMars","extractFedAuth","version","major","readUInt8","minor","patch","trivial","subbuild","encryption","encryptionString","instance","threadId","readUInt32BE","mars","marsString","fedAuthRequired","toString","indent","sprintf","_default","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _sprintfJs = require(\"sprintf-js\");\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst optionBufferSize = 20;\nconst VERSION = 0x000000001;\nconst SUBBUILD = 0x0001;\nconst TOKEN = {\n  VERSION: 0x00,\n  ENCRYPTION: 0x01,\n  INSTOPT: 0x02,\n  THREADID: 0x03,\n  MARS: 0x04,\n  FEDAUTHREQUIRED: 0x06,\n  TERMINATOR: 0xFF\n};\nconst ENCRYPT = {\n  OFF: 0x00,\n  ON: 0x01,\n  NOT_SUP: 0x02,\n  REQ: 0x03\n};\nconst encryptByValue = {};\n\nfor (const name in ENCRYPT) {\n  const value = ENCRYPT[name];\n  encryptByValue[value] = name;\n}\n\nconst MARS = {\n  OFF: 0x00,\n  ON: 0x01\n};\nconst marsByValue = {};\n\nfor (const name in MARS) {\n  const value = MARS[name];\n  marsByValue[value] = name;\n}\n\n/*\n  s2.2.6.4\n */\nclass PreloginPayload {\n  constructor(bufferOrOptions = {\n    encrypt: false\n  }) {\n    if (bufferOrOptions instanceof Buffer) {\n      this.data = bufferOrOptions;\n      this.options = {\n        encrypt: false\n      };\n    } else {\n      this.options = bufferOrOptions;\n      this.createOptions();\n    }\n\n    this.extractOptions();\n  }\n\n  createOptions() {\n    const options = [this.createVersionOption(), this.createEncryptionOption(), this.createInstanceOption(), this.createThreadIdOption(), this.createMarsOption(), this.createFedAuthOption()];\n    let length = 0;\n\n    for (let i = 0, len = options.length; i < len; i++) {\n      const option = options[i];\n      length += 5 + option.data.length;\n    }\n\n    length++; // terminator\n\n    this.data = Buffer.alloc(length, 0);\n    let optionOffset = 0;\n    let optionDataOffset = 5 * options.length + 1;\n\n    for (let j = 0, len = options.length; j < len; j++) {\n      const option = options[j];\n      this.data.writeUInt8(option.token, optionOffset + 0);\n      this.data.writeUInt16BE(optionDataOffset, optionOffset + 1);\n      this.data.writeUInt16BE(option.data.length, optionOffset + 3);\n      optionOffset += 5;\n      option.data.copy(this.data, optionDataOffset);\n      optionDataOffset += option.data.length;\n    }\n\n    this.data.writeUInt8(TOKEN.TERMINATOR, optionOffset);\n  }\n\n  createVersionOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt32BE(VERSION);\n    buffer.writeUInt16BE(SUBBUILD);\n    return {\n      token: TOKEN.VERSION,\n      data: buffer.data\n    };\n  }\n\n  createEncryptionOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n\n    if (this.options.encrypt) {\n      buffer.writeUInt8(ENCRYPT.ON);\n    } else {\n      buffer.writeUInt8(ENCRYPT.NOT_SUP);\n    }\n\n    return {\n      token: TOKEN.ENCRYPTION,\n      data: buffer.data\n    };\n  }\n\n  createInstanceOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt8(0x00);\n    return {\n      token: TOKEN.INSTOPT,\n      data: buffer.data\n    };\n  }\n\n  createThreadIdOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt32BE(0x00);\n    return {\n      token: TOKEN.THREADID,\n      data: buffer.data\n    };\n  }\n\n  createMarsOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt8(MARS.OFF);\n    return {\n      token: TOKEN.MARS,\n      data: buffer.data\n    };\n  }\n\n  createFedAuthOption() {\n    const buffer = new _writableTrackingBuffer.default(optionBufferSize);\n    buffer.writeUInt8(0x01);\n    return {\n      token: TOKEN.FEDAUTHREQUIRED,\n      data: buffer.data\n    };\n  }\n\n  extractOptions() {\n    let offset = 0;\n\n    while (this.data[offset] !== TOKEN.TERMINATOR) {\n      let dataOffset = this.data.readUInt16BE(offset + 1);\n      const dataLength = this.data.readUInt16BE(offset + 3);\n\n      switch (this.data[offset]) {\n        case TOKEN.VERSION:\n          this.extractVersion(dataOffset);\n          break;\n\n        case TOKEN.ENCRYPTION:\n          this.extractEncryption(dataOffset);\n          break;\n\n        case TOKEN.INSTOPT:\n          this.extractInstance(dataOffset);\n          break;\n\n        case TOKEN.THREADID:\n          if (dataLength > 0) {\n            this.extractThreadId(dataOffset);\n          }\n\n          break;\n\n        case TOKEN.MARS:\n          this.extractMars(dataOffset);\n          break;\n\n        case TOKEN.FEDAUTHREQUIRED:\n          this.extractFedAuth(dataOffset);\n          break;\n      }\n\n      offset += 5;\n      dataOffset += dataLength;\n    }\n  }\n\n  extractVersion(offset) {\n    this.version = {\n      major: this.data.readUInt8(offset + 0),\n      minor: this.data.readUInt8(offset + 1),\n      patch: this.data.readUInt8(offset + 2),\n      trivial: this.data.readUInt8(offset + 3),\n      subbuild: this.data.readUInt16BE(offset + 4)\n    };\n  }\n\n  extractEncryption(offset) {\n    this.encryption = this.data.readUInt8(offset);\n    this.encryptionString = encryptByValue[this.encryption];\n  }\n\n  extractInstance(offset) {\n    this.instance = this.data.readUInt8(offset);\n  }\n\n  extractThreadId(offset) {\n    this.threadId = this.data.readUInt32BE(offset);\n  }\n\n  extractMars(offset) {\n    this.mars = this.data.readUInt8(offset);\n    this.marsString = marsByValue[this.mars];\n  }\n\n  extractFedAuth(offset) {\n    this.fedAuthRequired = this.data.readUInt8(offset);\n  }\n\n  toString(indent = '') {\n    return indent + 'PreLogin - ' + (0, _sprintfJs.sprintf)('version:%d.%d.%d.%d %d, encryption:0x%02X(%s), instopt:0x%02X, threadId:0x%08X, mars:0x%02X(%s)', this.version.major, this.version.minor, this.version.patch, this.version.trivial, this.version.subbuild, this.encryption ? this.encryption : 0, this.encryptionString ? this.encryptionString : '', this.instance ? this.instance : 0, this.threadId ? this.threadId : 0, this.mars ? this.mars : 0, this.marsString ? this.marsString : '');\n  }\n\n}\n\nvar _default = PreloginPayload;\nexports.default = _default;\nmodule.exports = PreloginPayload;"]},"metadata":{},"sourceType":"script"}