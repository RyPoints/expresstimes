{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _token = require(\"./token\");\n\nvar _valueParser = _interopRequireDefault(require(\"../value-parser\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // s2.2.7.17\n\n\nfunction rowParser(parser, colMetadata, options, callback) {\n  const columns = [];\n  const len = colMetadata.length;\n  let i = 0;\n\n  function next(done) {\n    if (i === len) {\n      return done();\n    }\n\n    const columnMetaData = colMetadata[i];\n    (0, _valueParser.default)(parser, columnMetaData, options, value => {\n      columns.push({\n        value: value,\n        metadata: columnMetaData\n      });\n      i++;\n      next(done);\n    });\n  }\n\n  next(() => {\n    if (options.useColumnNames) {\n      const columnsMap = {};\n      columns.forEach(column => {\n        const colName = column.metadata.colName;\n\n        if (columnsMap[colName] == null) {\n          columnsMap[colName] = column;\n        }\n      });\n      callback(new _token.RowToken(columnsMap));\n    } else {\n      callback(new _token.RowToken(columns));\n    }\n  });\n}\n\nvar _default = rowParser;\nexports.default = _default;\nmodule.exports = rowParser;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/node_modules/tedious/lib/token/row-token-parser.js"],"names":["Object","defineProperty","exports","value","default","_token","require","_valueParser","_interopRequireDefault","obj","__esModule","rowParser","parser","colMetadata","options","callback","columns","len","length","i","next","done","columnMetaData","push","metadata","useColumnNames","columnsMap","forEach","column","colName","RowToken","_default","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIC,YAAY,GAAGC,sBAAsB,CAACF,OAAO,CAAC,iBAAD,CAAR,CAAzC;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD,C,CAE/F;;;AACA,SAASE,SAAT,CAAmBC,MAAnB,EAA2BC,WAA3B,EAAwCC,OAAxC,EAAiDC,QAAjD,EAA2D;AACzD,QAAMC,OAAO,GAAG,EAAhB;AACA,QAAMC,GAAG,GAAGJ,WAAW,CAACK,MAAxB;AACA,MAAIC,CAAC,GAAG,CAAR;;AAEA,WAASC,IAAT,CAAcC,IAAd,EAAoB;AAClB,QAAIF,CAAC,KAAKF,GAAV,EAAe;AACb,aAAOI,IAAI,EAAX;AACD;;AAED,UAAMC,cAAc,GAAGT,WAAW,CAACM,CAAD,CAAlC;AACA,KAAC,GAAGZ,YAAY,CAACH,OAAjB,EAA0BQ,MAA1B,EAAkCU,cAAlC,EAAkDR,OAAlD,EAA2DX,KAAK,IAAI;AAClEa,MAAAA,OAAO,CAACO,IAAR,CAAa;AACXpB,QAAAA,KAAK,EAAEA,KADI;AAEXqB,QAAAA,QAAQ,EAAEF;AAFC,OAAb;AAIAH,MAAAA,CAAC;AACDC,MAAAA,IAAI,CAACC,IAAD,CAAJ;AACD,KAPD;AAQD;;AAEDD,EAAAA,IAAI,CAAC,MAAM;AACT,QAAIN,OAAO,CAACW,cAAZ,EAA4B;AAC1B,YAAMC,UAAU,GAAG,EAAnB;AACAV,MAAAA,OAAO,CAACW,OAAR,CAAgBC,MAAM,IAAI;AACxB,cAAMC,OAAO,GAAGD,MAAM,CAACJ,QAAP,CAAgBK,OAAhC;;AAEA,YAAIH,UAAU,CAACG,OAAD,CAAV,IAAuB,IAA3B,EAAiC;AAC/BH,UAAAA,UAAU,CAACG,OAAD,CAAV,GAAsBD,MAAtB;AACD;AACF,OAND;AAOAb,MAAAA,QAAQ,CAAC,IAAIV,MAAM,CAACyB,QAAX,CAAoBJ,UAApB,CAAD,CAAR;AACD,KAVD,MAUO;AACLX,MAAAA,QAAQ,CAAC,IAAIV,MAAM,CAACyB,QAAX,CAAoBd,OAApB,CAAD,CAAR;AACD;AACF,GAdG,CAAJ;AAeD;;AAED,IAAIe,QAAQ,GAAGpB,SAAf;AACAT,OAAO,CAACE,OAAR,GAAkB2B,QAAlB;AACAC,MAAM,CAAC9B,OAAP,GAAiBS,SAAjB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _token = require(\"./token\");\n\nvar _valueParser = _interopRequireDefault(require(\"../value-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// s2.2.7.17\nfunction rowParser(parser, colMetadata, options, callback) {\n  const columns = [];\n  const len = colMetadata.length;\n  let i = 0;\n\n  function next(done) {\n    if (i === len) {\n      return done();\n    }\n\n    const columnMetaData = colMetadata[i];\n    (0, _valueParser.default)(parser, columnMetaData, options, value => {\n      columns.push({\n        value: value,\n        metadata: columnMetaData\n      });\n      i++;\n      next(done);\n    });\n  }\n\n  next(() => {\n    if (options.useColumnNames) {\n      const columnsMap = {};\n      columns.forEach(column => {\n        const colName = column.metadata.colName;\n\n        if (columnsMap[colName] == null) {\n          columnsMap[colName] = column;\n        }\n      });\n      callback(new _token.RowToken(columnsMap));\n    } else {\n      callback(new _token.RowToken(columns));\n    }\n  });\n}\n\nvar _default = rowParser;\nexports.default = _default;\nmodule.exports = rowParser;"]},"metadata":{},"sourceType":"script"}