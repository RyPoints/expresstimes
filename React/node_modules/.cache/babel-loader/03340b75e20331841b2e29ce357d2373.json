{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n/*global installedChunks $hotChunkFilename$ $require$ hotAddUpdateChunk $hotMainFilename$ */\nmodule.exports = function () {\n  // eslint-disable-next-line no-unused-vars\n  function hotDownloadUpdateChunk(chunkId) {\n    var filename = require(\"path\").join(__dirname, $hotChunkFilename$);\n\n    require(\"fs\").readFile(filename, \"utf-8\", function (err, content) {\n      if (err) {\n        if ($require$.onError) return $require$.oe(err);\n        throw err;\n      }\n\n      var chunk = {};\n\n      require(\"vm\").runInThisContext(\"(function(exports) {\" + content + \"\\n})\", {\n        filename: filename\n      })(chunk);\n\n      hotAddUpdateChunk(chunk.id, chunk.modules);\n    });\n  } // eslint-disable-next-line no-unused-vars\n\n\n  function hotDownloadManifest() {\n    var filename = require(\"path\").join(__dirname, $hotMainFilename$);\n\n    return new Promise(function (resolve, reject) {\n      require(\"fs\").readFile(filename, \"utf-8\", function (err, content) {\n        if (err) return resolve();\n\n        try {\n          var update = JSON.parse(content);\n        } catch (e) {\n          return reject(e);\n        }\n\n        resolve(update);\n      });\n    });\n  } // eslint-disable-next-line no-unused-vars\n\n\n  function hotDisposeChunk(chunkId) {\n    delete installedChunks[chunkId];\n  }\n};","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/node_modules/webpack/lib/node/NodeMainTemplateAsync.runtime.js"],"names":["module","exports","hotDownloadUpdateChunk","chunkId","filename","require","join","__dirname","$hotChunkFilename$","readFile","err","content","$require$","onError","oe","chunk","runInThisContext","hotAddUpdateChunk","id","modules","hotDownloadManifest","$hotMainFilename$","Promise","resolve","reject","update","JSON","parse","e","hotDisposeChunk","installedChunks"],"mappings":"AAAA;;;;;AAIA;AACAA,MAAM,CAACC,OAAP,GAAiB,YAAW;AAC3B;AACA,WAASC,sBAAT,CAAgCC,OAAhC,EAAyC;AACxC,QAAIC,QAAQ,GAAGC,OAAO,CAAC,MAAD,CAAP,CAAgBC,IAAhB,CAAqBC,SAArB,EAAgCC,kBAAhC,CAAf;;AACAH,IAAAA,OAAO,CAAC,IAAD,CAAP,CAAcI,QAAd,CAAuBL,QAAvB,EAAiC,OAAjC,EAA0C,UAASM,GAAT,EAAcC,OAAd,EAAuB;AAChE,UAAID,GAAJ,EAAS;AACR,YAAIE,SAAS,CAACC,OAAd,EAAuB,OAAOD,SAAS,CAACE,EAAV,CAAaJ,GAAb,CAAP;AACvB,cAAMA,GAAN;AACA;;AACD,UAAIK,KAAK,GAAG,EAAZ;;AACAV,MAAAA,OAAO,CAAC,IAAD,CAAP,CAAcW,gBAAd,CACC,yBAAyBL,OAAzB,GAAmC,MADpC,EAEC;AAAEP,QAAAA,QAAQ,EAAEA;AAAZ,OAFD,EAGEW,KAHF;;AAIAE,MAAAA,iBAAiB,CAACF,KAAK,CAACG,EAAP,EAAWH,KAAK,CAACI,OAAjB,CAAjB;AACA,KAXD;AAYA,GAhB0B,CAkB3B;;;AACA,WAASC,mBAAT,GAA+B;AAC9B,QAAIhB,QAAQ,GAAGC,OAAO,CAAC,MAAD,CAAP,CAAgBC,IAAhB,CAAqBC,SAArB,EAAgCc,iBAAhC,CAAf;;AACA,WAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAC5CnB,MAAAA,OAAO,CAAC,IAAD,CAAP,CAAcI,QAAd,CAAuBL,QAAvB,EAAiC,OAAjC,EAA0C,UAASM,GAAT,EAAcC,OAAd,EAAuB;AAChE,YAAID,GAAJ,EAAS,OAAOa,OAAO,EAAd;;AACT,YAAI;AACH,cAAIE,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWhB,OAAX,CAAb;AACA,SAFD,CAEE,OAAOiB,CAAP,EAAU;AACX,iBAAOJ,MAAM,CAACI,CAAD,CAAb;AACA;;AACDL,QAAAA,OAAO,CAACE,MAAD,CAAP;AACA,OARD;AASA,KAVM,CAAP;AAWA,GAhC0B,CAkC3B;;;AACA,WAASI,eAAT,CAAyB1B,OAAzB,EAAkC;AACjC,WAAO2B,eAAe,CAAC3B,OAAD,CAAtB;AACA;AACD,CAtCD","sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/*global installedChunks $hotChunkFilename$ $require$ hotAddUpdateChunk $hotMainFilename$ */\nmodule.exports = function() {\n\t// eslint-disable-next-line no-unused-vars\n\tfunction hotDownloadUpdateChunk(chunkId) {\n\t\tvar filename = require(\"path\").join(__dirname, $hotChunkFilename$);\n\t\trequire(\"fs\").readFile(filename, \"utf-8\", function(err, content) {\n\t\t\tif (err) {\n\t\t\t\tif ($require$.onError) return $require$.oe(err);\n\t\t\t\tthrow err;\n\t\t\t}\n\t\t\tvar chunk = {};\n\t\t\trequire(\"vm\").runInThisContext(\n\t\t\t\t\"(function(exports) {\" + content + \"\\n})\",\n\t\t\t\t{ filename: filename }\n\t\t\t)(chunk);\n\t\t\thotAddUpdateChunk(chunk.id, chunk.modules);\n\t\t});\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction hotDownloadManifest() {\n\t\tvar filename = require(\"path\").join(__dirname, $hotMainFilename$);\n\t\treturn new Promise(function(resolve, reject) {\n\t\t\trequire(\"fs\").readFile(filename, \"utf-8\", function(err, content) {\n\t\t\t\tif (err) return resolve();\n\t\t\t\ttry {\n\t\t\t\t\tvar update = JSON.parse(content);\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn reject(e);\n\t\t\t\t}\n\t\t\t\tresolve(update);\n\t\t\t});\n\t\t});\n\t}\n\n\t// eslint-disable-next-line no-unused-vars\n\tfunction hotDisposeChunk(chunkId) {\n\t\tdelete installedChunks[chunkId];\n\t}\n};\n"]},"metadata":{},"sourceType":"script"}