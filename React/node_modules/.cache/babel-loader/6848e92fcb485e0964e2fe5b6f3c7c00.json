{"ast":null,"code":"var _jsxFileName = \"/Users/ryandavis/Development/reactapp/expresstimes/src/index.js\";\nimport './styles.css';\nimport olddata from './olddata';\nimport lodash from 'lodash';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Icon } from 'antd';\nimport 'antd/dist/antd.css';\nimport Header from './Header';\nimport { render } from 'react-dom';\nimport { Grid, Slug, Fade } from 'mauerwerk';\nimport React, { Component, Fragment } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\n\nconst low = require('lowdb'); //import Sequelize from 'sequelize';\n//import Sequelize from \"sequelize\"\n//const Sequelize = require('sequelize');\n//const sequelize = new Sequelize(readKey('database.key'));\n// const sequelize = new Sequelize('articledb', 'postgres', '3xpress+imes', {\n//   host: 'expressdb.cmf2cefclruk.us-east-1.rds.amazonaws.com:5432',\n//   dialect: 'postgres'\n// });\n// Model\n// class Article extends Sequelize.Model {}\n// Article.init({\n//   id: {\n// \t  primaryKey: true,\n// \t  type:Sequelize.INTEGER\n// \t},\n//   title: Sequelize.TEXT,\n//   text: Sequelize.TEXT\n// }, { sequelize, modelName: 'article' });\n// sequelize\n//     .authenticate()\n//     .then(() => {\n//         console.log('Connection has been established successfully.');\n//     })\n//     .catch(err => {\n//         console.error('Unable to connect to the database:', err);\n//     });\n// function getArticles(){\n//   Article.findAll().then( articles=>{\n//     console.log(articles);\n//   });\n// }\n\n\nfunction readKey(file) {\n  var fs = require('fs');\n\n  try {\n    var string = fs.readFileSync(file, 'utf8');\n    return string;\n  } catch (e) {\n    console.log('Error:', e.stack);\n  }\n}\n\nconst Cell = ({\n  toggle,\n  title,\n  article,\n  name,\n  height,\n  description,\n  css,\n  maximized\n}) => React.createElement(\"div\", {\n  className: \"cell\",\n  style: {\n    backgroundImage: 'linear-gradient(-225deg, #FFFEFF 0%, #E5F0FF 100%)',\n    cursor: !maximized ? 'pointer' : 'auto'\n  },\n  onClick: !maximized ? toggle : undefined,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, React.createElement(Fade, {\n  show: maximized,\n  delay: maximized ? 400 : 0,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"details\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76\n  },\n  __self: this\n}, React.createElement(Slug, {\n  delay: 600,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 77\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"close\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 78\n  },\n  __self: this\n}, React.createElement(Icon, {\n  type: \"close\",\n  style: {\n    cursor: 'pointer'\n  },\n  onClick: toggle,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n})), React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 81\n  },\n  __self: this\n}, title), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 82\n  },\n  __self: this\n}, ReactHtmlParser(article))))), React.createElement(Fade, {\n  show: !maximized,\n  from: {\n    opacity: 0,\n    transform: 'translate3d(0,140px,0)'\n  },\n  enter: {\n    opacity: 1,\n    transform: 'translate3d(0,0px,0)'\n  },\n  leave: {\n    opacity: 0,\n    transform: 'translate3d(0,-50px,0)'\n  },\n  delay: maximized ? 0 : 400,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n}, title), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"content\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94\n  },\n  __self: this\n}, ReactHtmlParser(article)))));\n\nfunction Main() {\n  return React.createElement(\"main\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/post\",\n    component: Post,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  })));\n}\n\nfunction Home() {\n  //const { error, isLoaded, articles } = this.state;\n  return (//   <Grid\n    //   className=\"grid\"\n    //   // Arbitrary data, should contain keys, possibly heights, etc.\n    //   data={articles}\n    //   // Key accessor, instructs grid on how to get individual keys from the data set\n    //   keys={d => d.id}\n    //   // Can be a fixed value or an individual data accessor\n    //   heights={this.state.height ? d => d.height : 400}\n    //   // Number of columns\n    //   columns={this.state.columns}\n    //   // Space between elements\n    //   margin={20}\n    //   // Removes the possibility to scroll away from a maximized element\n    //   lockScroll={true}\n    //   // Delay when active elements (blown up) are minimized again\n    //   closeDelay={400}>\n    //   {(data, maximized, toggle) => (\n    //     <Cell {...data} maximized={maximized} toggle={toggle} />\n    //   )}\n    // </Grid>\n    React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })\n  );\n}\n\nfunction Post() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  });\n}\n\nconst RootStack = createStackNavigator({\n  Home: HomeScreen,\n  Post: PostScreen\n}, {\n  initialRouteName: 'Home'\n});\nconst AppContainer = createAppContainer(RootStack);\n\nclass HomeScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      olddata,\n      columns: 2,\n      margin: 70,\n      filter: '',\n      height: true\n    };\n\n    this.search = e => this.setState({\n      filter: e.target.value\n    });\n\n    this.shuffle = () => this.setState(state => ({\n      data: lodash.shuffle(state.data)\n    }));\n\n    this.setColumns = e => this.setState({\n      columns: parseInt(e.key)\n    });\n\n    this.setMargin = e => this.setState({\n      margin: parseInt(e.key)\n    });\n\n    this.setHeight = e => this.setState({\n      height: e\n    });\n\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://yc9qt36506.execute-api.us-east-1.amazonaws.com/latest/hello').then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        articles: result\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    }); // .then(response => response.json())\n    // .then(data => this.setState({ data }));\n  } // Database\n\n\n  render() {\n    {\n      console.log('this.state.data');\n    }\n    {\n      console.log(this.state.data);\n    } // var data = this.state.data.filter(\n    //   d => d.name.toLowerCase().indexOf(this.state.filter) !== -1\n    // )\n\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          articles = _this$state.articles;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        className: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"loading.gif\",\n        class: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Header, Object.assign({}, this.state, {\n        search: this.search,\n        shuffle: this.shuffle,\n        setColumns: this.setColumns,\n        setMargin: this.setMargin,\n        setHeight: this.setHeight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      })), console.log('articles'), console.log(articles), console.log('olddata'), console.log(olddata), React.createElement(Grid, {\n        className: \"grid\" // Arbitrary data, should contain keys, possibly heights, etc.\n        ,\n        data: articles // Key accessor, instructs grid on how to get individual keys from the data set\n        ,\n        keys: d => d.id // Can be a fixed value or an individual data accessor\n        ,\n        heights: this.state.height ? d => d.height : 400 // Number of columns\n        ,\n        columns: this.state.columns // Space between elements\n        ,\n        margin: 20 // Removes the possibility to scroll away from a maximized element\n        ,\n        lockScroll: true // Delay when active elements (blown up) are minimized again\n        ,\n        closeDelay: 400,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, (data, maximized, toggle) => React.createElement(Cell, Object.assign({}, data, {\n        maximized: maximized,\n        toggle: toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }))));\n    }\n  }\n\n} // render((\n//   <BrowserRouter>\n//     <App />\n//   </BrowserRouter>\n// ), document.getElementById('root'));\n\n\nexport default class App extends React.Component {\n  render() {\n    return React.createElement(AppContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    });\n  }\n\n} //render(<App />, document.getElementById('root'))","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/src/index.js"],"names":["olddata","lodash","ReactHtmlParser","Icon","Header","render","Grid","Slug","Fade","React","Component","Fragment","BrowserRouter","Route","Switch","createAppContainer","createStackNavigator","low","require","readKey","file","fs","string","readFileSync","e","console","log","stack","Cell","toggle","title","article","name","height","description","css","maximized","backgroundImage","cursor","undefined","opacity","transform","Main","Home","Post","RootStack","HomeScreen","PostScreen","initialRouteName","AppContainer","constructor","props","state","columns","margin","filter","search","setState","target","value","shuffle","data","setColumns","parseInt","key","setMargin","setHeight","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","articles","message","d","id","App"],"mappings":"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","sourcesContent":["import './styles.css'\nimport olddata from './olddata'\nimport lodash from 'lodash'\nimport ReactHtmlParser from 'react-html-parser'; \nimport { Icon } from 'antd'\nimport 'antd/dist/antd.css'\nimport Header from './Header'\nimport { render } from 'react-dom'\nimport { Grid, Slug, Fade } from 'mauerwerk'\nimport React, { Component, Fragment } from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { createAppContainer } from 'react-navigation';\nimport { createStackNavigator } from 'react-navigation-stack';\n\nconst low = require('lowdb')\n\n\n//import Sequelize from 'sequelize';\n//import Sequelize from \"sequelize\"\n//const Sequelize = require('sequelize');\n\n//const sequelize = new Sequelize(readKey('database.key'));\n\n// const sequelize = new Sequelize('articledb', 'postgres', '3xpress+imes', {\n//   host: 'expressdb.cmf2cefclruk.us-east-1.rds.amazonaws.com:5432',\n//   dialect: 'postgres'\n// });\n\n// Model\n// class Article extends Sequelize.Model {}\n\n// Article.init({\n//   id: {\n// \t  primaryKey: true,\n// \t  type:Sequelize.INTEGER\n// \t},\n//   title: Sequelize.TEXT,\n//   text: Sequelize.TEXT\n// }, { sequelize, modelName: 'article' });\n\n// sequelize\n//     .authenticate()\n//     .then(() => {\n//         console.log('Connection has been established successfully.');\n//     })\n//     .catch(err => {\n//         console.error('Unable to connect to the database:', err);\n//     });\n\n// function getArticles(){\n//   Article.findAll().then( articles=>{\n//     console.log(articles);\n//   });\n// }\n\n\n\nfunction readKey(file) {\n\tvar fs = require('fs');\n\ttry {\n\t\tvar string = fs.readFileSync(file, 'utf8');\n\t\treturn string;\n\t} catch(e) {\n\tconsole.log('Error:', e.stack);\n\t}\n}\n\n\n\nconst Cell = ({ toggle, title, article, name, height, description, css, maximized }) => (\n  <div\n    className=\"cell\"\n    style={{ backgroundImage: 'linear-gradient(-225deg, #FFFEFF 0%, #E5F0FF 100%)', cursor: !maximized ? 'pointer' : 'auto' }}\n    onClick={!maximized ? toggle : undefined}>\n    <Fade show={maximized} delay={maximized ? 400 : 0}>\n      <div className=\"details\">\n        <Slug delay={600}>\n          <div className=\"close\">\n            <Icon type=\"close\" style={{ cursor: 'pointer' }} onClick={toggle} />\n          </div>\n          <h1>{title}</h1>\n          <p>{ReactHtmlParser(article)}</p>\n        </Slug>\n      </div>\n    </Fade>\n    <Fade\n      show={!maximized}\n      from={{ opacity: 0, transform: 'translate3d(0,140px,0)' }}\n      enter={{ opacity: 1, transform: 'translate3d(0,0px,0)' }}\n      leave={{ opacity: 0, transform: 'translate3d(0,-50px,0)' }}\n      delay={maximized ? 0 : 400}>\n      <div className=\"title\">{title}</div>\n      <p>\n      <div className=\"content\">{ReactHtmlParser(article)}</div>\n      </p>\n    </Fade>\n  </div>\n)\n\nfunction Main() {\n  return (\n    <main>\n      <Switch>\n        <Route exact path='/' component={Home}/>\n        <Route path='/post' component={Post}/>\n      </Switch>\n    </main>\n  );\n}\n\nfunction Home() {\n  //const { error, isLoaded, articles } = this.state;\n  return (\n  //   <Grid\n  //   className=\"grid\"\n  //   // Arbitrary data, should contain keys, possibly heights, etc.\n  //   data={articles}\n  //   // Key accessor, instructs grid on how to get individual keys from the data set\n  //   keys={d => d.id}\n  //   // Can be a fixed value or an individual data accessor\n  //   heights={this.state.height ? d => d.height : 400}\n  //   // Number of columns\n  //   columns={this.state.columns}\n  //   // Space between elements\n  //   margin={20}\n  //   // Removes the possibility to scroll away from a maximized element\n  //   lockScroll={true}\n  //   // Delay when active elements (blown up) are minimized again\n  //   closeDelay={400}>\n  //   {(data, maximized, toggle) => (\n  //     <Cell {...data} maximized={maximized} toggle={toggle} />\n  //   )}\n  // </Grid>\n  <div></div>\n  );\n}\n\nfunction Post() {\n  return (\n    <div></div>\n  );\n}\n\nconst RootStack = createStackNavigator(\n  {\n    Home: HomeScreen,\n    Post: PostScreen,\n  },\n  {\n    initialRouteName: 'Home',\n  }\n);\n\nconst AppContainer = createAppContainer(RootStack);\n\n\n\nclass HomeScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n\n    fetch('https://yc9qt36506.execute-api.us-east-1.amazonaws.com/latest/hello')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n          isLoaded: true,\n          articles: result\n        });\n      },\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      }\n    )\n      // .then(response => response.json())\n      // .then(data => this.setState({ data }));\n    }\n  // Database\n  state = { olddata, columns: 2, margin: 70, filter: '', height: true }\n  search = e => this.setState({ filter: e.target.value })\n  shuffle = () => this.setState(state => ({ data: lodash.shuffle(state.data) }))\n  setColumns = e => this.setState({ columns: parseInt(e.key) })\n  setMargin = e => this.setState({ margin: parseInt(e.key) })\n  setHeight = e => this.setState({ height: e })\n\n  \n\n  \n    \n  render() {\n    {console.log('this.state.data')}\n    {console.log(this.state.data)}\n   \n    // var data = this.state.data.filter(\n    //   d => d.name.toLowerCase().indexOf(this.state.filter) !== -1\n    // )\n    const { error, isLoaded, articles } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div className='center'><img src=\"loading.gif\" class=\"center\"></img></div>;\n    } else {\n    return (\n      <div className=\"main\">\n        <Header\n          {...this.state}\n          search={this.search}\n          shuffle={this.shuffle}\n          setColumns={this.setColumns}\n          setMargin={this.setMargin}\n          setHeight={this.setHeight}\n        />\n         {console.log('articles')}\n        {console.log(articles)}\n        {console.log('olddata')}\n        {console.log(olddata)}\n        <Grid\n    className=\"grid\"\n    // Arbitrary data, should contain keys, possibly heights, etc.\n    data={articles}\n    // Key accessor, instructs grid on how to get individual keys from the data set\n    keys={d => d.id}\n    // Can be a fixed value or an individual data accessor\n    heights={this.state.height ? d => d.height : 400}\n    // Number of columns\n    columns={this.state.columns}\n    // Space between elements\n    margin={20}\n    // Removes the possibility to scroll away from a maximized element\n    lockScroll={true}\n    // Delay when active elements (blown up) are minimized again\n    closeDelay={400}>\n    {(data, maximized, toggle) => (\n      <Cell {...data} maximized={maximized} toggle={toggle} />\n    )}\n  </Grid>\n      </div>\n    )\n    }\n  }\n\n}\n\n// render((\n//   <BrowserRouter>\n//     <App />\n//   </BrowserRouter>\n// ), document.getElementById('root'));\n\nexport default class App extends React.Component {\n  render() {\n    return <AppContainer />;\n  }\n}\n//render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}