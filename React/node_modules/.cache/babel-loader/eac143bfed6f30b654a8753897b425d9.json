{"ast":null,"code":"'use strict';\n\nconst Iconv = require('iconv-lite');\n\nexports.decode = function (buffer, encoding, options) {\n  if (Buffer.isEncoding(encoding)) {\n    return buffer.toString(encoding);\n  }\n\n  const decoder = Iconv.getDecoder(encoding, options || {});\n  const res = decoder.write(buffer);\n  const trail = decoder.end();\n  return trail ? res + trail : res;\n};\n\nexports.encode = function (string, encoding, options) {\n  if (Buffer.isEncoding(encoding)) {\n    return Buffer.from(string, encoding);\n  }\n\n  const encoder = Iconv.getEncoder(encoding, options || {});\n  const res = encoder.write(string);\n  const trail = encoder.end();\n  return trail && trail.length > 0 ? Buffer.concat([res, trail]) : res;\n};","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp5/expresstimes/node_modules/mysql2/lib/parsers/string.js"],"names":["Iconv","require","exports","decode","buffer","encoding","options","Buffer","isEncoding","toString","decoder","getDecoder","res","write","trail","end","encode","string","from","encoder","getEncoder","length","concat"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAArB;;AAEAC,OAAO,CAACC,MAAR,GAAiB,UAASC,MAAT,EAAiBC,QAAjB,EAA2BC,OAA3B,EAAoC;AACnD,MAAIC,MAAM,CAACC,UAAP,CAAkBH,QAAlB,CAAJ,EAAiC;AAC/B,WAAOD,MAAM,CAACK,QAAP,CAAgBJ,QAAhB,CAAP;AACD;;AAED,QAAMK,OAAO,GAAGV,KAAK,CAACW,UAAN,CAAiBN,QAAjB,EAA2BC,OAAO,IAAI,EAAtC,CAAhB;AAEA,QAAMM,GAAG,GAAGF,OAAO,CAACG,KAAR,CAAcT,MAAd,CAAZ;AACA,QAAMU,KAAK,GAAGJ,OAAO,CAACK,GAAR,EAAd;AAEA,SAAOD,KAAK,GAAGF,GAAG,GAAGE,KAAT,GAAiBF,GAA7B;AACD,CAXD;;AAaAV,OAAO,CAACc,MAAR,GAAiB,UAASC,MAAT,EAAiBZ,QAAjB,EAA2BC,OAA3B,EAAoC;AACnD,MAAIC,MAAM,CAACC,UAAP,CAAkBH,QAAlB,CAAJ,EAAiC;AAC/B,WAAOE,MAAM,CAACW,IAAP,CAAYD,MAAZ,EAAoBZ,QAApB,CAAP;AACD;;AAED,QAAMc,OAAO,GAAGnB,KAAK,CAACoB,UAAN,CAAiBf,QAAjB,EAA2BC,OAAO,IAAI,EAAtC,CAAhB;AAEA,QAAMM,GAAG,GAAGO,OAAO,CAACN,KAAR,CAAcI,MAAd,CAAZ;AACA,QAAMH,KAAK,GAAGK,OAAO,CAACJ,GAAR,EAAd;AAEA,SAAOD,KAAK,IAAIA,KAAK,CAACO,MAAN,GAAe,CAAxB,GAA4Bd,MAAM,CAACe,MAAP,CAAc,CAACV,GAAD,EAAME,KAAN,CAAd,CAA5B,GAA0DF,GAAjE;AACD,CAXD","sourcesContent":["'use strict';\n\nconst Iconv = require('iconv-lite');\n\nexports.decode = function(buffer, encoding, options) {\n  if (Buffer.isEncoding(encoding)) {\n    return buffer.toString(encoding);\n  }\n\n  const decoder = Iconv.getDecoder(encoding, options || {});\n\n  const res = decoder.write(buffer);\n  const trail = decoder.end();\n\n  return trail ? res + trail : res;\n};\n\nexports.encode = function(string, encoding, options) {\n  if (Buffer.isEncoding(encoding)) {\n    return Buffer.from(string, encoding);\n  }\n\n  const encoder = Iconv.getEncoder(encoding, options || {});\n\n  const res = encoder.write(string);\n  const trail = encoder.end();\n\n  return trail && trail.length > 0 ? Buffer.concat([res, trail]) : res;\n};\n"]},"metadata":{},"sourceType":"script"}