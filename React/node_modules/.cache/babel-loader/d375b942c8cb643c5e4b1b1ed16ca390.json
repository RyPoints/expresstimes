{"ast":null,"code":"'use strict';\n/**\n * Sequelize module for debug and deprecation messages.\n * It require a `context` for which messages will be printed.\n *\n * @module logging\n * @private\n */\n\nconst depd = require('depd'),\n      debug = require('debug'),\n      _ = require('lodash');\n\nclass Logger {\n  constructor(config) {\n    this.config = _.extend({\n      context: 'sequelize',\n      debug: true\n    }, config || {});\n    this.depd = depd(this.config.context);\n    this.debug = debug(this.config.context);\n  }\n\n  deprecate(message) {\n    this.depd(message);\n  }\n\n  debug(message) {\n    this.config.debug && this.debug(message);\n  }\n\n  warn(message) {\n    console.warn(`(${this.config.context}) Warning: ${message}`);\n  }\n\n  debugContext(childContext) {\n    if (!childContext) {\n      throw new Error('No context supplied to debug');\n    }\n\n    return debug([this.config.context, childContext].join(':'));\n  }\n\n}\n\nmodule.exports = Logger;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/node_modules/sequelize/lib/utils/logger.js"],"names":["depd","require","debug","_","Logger","constructor","config","extend","context","deprecate","message","warn","console","debugContext","childContext","Error","join","module","exports"],"mappings":"AAAA;AAEA;;;;;;;;AAQA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;AAAA,MACEC,KAAK,GAAGD,OAAO,CAAC,OAAD,CADjB;AAAA,MAEEE,CAAC,GAAGF,OAAO,CAAC,QAAD,CAFb;;AAIA,MAAMG,MAAN,CAAa;AACXC,EAAAA,WAAW,CAACC,MAAD,EAAS;AAElB,SAAKA,MAAL,GAAcH,CAAC,CAACI,MAAF,CAAS;AACrBC,MAAAA,OAAO,EAAE,WADY;AAErBN,MAAAA,KAAK,EAAE;AAFc,KAAT,EAGXI,MAAM,IAAI,EAHC,CAAd;AAKA,SAAKN,IAAL,GAAYA,IAAI,CAAC,KAAKM,MAAL,CAAYE,OAAb,CAAhB;AACA,SAAKN,KAAL,GAAaA,KAAK,CAAC,KAAKI,MAAL,CAAYE,OAAb,CAAlB;AACD;;AAEDC,EAAAA,SAAS,CAACC,OAAD,EAAU;AACjB,SAAKV,IAAL,CAAUU,OAAV;AACD;;AAEDR,EAAAA,KAAK,CAACQ,OAAD,EAAU;AACb,SAAKJ,MAAL,CAAYJ,KAAZ,IAAqB,KAAKA,KAAL,CAAWQ,OAAX,CAArB;AACD;;AAEDC,EAAAA,IAAI,CAACD,OAAD,EAAU;AACZE,IAAAA,OAAO,CAACD,IAAR,CAAc,IAAG,KAAKL,MAAL,CAAYE,OAAQ,cAAaE,OAAQ,EAA1D;AACD;;AAEDG,EAAAA,YAAY,CAACC,YAAD,EAAe;AACzB,QAAI,CAACA,YAAL,EAAmB;AACjB,YAAM,IAAIC,KAAJ,CAAU,8BAAV,CAAN;AACD;;AACD,WAAOb,KAAK,CAAC,CAAC,KAAKI,MAAL,CAAYE,OAAb,EAAsBM,YAAtB,EAAoCE,IAApC,CAAyC,GAAzC,CAAD,CAAZ;AACD;;AA7BU;;AAgCbC,MAAM,CAACC,OAAP,GAAiBd,MAAjB","sourcesContent":["'use strict';\n\n/**\n * Sequelize module for debug and deprecation messages.\n * It require a `context` for which messages will be printed.\n *\n * @module logging\n * @private\n */\n\nconst depd = require('depd'),\n  debug = require('debug'),\n  _ = require('lodash');\n\nclass Logger {\n  constructor(config) {\n\n    this.config = _.extend({\n      context: 'sequelize',\n      debug: true\n    }, config || {});\n\n    this.depd = depd(this.config.context);\n    this.debug = debug(this.config.context);\n  }\n\n  deprecate(message) {\n    this.depd(message);\n  }\n\n  debug(message) {\n    this.config.debug && this.debug(message);\n  }\n\n  warn(message) {\n    console.warn(`(${this.config.context}) Warning: ${message}`);\n  }\n\n  debugContext(childContext) {\n    if (!childContext) {\n      throw new Error('No context supplied to debug');\n    }\n    return debug([this.config.context, childContext].join(':'));\n  }\n}\n\nmodule.exports = Logger;\n"]},"metadata":{},"sourceType":"script"}