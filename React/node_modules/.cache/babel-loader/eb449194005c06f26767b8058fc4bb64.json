{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Transaction = exports.isolationLevelByValue = exports.ISOLATION_LEVEL = exports.OPERATION_TYPE = void 0;\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\n\nvar _allHeaders = require(\"./all-headers\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/*\n  s2.2.6.8\n */\n\n\nconst OPERATION_TYPE = {\n  TM_GET_DTC_ADDRESS: 0x00,\n  TM_PROPAGATE_XACT: 0x01,\n  TM_BEGIN_XACT: 0x05,\n  TM_PROMOTE_XACT: 0x06,\n  TM_COMMIT_XACT: 0x07,\n  TM_ROLLBACK_XACT: 0x08,\n  TM_SAVE_XACT: 0x09\n};\nexports.OPERATION_TYPE = OPERATION_TYPE;\nconst ISOLATION_LEVEL = {\n  NO_CHANGE: 0x00,\n  READ_UNCOMMITTED: 0x01,\n  READ_COMMITTED: 0x02,\n  REPEATABLE_READ: 0x03,\n  SERIALIZABLE: 0x04,\n  SNAPSHOT: 0x05\n};\nexports.ISOLATION_LEVEL = ISOLATION_LEVEL;\nconst isolationLevelByValue = {};\nexports.isolationLevelByValue = isolationLevelByValue;\n\nfor (const name in ISOLATION_LEVEL) {\n  const value = ISOLATION_LEVEL[name];\n  isolationLevelByValue[value] = name;\n}\n\nclass Transaction {\n  constructor(name, isolationLevel = ISOLATION_LEVEL.NO_CHANGE) {\n    this.name = name;\n    this.isolationLevel = isolationLevel;\n    this.outstandingRequestCount = 1;\n  }\n\n  beginPayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ucs2');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_BEGIN_XACT);\n    buffer.writeUInt8(this.isolationLevel);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2');\n    return {\n      getData: cb => {\n        cb(buffer.data);\n      },\n      toString: () => {\n        return 'Begin Transaction: name=' + this.name + ', isolationLevel=' + isolationLevelByValue[this.isolationLevel];\n      }\n    };\n  }\n\n  commitPayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_COMMIT_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2'); // No fBeginXact flag, so no new transaction is started.\n\n    buffer.writeUInt8(0);\n    return {\n      getData: cb => {\n        cb(buffer.data);\n      },\n      data: buffer.data,\n      toString: () => {\n        return 'Commit Transaction: name=' + this.name;\n      }\n    };\n  }\n\n  rollbackPayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_ROLLBACK_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2'); // No fBeginXact flag, so no new transaction is started.\n\n    buffer.writeUInt8(0);\n    return {\n      getData: cb => {\n        cb(buffer.data);\n      },\n      toString: () => {\n        return 'Rollback Transaction: name=' + this.name;\n      }\n    };\n  }\n\n  savePayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_SAVE_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2');\n    return {\n      getData: cb => {\n        cb(buffer.data);\n      },\n      toString: () => {\n        return 'Save Transaction: name=' + this.name;\n      }\n    };\n  }\n\n  isolationLevelToTSQL() {\n    switch (this.isolationLevel) {\n      case ISOLATION_LEVEL.READ_UNCOMMITTED:\n        return 'READ UNCOMMITTED';\n\n      case ISOLATION_LEVEL.READ_COMMITTED:\n        return 'READ COMMITTED';\n\n      case ISOLATION_LEVEL.REPEATABLE_READ:\n        return 'REPEATABLE READ';\n\n      case ISOLATION_LEVEL.SERIALIZABLE:\n        return 'SERIALIZABLE';\n\n      case ISOLATION_LEVEL.SNAPSHOT:\n        return 'SNAPSHOT';\n    }\n\n    return '';\n  }\n\n}\n\nexports.Transaction = Transaction;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/node_modules/tedious/lib/transaction.js"],"names":["Object","defineProperty","exports","value","Transaction","isolationLevelByValue","ISOLATION_LEVEL","OPERATION_TYPE","_writableTrackingBuffer","_interopRequireDefault","require","_allHeaders","obj","__esModule","default","TM_GET_DTC_ADDRESS","TM_PROPAGATE_XACT","TM_BEGIN_XACT","TM_PROMOTE_XACT","TM_COMMIT_XACT","TM_ROLLBACK_XACT","TM_SAVE_XACT","NO_CHANGE","READ_UNCOMMITTED","READ_COMMITTED","REPEATABLE_READ","SERIALIZABLE","SNAPSHOT","name","constructor","isolationLevel","outstandingRequestCount","beginPayload","txnDescriptor","buffer","writeToTrackingBuffer","writeUShort","writeUInt8","length","writeString","getData","cb","data","toString","commitPayload","rollbackPayload","savePayload","isolationLevelToTSQL"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Transaction = exports.isolationLevelByValue = exports.ISOLATION_LEVEL = exports.OPERATION_TYPE = void 0;\n\nvar _writableTrackingBuffer = _interopRequireDefault(require(\"./tracking-buffer/writable-tracking-buffer\"));\n\nvar _allHeaders = require(\"./all-headers\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*\n  s2.2.6.8\n */\nconst OPERATION_TYPE = {\n  TM_GET_DTC_ADDRESS: 0x00,\n  TM_PROPAGATE_XACT: 0x01,\n  TM_BEGIN_XACT: 0x05,\n  TM_PROMOTE_XACT: 0x06,\n  TM_COMMIT_XACT: 0x07,\n  TM_ROLLBACK_XACT: 0x08,\n  TM_SAVE_XACT: 0x09\n};\nexports.OPERATION_TYPE = OPERATION_TYPE;\nconst ISOLATION_LEVEL = {\n  NO_CHANGE: 0x00,\n  READ_UNCOMMITTED: 0x01,\n  READ_COMMITTED: 0x02,\n  REPEATABLE_READ: 0x03,\n  SERIALIZABLE: 0x04,\n  SNAPSHOT: 0x05\n};\nexports.ISOLATION_LEVEL = ISOLATION_LEVEL;\nconst isolationLevelByValue = {};\nexports.isolationLevelByValue = isolationLevelByValue;\n\nfor (const name in ISOLATION_LEVEL) {\n  const value = ISOLATION_LEVEL[name];\n  isolationLevelByValue[value] = name;\n}\n\nclass Transaction {\n  constructor(name, isolationLevel = ISOLATION_LEVEL.NO_CHANGE) {\n    this.name = name;\n    this.isolationLevel = isolationLevel;\n    this.outstandingRequestCount = 1;\n  }\n\n  beginPayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ucs2');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_BEGIN_XACT);\n    buffer.writeUInt8(this.isolationLevel);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2');\n    return {\n      getData: cb => {\n        cb(buffer.data);\n      },\n      toString: () => {\n        return 'Begin Transaction: name=' + this.name + ', isolationLevel=' + isolationLevelByValue[this.isolationLevel];\n      }\n    };\n  }\n\n  commitPayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_COMMIT_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2'); // No fBeginXact flag, so no new transaction is started.\n\n    buffer.writeUInt8(0);\n    return {\n      getData: cb => {\n        cb(buffer.data);\n      },\n      data: buffer.data,\n      toString: () => {\n        return 'Commit Transaction: name=' + this.name;\n      }\n    };\n  }\n\n  rollbackPayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_ROLLBACK_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2'); // No fBeginXact flag, so no new transaction is started.\n\n    buffer.writeUInt8(0);\n    return {\n      getData: cb => {\n        cb(buffer.data);\n      },\n      toString: () => {\n        return 'Rollback Transaction: name=' + this.name;\n      }\n    };\n  }\n\n  savePayload(txnDescriptor) {\n    const buffer = new _writableTrackingBuffer.default(100, 'ascii');\n    (0, _allHeaders.writeToTrackingBuffer)(buffer, txnDescriptor, this.outstandingRequestCount);\n    buffer.writeUShort(OPERATION_TYPE.TM_SAVE_XACT);\n    buffer.writeUInt8(this.name.length * 2);\n    buffer.writeString(this.name, 'ucs2');\n    return {\n      getData: cb => {\n        cb(buffer.data);\n      },\n      toString: () => {\n        return 'Save Transaction: name=' + this.name;\n      }\n    };\n  }\n\n  isolationLevelToTSQL() {\n    switch (this.isolationLevel) {\n      case ISOLATION_LEVEL.READ_UNCOMMITTED:\n        return 'READ UNCOMMITTED';\n\n      case ISOLATION_LEVEL.READ_COMMITTED:\n        return 'READ COMMITTED';\n\n      case ISOLATION_LEVEL.REPEATABLE_READ:\n        return 'REPEATABLE READ';\n\n      case ISOLATION_LEVEL.SERIALIZABLE:\n        return 'SERIALIZABLE';\n\n      case ISOLATION_LEVEL.SNAPSHOT:\n        return 'SNAPSHOT';\n    }\n\n    return '';\n  }\n\n}\n\nexports.Transaction = Transaction;"]},"metadata":{},"sourceType":"script"}