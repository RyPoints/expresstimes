{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _token = require(\"./token\");\n\nvar _tdsVersions = require(\"../tds-versions\");\n\nconst interfaceTypes = {\n  0: 'SQL_DFLT',\n  1: 'SQL_TSQL'\n};\n\nfunction loginAckParser(parser, _colMetadata, _options, callback) {\n  // length\n  parser.readUInt16LE(() => {\n    parser.readUInt8(interfaceNumber => {\n      const interfaceType = interfaceTypes[interfaceNumber];\n      parser.readUInt32BE(tdsVersionNumber => {\n        const tdsVersion = _tdsVersions.versionsByValue[tdsVersionNumber];\n        parser.readBVarChar(progName => {\n          parser.readUInt8(major => {\n            parser.readUInt8(minor => {\n              parser.readUInt8(buildNumHi => {\n                parser.readUInt8(buildNumLow => {\n                  callback(new _token.LoginAckToken({\n                    interface: interfaceType,\n                    tdsVersion: tdsVersion,\n                    progName: progName,\n                    progVersion: {\n                      major: major,\n                      minor: minor,\n                      buildNumHi: buildNumHi,\n                      buildNumLow: buildNumLow\n                    }\n                  }));\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n}\n\nvar _default = loginAckParser;\nexports.default = _default;\nmodule.exports = loginAckParser;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp5/expresstimes/node_modules/tedious/lib/token/loginack-token-parser.js"],"names":["Object","defineProperty","exports","value","default","_token","require","_tdsVersions","interfaceTypes","loginAckParser","parser","_colMetadata","_options","callback","readUInt16LE","readUInt8","interfaceNumber","interfaceType","readUInt32BE","tdsVersionNumber","tdsVersion","versionsByValue","readBVarChar","progName","major","minor","buildNumHi","buildNumLow","LoginAckToken","interface","progVersion","_default","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAApB;;AAEA,IAAIC,YAAY,GAAGD,OAAO,CAAC,iBAAD,CAA1B;;AAEA,MAAME,cAAc,GAAG;AACrB,KAAG,UADkB;AAErB,KAAG;AAFkB,CAAvB;;AAKA,SAASC,cAAT,CAAwBC,MAAxB,EAAgCC,YAAhC,EAA8CC,QAA9C,EAAwDC,QAAxD,EAAkE;AAChE;AACAH,EAAAA,MAAM,CAACI,YAAP,CAAoB,MAAM;AACxBJ,IAAAA,MAAM,CAACK,SAAP,CAAiBC,eAAe,IAAI;AAClC,YAAMC,aAAa,GAAGT,cAAc,CAACQ,eAAD,CAApC;AACAN,MAAAA,MAAM,CAACQ,YAAP,CAAoBC,gBAAgB,IAAI;AACtC,cAAMC,UAAU,GAAGb,YAAY,CAACc,eAAb,CAA6BF,gBAA7B,CAAnB;AACAT,QAAAA,MAAM,CAACY,YAAP,CAAoBC,QAAQ,IAAI;AAC9Bb,UAAAA,MAAM,CAACK,SAAP,CAAiBS,KAAK,IAAI;AACxBd,YAAAA,MAAM,CAACK,SAAP,CAAiBU,KAAK,IAAI;AACxBf,cAAAA,MAAM,CAACK,SAAP,CAAiBW,UAAU,IAAI;AAC7BhB,gBAAAA,MAAM,CAACK,SAAP,CAAiBY,WAAW,IAAI;AAC9Bd,kBAAAA,QAAQ,CAAC,IAAIR,MAAM,CAACuB,aAAX,CAAyB;AAChCC,oBAAAA,SAAS,EAAEZ,aADqB;AAEhCG,oBAAAA,UAAU,EAAEA,UAFoB;AAGhCG,oBAAAA,QAAQ,EAAEA,QAHsB;AAIhCO,oBAAAA,WAAW,EAAE;AACXN,sBAAAA,KAAK,EAAEA,KADI;AAEXC,sBAAAA,KAAK,EAAEA,KAFI;AAGXC,sBAAAA,UAAU,EAAEA,UAHD;AAIXC,sBAAAA,WAAW,EAAEA;AAJF;AAJmB,mBAAzB,CAAD,CAAR;AAWD,iBAZD;AAaD,eAdD;AAeD,aAhBD;AAiBD,WAlBD;AAmBD,SApBD;AAqBD,OAvBD;AAwBD,KA1BD;AA2BD,GA5BD;AA6BD;;AAED,IAAII,QAAQ,GAAGtB,cAAf;AACAP,OAAO,CAACE,OAAR,GAAkB2B,QAAlB;AACAC,MAAM,CAAC9B,OAAP,GAAiBO,cAAjB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _token = require(\"./token\");\n\nvar _tdsVersions = require(\"../tds-versions\");\n\nconst interfaceTypes = {\n  0: 'SQL_DFLT',\n  1: 'SQL_TSQL'\n};\n\nfunction loginAckParser(parser, _colMetadata, _options, callback) {\n  // length\n  parser.readUInt16LE(() => {\n    parser.readUInt8(interfaceNumber => {\n      const interfaceType = interfaceTypes[interfaceNumber];\n      parser.readUInt32BE(tdsVersionNumber => {\n        const tdsVersion = _tdsVersions.versionsByValue[tdsVersionNumber];\n        parser.readBVarChar(progName => {\n          parser.readUInt8(major => {\n            parser.readUInt8(minor => {\n              parser.readUInt8(buildNumHi => {\n                parser.readUInt8(buildNumLow => {\n                  callback(new _token.LoginAckToken({\n                    interface: interfaceType,\n                    tdsVersion: tdsVersion,\n                    progName: progName,\n                    progVersion: {\n                      major: major,\n                      minor: minor,\n                      buildNumHi: buildNumHi,\n                      buildNumLow: buildNumLow\n                    }\n                  }));\n                });\n              });\n            });\n          });\n        });\n      });\n    });\n  });\n}\n\nvar _default = loginAckParser;\nexports.default = _default;\nmodule.exports = loginAckParser;"]},"metadata":{},"sourceType":"script"}