{"ast":null,"code":"var _jsxFileName = \"/Users/ryandavis/Development/reactapp/expresstimes/src/index.js\";\nimport './styles.css';\nimport data from './data';\nimport lodash from 'lodash';\nimport ReactHtmlParser from 'react-html-parser';\nimport { Icon } from 'antd';\nimport 'antd/dist/antd.css';\nimport Header from './Header';\nimport { render } from 'react-dom';\nimport { Grid, Slug, Fade } from 'mauerwerk';\nimport React, { Component, Fragment } from 'react'; //import Sequelize from 'sequelize';\n//import Sequelize from \"sequelize\"\n//const Sequelize = require('sequelize');\n//const sequelize = new Sequelize(readKey('database.key'));\n// const sequelize = new Sequelize('articledb', 'postgres', '3xpress+imes', {\n//   host: 'expressdb.cmf2cefclruk.us-east-1.rds.amazonaws.com:5432',\n//   dialect: 'postgres'\n// });\n// Model\n// class Article extends Sequelize.Model {}\n// Article.init({\n//   id: {\n// \t  primaryKey: true,\n// \t  type:Sequelize.INTEGER\n// \t},\n//   title: Sequelize.TEXT,\n//   text: Sequelize.TEXT\n// }, { sequelize, modelName: 'article' });\n// sequelize\n//     .authenticate()\n//     .then(() => {\n//         console.log('Connection has been established successfully.');\n//     })\n//     .catch(err => {\n//         console.error('Unable to connect to the database:', err);\n//     });\n// function getArticles(){\n//   Article.findAll().then( articles=>{\n//     console.log(articles);\n//   });\n// }\n\nfunction readKey(file) {\n  var fs = require('fs');\n\n  try {\n    var string = fs.readFileSync(file, 'utf8');\n    return string;\n  } catch (e) {\n    console.log('Error:', e.stack);\n  }\n}\n\nconst Cell = ({\n  toggle,\n  title,\n  article,\n  name,\n  height,\n  description,\n  css,\n  maximized\n}) => React.createElement(\"div\", {\n  className: \"cell\",\n  style: {\n    backgroundImage: 'linear-gradient(-225deg, #FFFEFF 0%, #D4EDF4 100%)',\n    cursor: !maximized ? 'pointer' : 'auto'\n  },\n  onClick: !maximized ? toggle : undefined,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64\n  },\n  __self: this\n}, React.createElement(Fade, {\n  show: maximized,\n  delay: maximized ? 400 : 0,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 68\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"details\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 69\n  },\n  __self: this\n}, React.createElement(Slug, {\n  delay: 600,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 70\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"close\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 71\n  },\n  __self: this\n}, React.createElement(Icon, {\n  type: \"close\",\n  style: {\n    cursor: 'pointer'\n  },\n  onClick: toggle,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 72\n  },\n  __self: this\n})), React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 74\n  },\n  __self: this\n}, title), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}, ReactHtmlParser(article))))), React.createElement(Fade, {\n  show: !maximized,\n  from: {\n    opacity: 0,\n    transform: 'translate3d(0,140px,0)'\n  },\n  enter: {\n    opacity: 1,\n    transform: 'translate3d(0,0px,0)'\n  },\n  leave: {\n    opacity: 0,\n    transform: 'translate3d(0,-50px,0)'\n  },\n  delay: maximized ? 0 : 400,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 79\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}, title), React.createElement(\"p\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 86\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  className: \"content\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 87\n  },\n  __self: this\n}, ReactHtmlParser(article)))));\n\nclass App extends Component {\n  // Database\n  constructor(props) {\n    super(props);\n    this.state = {\n      data,\n      columns: 2,\n      margin: 70,\n      filter: '',\n      height: true\n    };\n\n    this.search = e => this.setState({\n      filter: e.target.value\n    });\n\n    this.shuffle = () => this.setState(state => ({\n      data: lodash.shuffle(state.data)\n    }));\n\n    this.setColumns = e => this.setState({\n      columns: parseInt(e.key)\n    });\n\n    this.setMargin = e => this.setState({\n      margin: parseInt(e.key)\n    });\n\n    this.setHeight = e => this.setState({\n      height: e\n    });\n\n    this.state = {\n      data: null\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://facebook.github.io/react-native/movies.json').then(response => response.json()).then(data => this.setState({\n      data\n    })); // .then(response => response.json())\n    // .then(data => this.setState({ data }));\n  }\n\n  render() {\n    {\n      console.log(this.state.data);\n    } // var data = this.state.data.filter(\n    //   d => d.name.toLowerCase().indexOf(this.state.filter) !== -1\n    // )\n\n    return React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Header, Object.assign({}, this.state, {\n      search: this.search,\n      shuffle: this.shuffle,\n      setColumns: this.setColumns,\n      setMargin: this.setMargin,\n      setHeight: this.setHeight,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      className: \"grid\" // Arbitrary data, should contain keys, possibly heights, etc.\n      ,\n      data: data // Key accessor, instructs grid on how to get individual keys from the data set\n      ,\n      keys: d => d.id // Can be a fixed value or an individual data accessor\n      ,\n      heights: this.state.height ? d => d.height : 400 // Number of columns\n      ,\n      columns: this.state.columns // Space between elements\n      ,\n      margin: 20 // Removes the possibility to scroll away from a maximized element\n      ,\n      lockScroll: true // Delay when active elements (blown up) are minimized again\n      ,\n      closeDelay: 400,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, (data, maximized, toggle) => React.createElement(Cell, Object.assign({}, data, {\n      maximized: maximized,\n      toggle: toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nrender(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 163\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/src/index.js"],"names":["data","lodash","ReactHtmlParser","Icon","Header","render","Grid","Slug","Fade","React","Component","Fragment","readKey","file","fs","require","string","readFileSync","e","console","log","stack","Cell","toggle","title","article","name","height","description","css","maximized","backgroundImage","cursor","undefined","opacity","transform","App","constructor","props","state","columns","margin","filter","search","setState","target","value","shuffle","setColumns","parseInt","key","setMargin","setHeight","componentDidMount","fetch","then","response","json","d","id","document","getElementById"],"mappings":"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","sourcesContent":["import './styles.css'\nimport data from './data'\nimport lodash from 'lodash'\nimport ReactHtmlParser from 'react-html-parser'; \nimport { Icon } from 'antd'\nimport 'antd/dist/antd.css'\nimport Header from './Header'\nimport { render } from 'react-dom'\nimport { Grid, Slug, Fade } from 'mauerwerk'\nimport React, { Component, Fragment } from 'react'\n//import Sequelize from 'sequelize';\n//import Sequelize from \"sequelize\"\n//const Sequelize = require('sequelize');\n\n//const sequelize = new Sequelize(readKey('database.key'));\n\n// const sequelize = new Sequelize('articledb', 'postgres', '3xpress+imes', {\n//   host: 'expressdb.cmf2cefclruk.us-east-1.rds.amazonaws.com:5432',\n//   dialect: 'postgres'\n// });\n\n// Model\n// class Article extends Sequelize.Model {}\n\n// Article.init({\n//   id: {\n// \t  primaryKey: true,\n// \t  type:Sequelize.INTEGER\n// \t},\n//   title: Sequelize.TEXT,\n//   text: Sequelize.TEXT\n// }, { sequelize, modelName: 'article' });\n\n// sequelize\n//     .authenticate()\n//     .then(() => {\n//         console.log('Connection has been established successfully.');\n//     })\n//     .catch(err => {\n//         console.error('Unable to connect to the database:', err);\n//     });\n\n// function getArticles(){\n//   Article.findAll().then( articles=>{\n//     console.log(articles);\n//   });\n// }\n\n\n\nfunction readKey(file) {\n\tvar fs = require('fs');\n\ttry {\n\t\tvar string = fs.readFileSync(file, 'utf8');\n\t\treturn string;\n\t} catch(e) {\n\tconsole.log('Error:', e.stack);\n\t}\n}\n\n\n\nconst Cell = ({ toggle, title, article, name, height, description, css, maximized }) => (\n  <div\n    className=\"cell\"\n    style={{ backgroundImage: 'linear-gradient(-225deg, #FFFEFF 0%, #D4EDF4 100%)', cursor: !maximized ? 'pointer' : 'auto' }}\n    onClick={!maximized ? toggle : undefined}>\n    <Fade show={maximized} delay={maximized ? 400 : 0}>\n      <div className=\"details\">\n        <Slug delay={600}>\n          <div className=\"close\">\n            <Icon type=\"close\" style={{ cursor: 'pointer' }} onClick={toggle} />\n          </div>\n          <h1>{title}</h1>\n          <p>{ReactHtmlParser(article)}</p>\n        </Slug>\n      </div>\n    </Fade>\n    <Fade\n      show={!maximized}\n      from={{ opacity: 0, transform: 'translate3d(0,140px,0)' }}\n      enter={{ opacity: 1, transform: 'translate3d(0,0px,0)' }}\n      leave={{ opacity: 0, transform: 'translate3d(0,-50px,0)' }}\n      delay={maximized ? 0 : 400}>\n      <div className=\"title\">{title}</div>\n      <p>\n      <div className=\"content\">{ReactHtmlParser(article)}</div>\n      </p>\n    </Fade>\n  </div>\n)\n\n\nclass App extends Component {\n\n  // Database\n  state = { data, columns: 2, margin: 70, filter: '', height: true }\n  search = e => this.setState({ filter: e.target.value })\n  shuffle = () => this.setState(state => ({ data: lodash.shuffle(state.data) }))\n  setColumns = e => this.setState({ columns: parseInt(e.key) })\n  setMargin = e => this.setState({ margin: parseInt(e.key) })\n  setHeight = e => this.setState({ height: e })\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n    };\n  }\n\n  componentDidMount() {\n\n    fetch('https://facebook.github.io/react-native/movies.json')\n      .then(response => response.json())\n      .then(data => this.setState({ data }));\n      \n      // .then(response => response.json())\n      // .then(data => this.setState({ data }));\n    }\n    \n  render() {\n    {console.log(this.state.data)}\n    // var data = this.state.data.filter(\n    //   d => d.name.toLowerCase().indexOf(this.state.filter) !== -1\n    // )\n\n    return (\n      <div className=\"main\">\n        <Header\n          {...this.state}\n          search={this.search}\n          shuffle={this.shuffle}\n          setColumns={this.setColumns}\n          setMargin={this.setMargin}\n          setHeight={this.setHeight}\n        />\n        <Grid\n          className=\"grid\"\n          // Arbitrary data, should contain keys, possibly heights, etc.\n          data={data}\n          // Key accessor, instructs grid on how to get individual keys from the data set\n          keys={d => d.id}\n          // Can be a fixed value or an individual data accessor\n          heights={this.state.height ? d => d.height : 400}\n          // Number of columns\n          columns={this.state.columns}\n          // Space between elements\n          margin={20}\n          // Removes the possibility to scroll away from a maximized element\n          lockScroll={true}\n          // Delay when active elements (blown up) are minimized again\n          closeDelay={400}>\n          {(data, maximized, toggle) => (\n            <Cell {...data} maximized={maximized} toggle={toggle} />\n          )}\n        </Grid>\n      </div>\n    )\n  }\n\n}\n\nrender(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}