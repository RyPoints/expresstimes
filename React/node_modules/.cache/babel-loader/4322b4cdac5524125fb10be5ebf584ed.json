{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _guidParser = require(\"../guid-parser\");\n\nconst UniqueIdentifier = {\n  id: 0x24,\n  type: 'GUIDN',\n  name: 'UniqueIdentifier',\n  declaration: function declaration() {\n    return 'uniqueidentifier';\n  },\n  resolveLength: function resolveLength() {\n    return 16;\n  },\n  writeTypeInfo: function writeTypeInfo(buffer) {\n    buffer.writeUInt8(this.id);\n    buffer.writeUInt8(0x10);\n  },\n  writeParameterData: function writeParameterData(buffer, parameter, options, cb) {\n    if (parameter.value != null) {\n      buffer.writeUInt8(0x10);\n      buffer.writeBuffer(Buffer.from((0, _guidParser.guidToArray)(parameter.value)));\n    } else {\n      buffer.writeUInt8(0);\n    }\n\n    cb();\n  },\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'string') {\n      if (typeof value.toString !== 'function') {\n        return TypeError('Invalid string.');\n      }\n\n      value = value.toString();\n    }\n\n    return value;\n  }\n};\nvar _default = UniqueIdentifier;\nexports.default = _default;\nmodule.exports = UniqueIdentifier;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp5/expresstimes/node_modules/tedious/lib/data-types/uniqueidentifier.js"],"names":["Object","defineProperty","exports","value","default","_guidParser","require","UniqueIdentifier","id","type","name","declaration","resolveLength","writeTypeInfo","buffer","writeUInt8","writeParameterData","parameter","options","cb","writeBuffer","Buffer","from","guidToArray","validate","toString","TypeError","_default","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,WAAW,GAAGC,OAAO,CAAC,gBAAD,CAAzB;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,EAAE,EAAE,IADmB;AAEvBC,EAAAA,IAAI,EAAE,OAFiB;AAGvBC,EAAAA,IAAI,EAAE,kBAHiB;AAIvBC,EAAAA,WAAW,EAAE,SAASA,WAAT,GAAuB;AAClC,WAAO,kBAAP;AACD,GANsB;AAOvBC,EAAAA,aAAa,EAAE,SAASA,aAAT,GAAyB;AACtC,WAAO,EAAP;AACD,GATsB;AAUvBC,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;AAC5CA,IAAAA,MAAM,CAACC,UAAP,CAAkB,KAAKP,EAAvB;AACAM,IAAAA,MAAM,CAACC,UAAP,CAAkB,IAAlB;AACD,GAbsB;AAcvBC,EAAAA,kBAAkB,EAAE,SAASA,kBAAT,CAA4BF,MAA5B,EAAoCG,SAApC,EAA+CC,OAA/C,EAAwDC,EAAxD,EAA4D;AAC9E,QAAIF,SAAS,CAACd,KAAV,IAAmB,IAAvB,EAA6B;AAC3BW,MAAAA,MAAM,CAACC,UAAP,CAAkB,IAAlB;AACAD,MAAAA,MAAM,CAACM,WAAP,CAAmBC,MAAM,CAACC,IAAP,CAAY,CAAC,GAAGjB,WAAW,CAACkB,WAAhB,EAA6BN,SAAS,CAACd,KAAvC,CAAZ,CAAnB;AACD,KAHD,MAGO;AACLW,MAAAA,MAAM,CAACC,UAAP,CAAkB,CAAlB;AACD;;AAEDI,IAAAA,EAAE;AACH,GAvBsB;AAwBvBK,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBrB,KAAlB,EAAyB;AACjC,QAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,aAAO,IAAP;AACD;;AAED,QAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAI,OAAOA,KAAK,CAACsB,QAAb,KAA0B,UAA9B,EAA0C;AACxC,eAAOC,SAAS,CAAC,iBAAD,CAAhB;AACD;;AAEDvB,MAAAA,KAAK,GAAGA,KAAK,CAACsB,QAAN,EAAR;AACD;;AAED,WAAOtB,KAAP;AACD;AAtCsB,CAAzB;AAwCA,IAAIwB,QAAQ,GAAGpB,gBAAf;AACAL,OAAO,CAACE,OAAR,GAAkBuB,QAAlB;AACAC,MAAM,CAAC1B,OAAP,GAAiBK,gBAAjB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _guidParser = require(\"../guid-parser\");\n\nconst UniqueIdentifier = {\n  id: 0x24,\n  type: 'GUIDN',\n  name: 'UniqueIdentifier',\n  declaration: function declaration() {\n    return 'uniqueidentifier';\n  },\n  resolveLength: function resolveLength() {\n    return 16;\n  },\n  writeTypeInfo: function writeTypeInfo(buffer) {\n    buffer.writeUInt8(this.id);\n    buffer.writeUInt8(0x10);\n  },\n  writeParameterData: function writeParameterData(buffer, parameter, options, cb) {\n    if (parameter.value != null) {\n      buffer.writeUInt8(0x10);\n      buffer.writeBuffer(Buffer.from((0, _guidParser.guidToArray)(parameter.value)));\n    } else {\n      buffer.writeUInt8(0);\n    }\n\n    cb();\n  },\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    if (typeof value !== 'string') {\n      if (typeof value.toString !== 'function') {\n        return TypeError('Invalid string.');\n      }\n\n      value = value.toString();\n    }\n\n    return value;\n  }\n};\nvar _default = UniqueIdentifier;\nexports.default = _default;\nmodule.exports = UniqueIdentifier;"]},"metadata":{},"sourceType":"script"}