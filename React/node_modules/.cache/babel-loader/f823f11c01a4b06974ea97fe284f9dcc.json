{"ast":null,"code":"\"use strict\";\n\nconst DoublyLinkedList = require(\"./DoublyLinkedList\");\n\nconst Deque = require(\"./Deque\");\n/**\n * Sort of a internal queue for holding the waiting\n * resource requets for a given \"priority\".\n * Also handles managing timeouts rejections on items (is this the best place for this?)\n * This is the last point where we know which queue a resourceRequest is in\n *\n */\n\n\nclass Queue extends Deque {\n  /**\n   * Adds the obj to the end of the list for this slot\n   * we completely override the parent method because we need access to the\n   * node for our rejection handler\n   * @param {any} resourceRequest [description]\n   */\n  push(resourceRequest) {\n    const node = DoublyLinkedList.createNode(resourceRequest);\n    resourceRequest.promise.catch(this._createTimeoutRejectionHandler(node));\n\n    this._list.insertEnd(node);\n  }\n\n  _createTimeoutRejectionHandler(node) {\n    return reason => {\n      if (reason.name === \"TimeoutError\") {\n        this._list.remove(node);\n      }\n    };\n  }\n\n}\n\nmodule.exports = Queue;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp5/expresstimes/node_modules/generic-pool/lib/Queue.js"],"names":["DoublyLinkedList","require","Deque","Queue","push","resourceRequest","node","createNode","promise","catch","_createTimeoutRejectionHandler","_list","insertEnd","reason","name","remove","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,gBAAgB,GAAGC,OAAO,CAAC,oBAAD,CAAhC;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,SAAD,CAArB;AAEA;;;;;;;;;AAOA,MAAME,KAAN,SAAoBD,KAApB,CAA0B;AACxB;;;;;;AAMAE,EAAAA,IAAI,CAACC,eAAD,EAAkB;AACpB,UAAMC,IAAI,GAAGN,gBAAgB,CAACO,UAAjB,CAA4BF,eAA5B,CAAb;AACAA,IAAAA,eAAe,CAACG,OAAhB,CAAwBC,KAAxB,CAA8B,KAAKC,8BAAL,CAAoCJ,IAApC,CAA9B;;AACA,SAAKK,KAAL,CAAWC,SAAX,CAAqBN,IAArB;AACD;;AAEDI,EAAAA,8BAA8B,CAACJ,IAAD,EAAO;AACnC,WAAOO,MAAM,IAAI;AACf,UAAIA,MAAM,CAACC,IAAP,KAAgB,cAApB,EAAoC;AAClC,aAAKH,KAAL,CAAWI,MAAX,CAAkBT,IAAlB;AACD;AACF,KAJD;AAKD;;AAnBuB;;AAsB1BU,MAAM,CAACC,OAAP,GAAiBd,KAAjB","sourcesContent":["\"use strict\";\n\nconst DoublyLinkedList = require(\"./DoublyLinkedList\");\nconst Deque = require(\"./Deque\");\n\n/**\n * Sort of a internal queue for holding the waiting\n * resource requets for a given \"priority\".\n * Also handles managing timeouts rejections on items (is this the best place for this?)\n * This is the last point where we know which queue a resourceRequest is in\n *\n */\nclass Queue extends Deque {\n  /**\n   * Adds the obj to the end of the list for this slot\n   * we completely override the parent method because we need access to the\n   * node for our rejection handler\n   * @param {any} resourceRequest [description]\n   */\n  push(resourceRequest) {\n    const node = DoublyLinkedList.createNode(resourceRequest);\n    resourceRequest.promise.catch(this._createTimeoutRejectionHandler(node));\n    this._list.insertEnd(node);\n  }\n\n  _createTimeoutRejectionHandler(node) {\n    return reason => {\n      if (reason.name === \"TimeoutError\") {\n        this._list.remove(node);\n      }\n    };\n  }\n}\n\nmodule.exports = Queue;\n"]},"metadata":{},"sourceType":"script"}