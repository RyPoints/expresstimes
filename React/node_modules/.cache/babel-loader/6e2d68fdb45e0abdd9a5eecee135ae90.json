{"ast":null,"code":"\"use strict\";\n/**\n * This is apparently a bit like a Jquery deferred, hence the name\n */\n\nclass Deferred {\n  constructor(Promise) {\n    this._state = Deferred.PENDING;\n    this._resolve = undefined;\n    this._reject = undefined;\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  get promise() {\n    return this._promise;\n  }\n\n  reject(reason) {\n    if (this._state !== Deferred.PENDING) {\n      return;\n    }\n\n    this._state = Deferred.REJECTED;\n\n    this._reject(reason);\n  }\n\n  resolve(value) {\n    if (this._state !== Deferred.PENDING) {\n      return;\n    }\n\n    this._state = Deferred.FULFILLED;\n\n    this._resolve(value);\n  }\n\n} // TODO: should these really live here? or be a seperate 'state' enum\n\n\nDeferred.PENDING = \"PENDING\";\nDeferred.FULFILLED = \"FULFILLED\";\nDeferred.REJECTED = \"REJECTED\";\nmodule.exports = Deferred;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp5/expresstimes/node_modules/generic-pool/lib/Deferred.js"],"names":["Deferred","constructor","Promise","_state","PENDING","_resolve","undefined","_reject","_promise","resolve","reject","state","promise","reason","REJECTED","value","FULFILLED","module","exports"],"mappings":"AAAA;AAEA;;;;AAIA,MAAMA,QAAN,CAAe;AACbC,EAAAA,WAAW,CAACC,OAAD,EAAU;AACnB,SAAKC,MAAL,GAAcH,QAAQ,CAACI,OAAvB;AACA,SAAKC,QAAL,GAAgBC,SAAhB;AACA,SAAKC,OAAL,GAAeD,SAAf;AAEA,SAAKE,QAAL,GAAgB,IAAIN,OAAJ,CAAY,CAACO,OAAD,EAAUC,MAAV,KAAqB;AAC/C,WAAKL,QAAL,GAAgBI,OAAhB;AACA,WAAKF,OAAL,GAAeG,MAAf;AACD,KAHe,CAAhB;AAID;;AAED,MAAIC,KAAJ,GAAY;AACV,WAAO,KAAKR,MAAZ;AACD;;AAED,MAAIS,OAAJ,GAAc;AACZ,WAAO,KAAKJ,QAAZ;AACD;;AAEDE,EAAAA,MAAM,CAACG,MAAD,EAAS;AACb,QAAI,KAAKV,MAAL,KAAgBH,QAAQ,CAACI,OAA7B,EAAsC;AACpC;AACD;;AACD,SAAKD,MAAL,GAAcH,QAAQ,CAACc,QAAvB;;AACA,SAAKP,OAAL,CAAaM,MAAb;AACD;;AAEDJ,EAAAA,OAAO,CAACM,KAAD,EAAQ;AACb,QAAI,KAAKZ,MAAL,KAAgBH,QAAQ,CAACI,OAA7B,EAAsC;AACpC;AACD;;AACD,SAAKD,MAAL,GAAcH,QAAQ,CAACgB,SAAvB;;AACA,SAAKX,QAAL,CAAcU,KAAd;AACD;;AAlCY,C,CAqCf;;;AACAf,QAAQ,CAACI,OAAT,GAAmB,SAAnB;AACAJ,QAAQ,CAACgB,SAAT,GAAqB,WAArB;AACAhB,QAAQ,CAACc,QAAT,GAAoB,UAApB;AAEAG,MAAM,CAACC,OAAP,GAAiBlB,QAAjB","sourcesContent":["\"use strict\";\n\n/**\n * This is apparently a bit like a Jquery deferred, hence the name\n */\n\nclass Deferred {\n  constructor(Promise) {\n    this._state = Deferred.PENDING;\n    this._resolve = undefined;\n    this._reject = undefined;\n\n    this._promise = new Promise((resolve, reject) => {\n      this._resolve = resolve;\n      this._reject = reject;\n    });\n  }\n\n  get state() {\n    return this._state;\n  }\n\n  get promise() {\n    return this._promise;\n  }\n\n  reject(reason) {\n    if (this._state !== Deferred.PENDING) {\n      return;\n    }\n    this._state = Deferred.REJECTED;\n    this._reject(reason);\n  }\n\n  resolve(value) {\n    if (this._state !== Deferred.PENDING) {\n      return;\n    }\n    this._state = Deferred.FULFILLED;\n    this._resolve(value);\n  }\n}\n\n// TODO: should these really live here? or be a seperate 'state' enum\nDeferred.PENDING = \"PENDING\";\nDeferred.FULFILLED = \"FULFILLED\";\nDeferred.REJECTED = \"REJECTED\";\n\nmodule.exports = Deferred;\n"]},"metadata":{},"sourceType":"script"}