{"ast":null,"code":"'use strict';\n\nconst net = require('net');\n\nconst EventEmitter = require('events').EventEmitter;\n\nconst Connection = require('./connection');\n\nconst ConnectionConfig = require('./connection_config'); // TODO: inherit Server from net.Server\n\n\nclass Server extends EventEmitter {\n  constructor() {\n    super();\n    this.connections = [];\n    this._server = net.createServer(this._handleConnection.bind(this));\n  }\n\n  _handleConnection(socket) {\n    const connectionConfig = new ConnectionConfig({\n      stream: socket,\n      isServer: true\n    });\n    const connection = new Connection({\n      config: connectionConfig\n    });\n    this.emit('connection', connection);\n  }\n\n  listen(port) {\n    this._port = port;\n\n    this._server.listen.apply(this._server, arguments);\n\n    return this;\n  }\n\n  close(cb) {\n    this._server.close(cb);\n  }\n\n}\n\nmodule.exports = Server;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/node_modules/mysql2/lib/server.js"],"names":["net","require","EventEmitter","Connection","ConnectionConfig","Server","constructor","connections","_server","createServer","_handleConnection","bind","socket","connectionConfig","stream","isServer","connection","config","emit","listen","port","_port","apply","arguments","close","cb","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAD,CAAnB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,QAAD,CAAP,CAAkBC,YAAvC;;AAEA,MAAMC,UAAU,GAAGF,OAAO,CAAC,cAAD,CAA1B;;AACA,MAAMG,gBAAgB,GAAGH,OAAO,CAAC,qBAAD,CAAhC,C,CAEA;;;AACA,MAAMI,MAAN,SAAqBH,YAArB,CAAkC;AAChCI,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,WAAL,GAAmB,EAAnB;AACA,SAAKC,OAAL,GAAeR,GAAG,CAACS,YAAJ,CAAiB,KAAKC,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAjB,CAAf;AACD;;AAEDD,EAAAA,iBAAiB,CAACE,MAAD,EAAS;AACxB,UAAMC,gBAAgB,GAAG,IAAIT,gBAAJ,CAAqB;AAC5CU,MAAAA,MAAM,EAAEF,MADoC;AAE5CG,MAAAA,QAAQ,EAAE;AAFkC,KAArB,CAAzB;AAIA,UAAMC,UAAU,GAAG,IAAIb,UAAJ,CAAe;AAAEc,MAAAA,MAAM,EAAEJ;AAAV,KAAf,CAAnB;AACA,SAAKK,IAAL,CAAU,YAAV,EAAwBF,UAAxB;AACD;;AAEDG,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,SAAKC,KAAL,GAAaD,IAAb;;AACA,SAAKZ,OAAL,CAAaW,MAAb,CAAoBG,KAApB,CAA0B,KAAKd,OAA/B,EAAwCe,SAAxC;;AACA,WAAO,IAAP;AACD;;AAEDC,EAAAA,KAAK,CAACC,EAAD,EAAK;AACR,SAAKjB,OAAL,CAAagB,KAAb,CAAmBC,EAAnB;AACD;;AAxB+B;;AA2BlCC,MAAM,CAACC,OAAP,GAAiBtB,MAAjB","sourcesContent":["'use strict';\n\nconst net = require('net');\nconst EventEmitter = require('events').EventEmitter;\n\nconst Connection = require('./connection');\nconst ConnectionConfig = require('./connection_config');\n\n// TODO: inherit Server from net.Server\nclass Server extends EventEmitter {\n  constructor() {\n    super();\n    this.connections = [];\n    this._server = net.createServer(this._handleConnection.bind(this));\n  }\n\n  _handleConnection(socket) {\n    const connectionConfig = new ConnectionConfig({\n      stream: socket,\n      isServer: true\n    });\n    const connection = new Connection({ config: connectionConfig });\n    this.emit('connection', connection);\n  }\n\n  listen(port) {\n    this._port = port;\n    this._server.listen.apply(this._server, arguments);\n    return this;\n  }\n\n  close(cb) {\n    this._server.close(cb);\n  }\n}\n\nmodule.exports = Server;\n"]},"metadata":{},"sourceType":"script"}