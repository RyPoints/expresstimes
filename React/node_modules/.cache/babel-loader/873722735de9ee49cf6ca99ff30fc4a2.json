{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createNTLMRequest = createNTLMRequest;\nconst NTLMFlags = {\n  NTLM_NegotiateUnicode: 0x00000001,\n  NTLM_NegotiateOEM: 0x00000002,\n  NTLM_RequestTarget: 0x00000004,\n  NTLM_Unknown9: 0x00000008,\n  NTLM_NegotiateSign: 0x00000010,\n  NTLM_NegotiateSeal: 0x00000020,\n  NTLM_NegotiateDatagram: 0x00000040,\n  NTLM_NegotiateLanManagerKey: 0x00000080,\n  NTLM_Unknown8: 0x00000100,\n  NTLM_NegotiateNTLM: 0x00000200,\n  NTLM_NegotiateNTOnly: 0x00000400,\n  NTLM_Anonymous: 0x00000800,\n  NTLM_NegotiateOemDomainSupplied: 0x00001000,\n  NTLM_NegotiateOemWorkstationSupplied: 0x00002000,\n  NTLM_Unknown6: 0x00004000,\n  NTLM_NegotiateAlwaysSign: 0x00008000,\n  NTLM_TargetTypeDomain: 0x00010000,\n  NTLM_TargetTypeServer: 0x00020000,\n  NTLM_TargetTypeShare: 0x00040000,\n  NTLM_NegotiateExtendedSecurity: 0x00080000,\n  NTLM_NegotiateIdentify: 0x00100000,\n  NTLM_Unknown5: 0x00200000,\n  NTLM_RequestNonNTSessionKey: 0x00400000,\n  NTLM_NegotiateTargetInfo: 0x00800000,\n  NTLM_Unknown4: 0x01000000,\n  NTLM_NegotiateVersion: 0x02000000,\n  NTLM_Unknown3: 0x04000000,\n  NTLM_Unknown2: 0x08000000,\n  NTLM_Unknown1: 0x10000000,\n  NTLM_Negotiate128: 0x20000000,\n  NTLM_NegotiateKeyExchange: 0x40000000,\n  NTLM_Negotiate56: 0x80000000\n};\n\nfunction createNTLMRequest(options) {\n  const domain = escape(options.domain.toUpperCase());\n  const workstation = options.workstation ? escape(options.workstation.toUpperCase()) : '';\n  let type1flags = NTLMFlags.NTLM_NegotiateUnicode + NTLMFlags.NTLM_NegotiateOEM + NTLMFlags.NTLM_RequestTarget + NTLMFlags.NTLM_NegotiateNTLM + NTLMFlags.NTLM_NegotiateOemDomainSupplied + NTLMFlags.NTLM_NegotiateOemWorkstationSupplied + NTLMFlags.NTLM_NegotiateAlwaysSign + NTLMFlags.NTLM_NegotiateVersion + NTLMFlags.NTLM_NegotiateExtendedSecurity + NTLMFlags.NTLM_Negotiate128 + NTLMFlags.NTLM_Negotiate56;\n\n  if (workstation === '') {\n    type1flags -= NTLMFlags.NTLM_NegotiateOemWorkstationSupplied;\n  }\n\n  const fixedData = Buffer.alloc(40);\n  const buffers = [fixedData];\n  let offset = 0;\n  offset += fixedData.write('NTLMSSP', offset, 7, 'ascii');\n  offset = fixedData.writeUInt8(0, offset);\n  offset = fixedData.writeUInt32LE(1, offset);\n  offset = fixedData.writeUInt32LE(type1flags, offset);\n  offset = fixedData.writeUInt16LE(domain.length, offset);\n  offset = fixedData.writeUInt16LE(domain.length, offset);\n  offset = fixedData.writeUInt32LE(fixedData.length + workstation.length, offset);\n  offset = fixedData.writeUInt16LE(workstation.length, offset);\n  offset = fixedData.writeUInt16LE(workstation.length, offset);\n  offset = fixedData.writeUInt32LE(fixedData.length, offset);\n  offset = fixedData.writeUInt8(5, offset);\n  offset = fixedData.writeUInt8(0, offset);\n  offset = fixedData.writeUInt16LE(2195, offset);\n  offset = fixedData.writeUInt8(0, offset);\n  offset = fixedData.writeUInt8(0, offset);\n  offset = fixedData.writeUInt8(0, offset);\n  fixedData.writeUInt8(15, offset);\n  buffers.push(Buffer.from(workstation, 'ascii'));\n  buffers.push(Buffer.from(domain, 'ascii'));\n  return Buffer.concat(buffers);\n}","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp/expresstimes/node_modules/tedious/lib/ntlm.js"],"names":["Object","defineProperty","exports","value","createNTLMRequest","NTLMFlags","NTLM_NegotiateUnicode","NTLM_NegotiateOEM","NTLM_RequestTarget","NTLM_Unknown9","NTLM_NegotiateSign","NTLM_NegotiateSeal","NTLM_NegotiateDatagram","NTLM_NegotiateLanManagerKey","NTLM_Unknown8","NTLM_NegotiateNTLM","NTLM_NegotiateNTOnly","NTLM_Anonymous","NTLM_NegotiateOemDomainSupplied","NTLM_NegotiateOemWorkstationSupplied","NTLM_Unknown6","NTLM_NegotiateAlwaysSign","NTLM_TargetTypeDomain","NTLM_TargetTypeServer","NTLM_TargetTypeShare","NTLM_NegotiateExtendedSecurity","NTLM_NegotiateIdentify","NTLM_Unknown5","NTLM_RequestNonNTSessionKey","NTLM_NegotiateTargetInfo","NTLM_Unknown4","NTLM_NegotiateVersion","NTLM_Unknown3","NTLM_Unknown2","NTLM_Unknown1","NTLM_Negotiate128","NTLM_NegotiateKeyExchange","NTLM_Negotiate56","options","domain","escape","toUpperCase","workstation","type1flags","fixedData","Buffer","alloc","buffers","offset","write","writeUInt8","writeUInt32LE","writeUInt16LE","length","push","from","concat"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createNTLMRequest = createNTLMRequest;\nconst NTLMFlags = {\n  NTLM_NegotiateUnicode: 0x00000001,\n  NTLM_NegotiateOEM: 0x00000002,\n  NTLM_RequestTarget: 0x00000004,\n  NTLM_Unknown9: 0x00000008,\n  NTLM_NegotiateSign: 0x00000010,\n  NTLM_NegotiateSeal: 0x00000020,\n  NTLM_NegotiateDatagram: 0x00000040,\n  NTLM_NegotiateLanManagerKey: 0x00000080,\n  NTLM_Unknown8: 0x00000100,\n  NTLM_NegotiateNTLM: 0x00000200,\n  NTLM_NegotiateNTOnly: 0x00000400,\n  NTLM_Anonymous: 0x00000800,\n  NTLM_NegotiateOemDomainSupplied: 0x00001000,\n  NTLM_NegotiateOemWorkstationSupplied: 0x00002000,\n  NTLM_Unknown6: 0x00004000,\n  NTLM_NegotiateAlwaysSign: 0x00008000,\n  NTLM_TargetTypeDomain: 0x00010000,\n  NTLM_TargetTypeServer: 0x00020000,\n  NTLM_TargetTypeShare: 0x00040000,\n  NTLM_NegotiateExtendedSecurity: 0x00080000,\n  NTLM_NegotiateIdentify: 0x00100000,\n  NTLM_Unknown5: 0x00200000,\n  NTLM_RequestNonNTSessionKey: 0x00400000,\n  NTLM_NegotiateTargetInfo: 0x00800000,\n  NTLM_Unknown4: 0x01000000,\n  NTLM_NegotiateVersion: 0x02000000,\n  NTLM_Unknown3: 0x04000000,\n  NTLM_Unknown2: 0x08000000,\n  NTLM_Unknown1: 0x10000000,\n  NTLM_Negotiate128: 0x20000000,\n  NTLM_NegotiateKeyExchange: 0x40000000,\n  NTLM_Negotiate56: 0x80000000\n};\n\nfunction createNTLMRequest(options) {\n  const domain = escape(options.domain.toUpperCase());\n  const workstation = options.workstation ? escape(options.workstation.toUpperCase()) : '';\n  let type1flags = NTLMFlags.NTLM_NegotiateUnicode + NTLMFlags.NTLM_NegotiateOEM + NTLMFlags.NTLM_RequestTarget + NTLMFlags.NTLM_NegotiateNTLM + NTLMFlags.NTLM_NegotiateOemDomainSupplied + NTLMFlags.NTLM_NegotiateOemWorkstationSupplied + NTLMFlags.NTLM_NegotiateAlwaysSign + NTLMFlags.NTLM_NegotiateVersion + NTLMFlags.NTLM_NegotiateExtendedSecurity + NTLMFlags.NTLM_Negotiate128 + NTLMFlags.NTLM_Negotiate56;\n\n  if (workstation === '') {\n    type1flags -= NTLMFlags.NTLM_NegotiateOemWorkstationSupplied;\n  }\n\n  const fixedData = Buffer.alloc(40);\n  const buffers = [fixedData];\n  let offset = 0;\n  offset += fixedData.write('NTLMSSP', offset, 7, 'ascii');\n  offset = fixedData.writeUInt8(0, offset);\n  offset = fixedData.writeUInt32LE(1, offset);\n  offset = fixedData.writeUInt32LE(type1flags, offset);\n  offset = fixedData.writeUInt16LE(domain.length, offset);\n  offset = fixedData.writeUInt16LE(domain.length, offset);\n  offset = fixedData.writeUInt32LE(fixedData.length + workstation.length, offset);\n  offset = fixedData.writeUInt16LE(workstation.length, offset);\n  offset = fixedData.writeUInt16LE(workstation.length, offset);\n  offset = fixedData.writeUInt32LE(fixedData.length, offset);\n  offset = fixedData.writeUInt8(5, offset);\n  offset = fixedData.writeUInt8(0, offset);\n  offset = fixedData.writeUInt16LE(2195, offset);\n  offset = fixedData.writeUInt8(0, offset);\n  offset = fixedData.writeUInt8(0, offset);\n  offset = fixedData.writeUInt8(0, offset);\n  fixedData.writeUInt8(15, offset);\n  buffers.push(Buffer.from(workstation, 'ascii'));\n  buffers.push(Buffer.from(domain, 'ascii'));\n  return Buffer.concat(buffers);\n}"]},"metadata":{},"sourceType":"script"}