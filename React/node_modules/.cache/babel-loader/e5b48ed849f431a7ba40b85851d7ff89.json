{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _moneyn = _interopRequireDefault(require(\"./moneyn\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst SmallMoney = {\n  id: 0x7A,\n  type: 'MONEY4',\n  name: 'SmallMoney',\n  declaration: function declaration() {\n    return 'smallmoney';\n  },\n  writeTypeInfo: function writeTypeInfo(buffer) {\n    buffer.writeUInt8(_moneyn.default.id);\n    buffer.writeUInt8(4);\n  },\n  writeParameterData: function writeParameterData(buffer, parameter, options, cb) {\n    if (parameter.value != null) {\n      buffer.writeUInt8(4);\n      buffer.writeInt32LE(parameter.value * 10000);\n    } else {\n      buffer.writeUInt8(0);\n    }\n\n    cb();\n  },\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    value = parseFloat(value);\n\n    if (isNaN(value)) {\n      return new TypeError('Invalid number.');\n    }\n\n    if (value < -214748.3648 || value > 214748.3647) {\n      return new TypeError('Value must be between -214748.3648 and 214748.3647.');\n    }\n\n    return value;\n  }\n};\nvar _default = SmallMoney;\nexports.default = _default;\nmodule.exports = SmallMoney;","map":{"version":3,"sources":["/Users/ryandavis/Development/reactapp5/expresstimes/node_modules/tedious/lib/data-types/smallmoney.js"],"names":["Object","defineProperty","exports","value","default","_moneyn","_interopRequireDefault","require","obj","__esModule","SmallMoney","id","type","name","declaration","writeTypeInfo","buffer","writeUInt8","writeParameterData","parameter","options","cb","writeInt32LE","validate","parseFloat","isNaN","TypeError","_default","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAIC,OAAO,GAAGC,sBAAsB,CAACC,OAAO,CAAC,UAAD,CAAR,CAApC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEJ,IAAAA,OAAO,EAAEI;AAAX,GAArC;AAAwD;;AAE/F,MAAME,UAAU,GAAG;AACjBC,EAAAA,EAAE,EAAE,IADa;AAEjBC,EAAAA,IAAI,EAAE,QAFW;AAGjBC,EAAAA,IAAI,EAAE,YAHW;AAIjBC,EAAAA,WAAW,EAAE,SAASA,WAAT,GAAuB;AAClC,WAAO,YAAP;AACD,GANgB;AAOjBC,EAAAA,aAAa,EAAE,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;AAC5CA,IAAAA,MAAM,CAACC,UAAP,CAAkBZ,OAAO,CAACD,OAAR,CAAgBO,EAAlC;AACAK,IAAAA,MAAM,CAACC,UAAP,CAAkB,CAAlB;AACD,GAVgB;AAWjBC,EAAAA,kBAAkB,EAAE,SAASA,kBAAT,CAA4BF,MAA5B,EAAoCG,SAApC,EAA+CC,OAA/C,EAAwDC,EAAxD,EAA4D;AAC9E,QAAIF,SAAS,CAAChB,KAAV,IAAmB,IAAvB,EAA6B;AAC3Ba,MAAAA,MAAM,CAACC,UAAP,CAAkB,CAAlB;AACAD,MAAAA,MAAM,CAACM,YAAP,CAAoBH,SAAS,CAAChB,KAAV,GAAkB,KAAtC;AACD,KAHD,MAGO;AACLa,MAAAA,MAAM,CAACC,UAAP,CAAkB,CAAlB;AACD;;AAEDI,IAAAA,EAAE;AACH,GApBgB;AAqBjBE,EAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBpB,KAAlB,EAAyB;AACjC,QAAIA,KAAK,IAAI,IAAb,EAAmB;AACjB,aAAO,IAAP;AACD;;AAEDA,IAAAA,KAAK,GAAGqB,UAAU,CAACrB,KAAD,CAAlB;;AAEA,QAAIsB,KAAK,CAACtB,KAAD,CAAT,EAAkB;AAChB,aAAO,IAAIuB,SAAJ,CAAc,iBAAd,CAAP;AACD;;AAED,QAAIvB,KAAK,GAAG,CAAC,WAAT,IAAwBA,KAAK,GAAG,WAApC,EAAiD;AAC/C,aAAO,IAAIuB,SAAJ,CAAc,qDAAd,CAAP;AACD;;AAED,WAAOvB,KAAP;AACD;AArCgB,CAAnB;AAuCA,IAAIwB,QAAQ,GAAGjB,UAAf;AACAR,OAAO,CAACE,OAAR,GAAkBuB,QAAlB;AACAC,MAAM,CAAC1B,OAAP,GAAiBQ,UAAjB","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _moneyn = _interopRequireDefault(require(\"./moneyn\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst SmallMoney = {\n  id: 0x7A,\n  type: 'MONEY4',\n  name: 'SmallMoney',\n  declaration: function declaration() {\n    return 'smallmoney';\n  },\n  writeTypeInfo: function writeTypeInfo(buffer) {\n    buffer.writeUInt8(_moneyn.default.id);\n    buffer.writeUInt8(4);\n  },\n  writeParameterData: function writeParameterData(buffer, parameter, options, cb) {\n    if (parameter.value != null) {\n      buffer.writeUInt8(4);\n      buffer.writeInt32LE(parameter.value * 10000);\n    } else {\n      buffer.writeUInt8(0);\n    }\n\n    cb();\n  },\n  validate: function validate(value) {\n    if (value == null) {\n      return null;\n    }\n\n    value = parseFloat(value);\n\n    if (isNaN(value)) {\n      return new TypeError('Invalid number.');\n    }\n\n    if (value < -214748.3648 || value > 214748.3647) {\n      return new TypeError('Value must be between -214748.3648 and 214748.3647.');\n    }\n\n    return value;\n  }\n};\nvar _default = SmallMoney;\nexports.default = _default;\nmodule.exports = SmallMoney;"]},"metadata":{},"sourceType":"script"}