{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('@react-navigation/core');\n\nvar _queryString = require('query-string');\n\nvar _queryString2 = _interopRequireDefault(_queryString);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nconst getTopNavigation = navigation => {\n  const parent = navigation.dangerouslyGetParent();\n\n  if (parent) {\n    return getTopNavigation(parent);\n  }\n\n  return navigation;\n};\n\nclass LinkWithNavigation extends _react.Component {\n  render() {\n    const _this$props = this.props,\n          children = _this$props.children,\n          params = _this$props.params,\n          routeName = _this$props.routeName,\n          routeKey = _this$props.routeKey,\n          navigation = _this$props.navigation,\n          action = _this$props.action;\n    const topNavigation = getTopNavigation(navigation);\n    const topRouter = topNavigation.router;\n\n    const navAction = action || _core.NavigationActions.navigate({\n      routeName,\n      key: routeKey,\n      params\n    });\n\n    if (!action && !routeName && !routeKey) {\n      throw new Error('Must provide a routeName, routeKey, or a navigation action prop to <Link>');\n    }\n\n    if (action && routeKey) {\n      throw new Error('Cannot specify a conflicting \"routeKey\" and a navigation \"action\" prop. Either use routeName with routeKey to specify a navigate action, or provide the specific navigation \"action\" prop.');\n    }\n\n    if (action && routeName) {\n      throw new Error('Cannot specify a conflicting \"routeName\" and a navigation \"action\" prop. Either use routeName with routeKey to specify a navigate action, or provide the specific navigation \"action\" prop.');\n    }\n\n    const navActionResponse = topRouter.getStateForAction(navAction, topNavigation.state);\n    const nextState = navActionResponse === null ? topNavigation.state : navActionResponse;\n    const pathAndParams = topRouter.getPathAndParamsForState(nextState);\n    const href = Object.keys(pathAndParams.params).length ? `/${pathAndParams.path}?${_queryString2.default.stringify(pathAndParams.params)}` : `/${pathAndParams.path}`;\n    return _react2.default.createElement('a', {\n      href: href,\n      onClick: e => {\n        navigation.dispatch(navAction);\n        e.preventDefault();\n      }\n    }, children);\n  }\n\n}\n\nconst Link = (0, _core.withNavigation)(LinkWithNavigation);\nexports.default = Link;","map":{"version":3,"sources":["/Users/ryandavis/Development/expresstimes/React/node_modules/@react-navigation/web/dist/Link.js"],"names":["Object","defineProperty","exports","value","_react","require","_react2","_interopRequireDefault","_core","_queryString","_queryString2","obj","__esModule","default","getTopNavigation","navigation","parent","dangerouslyGetParent","LinkWithNavigation","Component","render","props","children","params","routeName","routeKey","action","topNavigation","topRouter","router","navAction","NavigationActions","navigate","key","Error","navActionResponse","getStateForAction","state","nextState","pathAndParams","getPathAndParamsForState","href","keys","length","path","stringify","createElement","onClick","e","dispatch","preventDefault","Link","withNavigation"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _core = require('@react-navigation/core');\n\nvar _queryString = require('query-string');\n\nvar _queryString2 = _interopRequireDefault(_queryString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst getTopNavigation = navigation => {\n  const parent = navigation.dangerouslyGetParent();\n  if (parent) {\n    return getTopNavigation(parent);\n  }\n  return navigation;\n};\n\nclass LinkWithNavigation extends _react.Component {\n  render() {\n    const {\n      children,\n      params,\n      routeName,\n      routeKey,\n      navigation,\n      action\n    } = this.props;\n    const topNavigation = getTopNavigation(navigation);\n    const topRouter = topNavigation.router;\n    const navAction = action || _core.NavigationActions.navigate({\n      routeName,\n      key: routeKey,\n      params\n    });\n    if (!action && !routeName && !routeKey) {\n      throw new Error('Must provide a routeName, routeKey, or a navigation action prop to <Link>');\n    }\n    if (action && routeKey) {\n      throw new Error('Cannot specify a conflicting \"routeKey\" and a navigation \"action\" prop. Either use routeName with routeKey to specify a navigate action, or provide the specific navigation \"action\" prop.');\n    }\n    if (action && routeName) {\n      throw new Error('Cannot specify a conflicting \"routeName\" and a navigation \"action\" prop. Either use routeName with routeKey to specify a navigate action, or provide the specific navigation \"action\" prop.');\n    }\n    const navActionResponse = topRouter.getStateForAction(navAction, topNavigation.state);\n    const nextState = navActionResponse === null ? topNavigation.state : navActionResponse;\n    const pathAndParams = topRouter.getPathAndParamsForState(nextState);\n    const href = Object.keys(pathAndParams.params).length ? `/${pathAndParams.path}?${_queryString2.default.stringify(pathAndParams.params)}` : `/${pathAndParams.path}`;\n    return _react2.default.createElement(\n      'a',\n      {\n        href: href,\n        onClick: e => {\n          navigation.dispatch(navAction);\n          e.preventDefault();\n        }\n      },\n      children\n    );\n  }\n}\nconst Link = (0, _core.withNavigation)(LinkWithNavigation);\n\nexports.default = Link;"]},"metadata":{},"sourceType":"script"}